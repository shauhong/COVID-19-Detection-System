[{"C:\\Users\\USER\\Git Project\\CAT300\\src\\index.js":"1","C:\\Users\\USER\\Git Project\\CAT300\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Git Project\\CAT300\\src\\App.js":"3","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\index.js":"4","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Error.js":"5","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Login.js":"6","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\SignUp.js":"7","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\Backdrop.js":"8","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\Snackbar.js":"9","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\NavBar.js":"10","C:\\Users\\USER\\Git Project\\CAT300\\src\\utils\\AuthRoute.js":"11","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientProfile.js":"12","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\CreatePatient.js":"13","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Home.js":"14","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\ScrollToTop.js":"15","C:\\Users\\USER\\Git Project\\CAT300\\src\\statistics\\Statistics.js":"16","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\User.js":"17","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\backdropReducer.js":"18","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\snackbarReducer.js":"19","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\authReducer.js":"20","C:\\Users\\USER\\Git Project\\CAT300\\src\\scan\\index.js":"21","C:\\Users\\USER\\Git Project\\CAT300\\src\\information\\index.js":"22","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\UpdatePatient.js":"23","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\DeletePatient.js":"24","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\About.js":"25","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\EditUserForm.js":"26","C:\\Users\\USER\\Git Project\\CAT300\\src\\statistics\\states.js":"27","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Scan.js":"28","C:\\Users\\USER\\Git Project\\CAT300\\src\\information\\Patient.js":"29","C:\\Users\\USER\\Git Project\\CAT300\\src\\actions\\index.js":"30","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientTable.js":"31","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientCards.js":"32","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\SearchPatientBar.js":"33","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientCard.js":"34"},{"size":816,"mtime":1610676266568,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":1607232939428,"results":"37","hashOfConfig":"36"},{"size":1694,"mtime":1610638373143,"results":"38","hashOfConfig":"36"},{"size":357,"mtime":1609267191607,"results":"39","hashOfConfig":"36"},{"size":355,"mtime":1608365637639,"results":"40","hashOfConfig":"36"},{"size":3310,"mtime":1610676266568,"results":"41","hashOfConfig":"36"},{"size":7660,"mtime":1610676266568,"results":"42","hashOfConfig":"36"},{"size":668,"mtime":1610676266568,"results":"43","hashOfConfig":"36"},{"size":1318,"mtime":1609171548495,"results":"44","hashOfConfig":"36"},{"size":1566,"mtime":1610676266568,"results":"45","hashOfConfig":"36"},{"size":474,"mtime":1609265364456,"results":"46","hashOfConfig":"36"},{"size":9325,"mtime":1610638373167,"results":"47","hashOfConfig":"36"},{"size":12780,"mtime":1610638373162,"results":"48","hashOfConfig":"36"},{"size":1267,"mtime":1610676266722,"results":"49","hashOfConfig":"36"},{"size":275,"mtime":1609397836010,"results":"50","hashOfConfig":"36"},{"size":13330,"mtime":1610644723050,"results":"51","hashOfConfig":"36"},{"size":6724,"mtime":1610644723049,"results":"52","hashOfConfig":"36"},{"size":229,"mtime":1609267204586,"results":"53","hashOfConfig":"36"},{"size":494,"mtime":1609171548501,"results":"54","hashOfConfig":"36"},{"size":693,"mtime":1609171548500,"results":"55","hashOfConfig":"36"},{"size":116,"mtime":1608365637642,"results":"56","hashOfConfig":"36"},{"size":132,"mtime":1610638373172,"results":"57","hashOfConfig":"36"},{"size":12090,"mtime":1610638373169,"results":"58","hashOfConfig":"36"},{"size":1719,"mtime":1610638373163,"results":"59","hashOfConfig":"36"},{"size":2055,"mtime":1610676266763,"results":"60","hashOfConfig":"36"},{"size":6969,"mtime":1609605898925,"results":"61","hashOfConfig":"36"},{"size":3272,"mtime":1610644723050,"results":"62","hashOfConfig":"36"},{"size":12789,"mtime":1610677872590,"results":"63","hashOfConfig":"36"},{"size":435,"mtime":1610638373171,"results":"64","hashOfConfig":"36"},{"size":515,"mtime":1609267050682,"results":"65","hashOfConfig":"36"},{"size":10454,"mtime":1610638373169,"results":"66","hashOfConfig":"36"},{"size":6802,"mtime":1610638373165,"results":"67","hashOfConfig":"36"},{"size":1147,"mtime":1609407471898,"results":"68","hashOfConfig":"36"},{"size":2668,"mtime":1610638373165,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jpvaz3",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"C:\\Users\\USER\\Git Project\\CAT300\\src\\index.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\reportWebVitals.js",[],["150","151"],"C:\\Users\\USER\\Git Project\\CAT300\\src\\App.js",["152","153","154","155"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Error from \"./pages/Error\";\r\nimport { useEffect } from 'react';\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Scan from \"./scan\";\r\nimport Patients from \"./information\";\r\nimport User from \"./pages/User\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Snackbar from \"./components/Snackbar\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport PatientProfile from \"./components/PatientProfile\";\r\nimport CreatePatient from \"./components/CreatePatient\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport AuthRoute from \"./utils/AuthRoute\";\r\nimport Backdrop from \"./components/Backdrop\";\r\n\r\nfunction App() {\r\n  useEffect(()=>{document.title=\"COVID-19 Detection System\"},[]);\r\n  const signIn = useSelector(state => state.auth.signIn);\r\n  return (\r\n    <Router>\r\n      <Backdrop />\r\n      <NavBar />\r\n      <Snackbar />\r\n      <ScrollToTop />\r\n      <Switch>\r\n        <AuthRoute path=\"/users\" component={User} />\r\n        <AuthRoute path=\"/scan\" component={Scan} />\r\n        <AuthRoute path=\"/patients/:id\" component={PatientProfile} />\r\n        <AuthRoute path=\"/patients\" component={Patients} />\r\n        <AuthRoute path=\"/statistics\" component={Statistics} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={SignUp} />s\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"*\" component={Error} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\index.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Error.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Login.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\SignUp.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\Backdrop.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\Snackbar.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\NavBar.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\utils\\AuthRoute.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientProfile.js",["156","157","158","159","160","161"],"import React, {useState, useEffect} from 'react';\r\nimport './Details.css';\r\nimport Modal from 'react-modal';\r\nimport UpdatePatient from \"./UpdatePatient\";\r\nimport DeletePatient from \"./DeletePatient\";\r\nimport { ViewAgendaRounded } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\nfunction PatientProfile(props){\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        marginTop:'30px',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n        marginLeft:'20px',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '10px',\r\n        marginBottom:'10px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '18px',\r\n        fontWeight: '700',\r\n        color: '#2B547E',\r\n    };\r\n\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '20px',\r\n    };\r\n\r\n    const id = props.match.params.id;\r\n    console.log(props);\r\n    const [editModalIsOpen,setEditModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen,setDeleteModalIsOpen] = useState(false);\r\n    \r\n    const [name, setName] = useState(\"\"); \r\n    const [ic, setIC] = useState(\"\"); \r\n    const [age, setAge] = useState(\"\"); \r\n    const [gender, setGender] = useState(\"\"); \r\n    const [phone, setPhone] = useState(\"\"); \r\n    const [address, setAddress] = useState(\"\"); \r\n    const [postal, setPostal] = useState(\"\"); \r\n    const [negeri, setNegeri] = useState(\"\"); \r\n    const [city, setCity] = useState(\"\"); \r\n    const [result, setResult] = useState(\"\"); \r\n    const [image, setImage] = useState(\"\"); \r\n\r\n    const axios = require('axios');\r\n    const token = useSelector(state=>state.auth.token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'authorization': token,\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/patients/${id}`, {headers:headers})\r\n        .then((response) => {\r\n            \r\n            setName(response.data.name);\r\n            setIC(response.data.ic);\r\n            setAge(response.data.age);\r\n            setGender(response.data.gender);\r\n            setPhone(response.data.phone);\r\n            setAddress(response.data.address);\r\n            setPostal(response.data.postal);\r\n            setNegeri(response.data.negeri);\r\n            setCity(response.data.city);\r\n            setResult(response.data.result);\r\n            setImage(response.data.image);\r\n            \r\n        })\r\n        .catch((err)=>console.log(err));\r\n    })\r\n\r\n    return(\r\n        \r\n \r\n        <div className=\"page\">\r\n            \r\n\r\n            <div className=\"header\">\r\n                \r\n                <h4 className=\"title\">\r\n                    <b>{name}</b>\r\n                </h4>\r\n                <div className=\"buttons\">\r\n                    {/* <button onClick={() => setEditModalIsOpen(true)} className=\"editButton\">Edit</button> */}\r\n                    <IconButton onClick={() => setEditModalIsOpen(true)} className=\"editButton\">\r\n                        <EditIcon className=\"editIcon\"/>\r\n                    </IconButton>\r\n                    <Modal classname=\"EditModal\"\r\n                        isOpen={editModalIsOpen} \r\n                        onRequestClose={() => setEditModalIsOpen(false)}\r\n                        style={\r\n                        {\r\n                            overlay:{\r\n                            backgroundColor:'rgba(0,0,0,0.75)',\r\n                            }, \r\n                            content:{\r\n                                marginTop:'120px',\r\n                                marginLeft: 'auto',\r\n                                marginRight:'auto',\r\n                                marginBottom:'80px',\r\n                                width: '45%',\r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <UpdatePatient id={id} name={name} ic={ic} age={age} gender={gender} phone={phone} address={address} postal={postal} negeri={negeri} city={city} result={result} image={image}/>\r\n                        {/* <button className=\"closeButton\" onClick={() => setEditModalIsOpen(false)}>Close</button> */}\r\n                        <button className=\"closeButton\" onClick={() => setEditModalIsOpen(false)}>Close</button>\r\n                    </Modal>\r\n                    \r\n\r\n                    {/* <button onClick={() => setDeleteModalIsOpen(true)} className=\"deleteButton\">Delete</button> */}\r\n                    <IconButton color={'action'} onClick={() => setDeleteModalIsOpen(true)} className=\"deleteButton\">\r\n                        <DeleteForeverIcon className=\"deleteIcon\"/>\r\n                    </IconButton>\r\n                    \r\n                    <Modal classname=\"DeleteModal\"\r\n                        isOpen={deleteModalIsOpen} \r\n                        onRequestClose={() => setDeleteModalIsOpen(false)}\r\n                        style={\r\n                        {\r\n                            overlay:{\r\n                                backgroundColor:'rgba(0,0,0,0.75)',\r\n                            }, \r\n                            content:{\r\n                                height:\"180px\",\r\n                                marginTop:'250px',\r\n                                marginLeft: 'auto',\r\n                                marginRight:'auto',\r\n                                width: '30%', \r\n                                \r\n                            \r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <DeletePatient id={id} />\r\n                        <div>\r\n                            <button className=\"closeButton\" onClick={() => setDeleteModalIsOpen(false)}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <div className=\"Flexbox\">\r\n                <div className=\"flexItem\"> \r\n                    <div className=\"image\">\r\n                        <img height=\"450px\" width=\"450px\" src={`http://localhost:5000/assets/images/${image.substring(13)}`}></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flexItem\">\r\n                    <div style={form} >\r\n                        \r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>NRIC No.</label>\r\n                                <p style={formControl}>{ic} </p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Age</label>\r\n                                    <p style={formControl}>{age} </p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>Gender</label>\r\n                                <p style={formControl}>{gender} </p>\r\n                            </div>  \r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>Contact No.</label>\r\n                                <p style={formControl}>{phone} </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Address</label>\r\n                                    <p style={formControl}>{address + \", \" + postal + \" \" + city + \", \" + negeri + \".\" } </p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Result</label>\r\n                                    <p style={formControl}>{result} </p>\r\n                            </div>\r\n                        </div>            \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PatientProfile;","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\CreatePatient.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport { SentimentSatisfied } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreatePatient(props){\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '30px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['','Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n    \r\n    const [name, setName] = useState(\"\"); \r\n    const [ic, setIC] = useState(\"\"); \r\n    const [age, setAge] = useState(\"\"); \r\n    const [gender, setGender] = useState(\"\"); \r\n    const [phone, setPhone] = useState(\"\"); \r\n    const [address, setAddress] = useState(\"\"); \r\n    const [postal, setPostal] = useState(\"\"); \r\n    const [negeri, setNegeri] = useState(\"\"); \r\n    const [city, setCity] = useState(\"\"); \r\n    const [image, setImage] = useState(\"\"); \r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [icError, setIcError] = useState(\"\");\r\n    const [ageError, setAgeError] = useState(\"\");\r\n    const [genderError, setGenderError] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [addressError, setAddressError] = useState(\"\");\r\n    const [postalError, setPostalError] = useState(\"\");\r\n    const [negeriError, setNegeriError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n    const [imageError, setImageError] = useState(\"\");\r\n\r\n\r\n    const formValidation = () => {\r\n        const nameError = {};\r\n        const icError = {};\r\n        const ageError = {};\r\n        const genderError = {};\r\n        const phoneError = {};\r\n        const addressError = {};\r\n        const postalError = {};\r\n        const negeriError = {};\r\n        const cityError = {};\r\n        //const resultError = {};\r\n        const imageError = {};\r\n\r\n\r\n        let isValid = true;\r\n\r\n        if(name.trim().length < 1){\r\n            nameError.emptyName = \"Please fill in patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.emptyName));\r\n            isValid = false;\r\n        }\r\n\r\n        if (/[./'][^a-zA-Z][a-zA-Z\\s]*$/.test(name)){\r\n            nameError.notName = \"Please fill in a valid patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.notName));\r\n            isValid = false;\r\n        }\r\n\r\n        if(ic.trim().length < 1){\r\n            icError.emptyIc = \"Please fill in patient's NRIC number.\";\r\n            dispatch(setSnackbar(true,'error', icError.emptyIc));\r\n            isValid = false;\r\n        }\r\n\r\n        if(!Number(age)){\r\n            ageError.notAge = \"Patient's age can only contain numbers.\";\r\n            dispatch(setSnackbar(true,'error', ageError.notAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if(age.trim().length < 1){\r\n            ageError.emptyAge = \"Please fill in patient's age.\";\r\n            dispatch(setSnackbar(true,'error', ageError.emptyAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if(phone.trim().length < 1){\r\n            phoneError.emptyPhone = \"Please fill in patient's contact number.\";\r\n            dispatch(setSnackbar(true,'error', phoneError.emptyPhone));\r\n            isValid = false;\r\n        }\r\n\r\n        if(address.trim().length < 1){\r\n            addressError.emptyAddress = \"Please fill in patient's address.\";\r\n            dispatch(setSnackbar(true,'error', addressError.emptyAddress));\r\n            isValid = false;\r\n        }\r\n\r\n        if(!Number(postal)){\r\n            postalError.notPostal = \"Patient's age can only contain numbers.\";\r\n            dispatch(setSnackbar(true,'error', postalError.notPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if(postal.trim().length < 1){\r\n            postalError.emptyPostal = \"Please fill in patient's postal code.\";\r\n            dispatch(setSnackbar(true,'error', postalError.emptyPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if(negeri.trim().length < 1){\r\n            negeriError.emptyNegeri = \"Please fill in patient's state of \";\r\n            dispatch(setSnackbar(true,'error', negeriError.emptyNegeri));\r\n            isValid = false;\r\n        }\r\n\r\n        if(city.trim().length < 1){\r\n            cityError.emptyCity = \"Please fill in patient's city.\";\r\n            dispatch(setSnackbar(true,'error', cityError.emptyCity));\r\n            isValid = false;\r\n        }\r\n\r\n        setNameError(nameError);\r\n        setIcError(icError);\r\n        setAgeError(ageError);\r\n        setGenderError(genderError);\r\n        setPhoneError(phoneError);\r\n        setAddressError(addressError);\r\n        setPostalError(postalError);\r\n        setNegeriError(negeriError);\r\n        setCityError(cityError);\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.files[0]);\r\n    }\r\n\r\n\r\n    const axios = require('axios');\r\n    const token = useSelector(state=>state.auth.token);\r\n\r\n    const headers = {\r\n        'authorization': token,\r\n    }\r\n\r\n    console.log(token);   \r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        if(isValid){\r\n            const patient = {\r\n                name: name,\r\n                ic: ic,\r\n                age: age,\r\n                gender: gender,\r\n                phone: phone,\r\n                address: address,\r\n                postal: postal,\r\n                negeri: negeri,\r\n                city: city,\r\n                image: image,\r\n            }\r\n\r\n            const formData = new FormData();\r\n            for(let key in patient){\r\n                formData.append(key,patient[key]);\r\n            }\r\n            \r\n            axios.post('http://localhost:5000/patients/add', formData, {headers:headers})\r\n            .then((response)=> {\r\n                dispatch(setSnackbar(true,'success',\"Patient profile added successfully!\"));\r\n                window.setTimeout(function(){window.location.reload()},800);\r\n            })  \r\n            .catch(function(error) {\r\n                if (error.response) {\r\n                  console.log(error.response.data);\r\n                  dispatch(setSnackbar(true,'error',\"No image is uploaded.\"));\r\n                } \r\n              }\r\n            )         \r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit = {onSubmit}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder=\"Name\" name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder=\"NRIC No.\" name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder=\"Age\" name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select style={formControl} onChange={changeGender}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>Gender</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder=\"Contact No.\" name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder=\"Address\" name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder=\"Postal Code\" name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select style={formControl} onChange={changeNegeri}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>State</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input onChange={changeImage} style={formControl} type=\"file\" accept=\"image/*\"/>\r\n                </div>\r\n                    \r\n                 \r\n                <input type=\"submit\" value=\"Save\" style={button} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePatient;","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Home.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\ScrollToTop.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\statistics\\Statistics.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { states } from \"./states\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: 800\r\n  }\r\n}));\r\n\r\nfunction Statistics(props) {\r\n  const container = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  };\r\n\r\n  const innerContainer = {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"800px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  };\r\n\r\n  const columns = {\r\n    columnCount: 3,\r\n    columnGap: \"40px\",\r\n    columnRule: \"1px solid lightblue\"\r\n  };\r\n\r\n  const row = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  };\r\n\r\n  const charts = {\r\n    minHeight: 600,\r\n    minWidth: 800,\r\n    marginTop: 10\r\n  };\r\n\r\n  const blueCards = {\r\n    background: \"#1D5BB8\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const greenCards = {\r\n    background: \"#8EC3A7\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const yellowCards = {\r\n    background: \"#F0CB69\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const redCards = {\r\n    background: \"#DC5356\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const purpleCards = {\r\n    background: \"#9F6DAA\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const mapTitle = {\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"1.2\",\r\n    fontWeight: \"900\"\r\n  };\r\n\r\n  const [data, setData] = useState(\"\");\r\n  const [allState, setAllState] = useState([]);\r\n  const [allFacility, setAllFacility] = useState([]);\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"1\");\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const renderMarkers = () => {\r\n    var data = [];\r\n    states.map((state, index) => {\r\n      if (allState) console.log(allState[\"Penang\"]);\r\n\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {state.infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const renderMarkersFacility = () => {\r\n    var data = [];\r\n    // console.log(allState);\r\n    states.map((state, index) => {\r\n      switch (index) {\r\n        case 0:\r\n          var infected = allFacility[\"Kedah\"];\r\n          break;\r\n        case 1:\r\n          var infected = allFacility[\"Perak\"];\r\n          break;\r\n        case 2:\r\n          var infected = allFacility[\"Perlis\"];\r\n          break;\r\n        case 3:\r\n          var infected = allFacility[\"Penang\"];\r\n          break;\r\n        case 4:\r\n          var infected = allFacility[\"Negeri Sembilan\"];\r\n          break;\r\n        case 5:\r\n          var infected = allFacility[\"Kelantan\"];\r\n          break;\r\n        case 6:\r\n          var infected = allFacility[\"Sabah\"];\r\n          break;\r\n        case 7:\r\n          var infected = allFacility[\"Pahang\"];\r\n          break;\r\n        case 8:\r\n          var infected = allFacility[\"Selangor\"];\r\n          break;\r\n        case 9:\r\n          var infected = allFacility[\"Johor\"];\r\n          break;\r\n        case 10:\r\n          var infected = allFacility[\"Wilayah Persekutuan\"];\r\n          break;\r\n        case 11:\r\n          var infected = allFacility[\"Melaka\"];\r\n          break;\r\n        case 12:\r\n          var infected = allFacility[\"Sarawak\"];\r\n          break;\r\n        case 13:\r\n          var infected = allFacility[\"Terengganu\"];\r\n          break;\r\n\r\n        default:\r\n          var infected = \"0\";\r\n          break;\r\n      }\r\n\r\n      //console.log(index + typeof index);\r\n\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const renderMarkersState = () => {\r\n    var data = [];\r\n    // console.log(allState);\r\n    states.map((state, index) => {\r\n      switch (index) {\r\n        case 0:\r\n          var infected = allState[\"Kedah\"];\r\n          break;\r\n        case 1:\r\n          var infected = allState[\"Perak\"];\r\n          break;\r\n        case 2:\r\n          var infected = allState[\"Perlis\"];\r\n          break;\r\n        case 3:\r\n          var infected = allState[\"Penang\"];\r\n          break;\r\n        case 4:\r\n          var infected = allState[\"Negeri Sembilan\"];\r\n          break;\r\n        case 5:\r\n          var infected = allState[\"Kelantan\"];\r\n          break;\r\n        case 6:\r\n          var infected = allState[\"Sabah\"];\r\n          break;\r\n        case 7:\r\n          var infected = allState[\"Pahang\"];\r\n          break;\r\n        case 8:\r\n          var infected = allState[\"Selangor\"];\r\n          break;\r\n        case 9:\r\n          var infected = allState[\"Johor\"];\r\n          break;\r\n        case 10:\r\n          var infected = allState[\"Wilayah Persekutuan\"];\r\n          break;\r\n        case 11:\r\n          var infected = allState[\"Melaka\"];\r\n          break;\r\n        case 12:\r\n          var infected = allState[\"Sarawak\"];\r\n          break;\r\n        case 13:\r\n          var infected = allState[\"Terengganu\"];\r\n          break;\r\n\r\n        default:\r\n          var infected = \"0\";\r\n          break;\r\n      }\r\n\r\n      //console.log(index + typeof index);\r\n\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const renderMap = () => {\r\n    return (\r\n      <div>\r\n        <div id=\"map\" style={{ height: 420, width: 780 }}>\r\n          <h2 style={mapTitle}>\r\n            {value == 1 && \"Malaysia State COVID-19 Daily Total New Cases\"}\r\n            {value == 2 && \"Number of All Patients for Each States\"}\r\n            {value == 3 && \"Number of Patients of the Facility for Each States\"}\r\n          </h2>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAdWEmhfQyer_yx4JlOAcJxkfjVKN3TcJg\"\r\n            }}\r\n            defaultCenter={{\r\n              lat: 3.9743,\r\n              lng: 102.4381\r\n            }}\r\n            defaultZoom={7.5}\r\n          >\r\n            {value == 1 && renderMarkers()}\r\n            {value == 2 && renderMarkersState()}\r\n            {value == 3 && renderMarkersFacility()}\r\n          </GoogleMapReact>\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              color: \"rgb(170, 170, 170)\",\r\n              marginBottom: 15\r\n            }}\r\n          >\r\n            Source: Health Ministry • Cases are updated on 12am daily.\r\n          </p>\r\n          <div style={{ height: 30 }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getDataWithFetch = async () => {\r\n    const response = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/6t65lJVfs3d8s6aKc/records/LATEST?disableRedirect=true\"\r\n    );\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    fetch(\"http://localhost:5000/patients/states/all\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        //console.log(json);\r\n        setAllState(json);\r\n      });\r\n\r\n    fetch(\"http://localhost:5000/patients/facility/all\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: token\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        //console.log(json);\r\n        setAllFacility(json);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataWithFetch();\r\n  });\r\n\r\n  return (\r\n    <div style={container}>\r\n      {fetchData()}\r\n      <span class=\"malaysia-state-flag-icon malaysia-state-flag-icon-mlk\"></span>\r\n      <div style={innerContainer}>\r\n        <div style={row}>\r\n          <div style={blueCards}>\r\n            Total Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.testedPositive}\r\n            </h2>\r\n          </div>\r\n          <div style={greenCards}>\r\n            Total Recovered:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.recovered}\r\n            </h2>\r\n          </div>\r\n          <div style={yellowCards}>\r\n            Total Active Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.activeCases}\r\n            </h2>\r\n          </div>\r\n          <div style={redCards}>\r\n            Total Death Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.deceased}\r\n            </h2>\r\n          </div>\r\n          <div style={purpleCards}>\r\n            Total ICU:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.inICU}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            color: \"rgb(170, 170, 170)\",\r\n            marginBottom: 15\r\n          }}\r\n        >\r\n          Source: Health Ministry • Active cases means total confirmed cases\r\n          minus deaths and recoveries.\r\n        </p>\r\n\r\n        <embed\r\n          style={charts}\r\n          src=\"https://flo.uri.sh/visualisation/1985060/embed\"\r\n        ></embed>\r\n      </div>\r\n      <div style={{ height: 30 }} />\r\n\r\n      <div className={classes.root}>\r\n        <TabContext value={value}>\r\n          <AppBar position=\"static\">\r\n            <TabList\r\n              variant=\"fullWidth\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              onChange={handleChange}\r\n              aria-label=\"simple tabs example\"\r\n            >\r\n              <Tab label=\"Malaysia Daily New Cases\" value=\"1\" />\r\n              <Tab label=\"Total Cases in System\" value=\"2\" />\r\n              <Tab label=\"Total Cases of HealthCare Facility\" value=\"3\" />\r\n            </TabList>\r\n          </AppBar>\r\n          {value == \"1\" && <TabPanel value=\"1\">{renderMap()}</TabPanel>}\r\n\r\n          {value == \"2\" && <TabPanel value=\"2\">{renderMap()}</TabPanel>}\r\n          {value == \"3\" && <TabPanel value=\"3\">{renderMap()}</TabPanel>}\r\n        </TabContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\User.js",["223","224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../components/Details.css\";\r\nimport Modal from \"react-modal\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport EditForm from \"../components/EditUserForm\";\r\n// import DeleteWindow from \"./DeleteWindow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nfunction User(props) {\r\n  const wrapper = {\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\"\r\n  };\r\n\r\n  const form = {\r\n    display: \"flex\",\r\n    marginTop: \"30px\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    gap: \"15px\",\r\n    minWidth: \"250px\",\r\n    width: \"100%\",\r\n    marginLeft: \"20px\"\r\n  };\r\n  const row = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    gap: \"10px\",\r\n    marginBottom: \"10px\"\r\n  };\r\n  const title = {\r\n    fontSize: \"26px\",\r\n    fontWeight: \"700\",\r\n    margin: \"15px\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  const label = {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    color: \"#2B547E\"\r\n  };\r\n\r\n  const button = {\r\n    width: \"100%\",\r\n    height: \"32px\",\r\n    backgroundColor: \"darkblue\",\r\n    color: \"rgb(255,255,255)\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"5px\"\r\n  };\r\n  const formGroup = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    gap: \"5px\"\r\n  };\r\n  const formControl = {\r\n    width: \"100%\",\r\n    height: \"20px\"\r\n  };\r\n\r\n  const id = props.match.params.id;\r\n  const token = useSelector(state => state.auth.token);\r\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ic, setIC] = useState(\"\");\r\n  // const [age, setAge] = useState(\"\");\r\n  // const [gender, setGender] = useState(\"\");\r\n  // const [phone, setPhone] = useState(\"\");\r\n  // const [address, setAddress] = useState(\"\");\r\n  // const [postal, setPostal] = useState(\"\");\r\n  // const [negeri, setNegeri] = useState(\"\");\r\n  // const [city, setCity] = useState(\"\");\r\n  // const [result, setResult] = useState(\"\");\r\n  // const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/users/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        // prettier-ignore\r\n        \"Authorization\": token,\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json) {\r\n          setUser(json);\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h4 className=\"title\">\r\n          <b>{user.name}</b>\r\n        </h4>\r\n        <div className=\"buttons\">\r\n          {/* <button onClick={() => setEditModalIsOpen(true)} className=\"editButton\">Edit</button> */}\r\n          <IconButton\r\n            onClick={() => setEditModalIsOpen(true)}\r\n            className=\"editButton\"\r\n          >\r\n            <EditIcon className=\"editIcon\" />\r\n          </IconButton>\r\n          <Modal\r\n            classname=\"EditModal\"\r\n            isOpen={editModalIsOpen}\r\n            onRequestClose={() => setEditModalIsOpen(false)}\r\n            style={{\r\n              overlay: {\r\n                backgroundColor: \"rgba(0,0,0,0.75)\"\r\n              },\r\n              content: {\r\n                marginTop: \"80px\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"50%\"\r\n              }\r\n            }}\r\n          >\r\n            <EditForm token={token} user={user} />\r\n            <button\r\n              className=\"closeButton\"\r\n              onClick={() => setEditModalIsOpen(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Flexbox\">\r\n        <div className=\"flexItem\">\r\n          <div className=\"image\">\r\n            <img\r\n              height=\"350px\"\r\n              width=\"350px\"\r\n              src=\"https://innmind.com/assets/placeholders/no_avatar-3d6725770296b6a1cce653a203d8f85dcc5298945b71fa7360e3d9aa4a3fc054.svg\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexItem\">\r\n          <div style={form}>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Name</label>\r\n                <p style={formControl}>{user.name} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Email</label>\r\n                <p style={formControl}>{user.email} </p>\r\n              </div>\r\n            </div>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Password</label>\r\n                <p style={formControl}>*********</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Phone</label>\r\n                <p style={formControl}>{user.phone}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Healthcare Facility Name </label>\r\n                <p style={formControl}>{user.facilityName} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Healthcare Facility Address</label>\r\n                <p style={formControl}>{user.facilityAddress} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Postal Code</label>\r\n                <p style={formControl}>{user.postal} </p>\r\n              </div>\r\n            </div>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>State</label>\r\n                <p style={formControl}>{user.state} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>City</label>\r\n                <p style={formControl}>{user.city} </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\backdropReducer.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\snackbarReducer.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\reducers\\authReducer.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\scan\\index.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\information\\index.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\UpdatePatient.js",["230","231","232","233","234","235","236","237","238","239","240","241","242"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport axios from 'axios';\r\n\r\nfunction UpdatePatient(props){\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '25px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n\r\n    const [name, setName] = useState(props.name); \r\n    const [ic, setIC] = useState(props.ic); \r\n    const [age, setAge] = useState(props.age); \r\n    const [gender, setGender] = useState(props.gender); \r\n    const [phone, setPhone] = useState(props.phone); \r\n    const [address, setAddress] = useState(props.address); \r\n    const [postal, setPostal] = useState(props.postal); \r\n    const [negeri, setNegeri] = useState(props.negeri); \r\n    const [city, setCity] = useState(props.city); \r\n    const [image, setImage] = useState(props.image);\r\n    const id = props.id;\r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [icError, setIcError] = useState(\"\");\r\n    const [ageError, setAgeError] = useState(\"\");\r\n    const [genderError, setGenderError] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [addressError, setAddressError] = useState(\"\");\r\n    const [postalError, setPostalError] = useState(\"\");\r\n    const [negeriError, setNegeriError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n\r\n    const formValidation = () => {\r\n        const nameError = {};\r\n        const icError = {};\r\n        const ageError = {};\r\n        const genderError = {};\r\n        const phoneError = {};\r\n        const addressError = {};\r\n        const postalError = {};\r\n        const negeriError = {};\r\n        const cityError = {};\r\n\r\n        let isValid = true;\r\n\r\n        if(name.trim().length < 1){\r\n            nameError.emptyName = \"Please fill in patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.emptyName));\r\n            isValid = false;\r\n        }\r\n\r\n        if (/[^a-zA-Z ][a-zA-Z\\s]*$/.test(name)){\r\n            nameError.notName = \"Please fill in a valid patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.notName));\r\n            isValid = false;\r\n        }\r\n\r\n        if(ic.trim().length < 1){\r\n            icError.emptyIc = \"Please fill in patient's NRIC number.\";\r\n            dispatch(setSnackbar(true,'error', icError.emptyIc));\r\n            isValid = false;\r\n        }\r\n\r\n        if(!Number(age)){\r\n            ageError.notAge = \"Patient's age can only contain numbers.\";\r\n            dispatch(setSnackbar(true,'error', ageError.notAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if((age.toString()).trim().length < 1){\r\n            ageError.emptyAge = \"Please fill in patient's age.\";\r\n            dispatch(setSnackbar(true,'error', ageError.emptyAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if(phone.trim().length < 1){\r\n            phoneError.emptyPhone = \"Please fill in patient's contact number.\";\r\n            dispatch(setSnackbar(true,'error', phoneError.emptyPhone));\r\n            isValid = false;\r\n        }\r\n\r\n        if(address.trim().length < 1){\r\n            addressError.emptyAddress = \"Please fill in patient's address.\";\r\n            dispatch(setSnackbar(true,'error', addressError.emptyAddress));\r\n            isValid = false;\r\n        }\r\n\r\n        if(!Number(postal)){\r\n            postalError.notPostal = \"Patient's age can only contain numbers.\";\r\n            dispatch(setSnackbar(true,'error', postalError.notPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if((postal.toString()).trim().length < 1){\r\n            postalError.emptyPostal = \"Please fill in patient's postal code.\";\r\n            dispatch(setSnackbar(true,'error', postalError.emptyPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if(negeri.trim().length < 1){\r\n            negeriError.emptyNegeri = \"Please fill in patient's state of \";\r\n            dispatch(setSnackbar(true,'error', negeriError.emptyNegeri));\r\n            isValid = false;\r\n        }\r\n\r\n        if(city.trim().length < 1){\r\n            cityError.emptyCity = \"Please fill in patient's city.\";\r\n            dispatch(setSnackbar(true,'error', cityError.emptyCity));\r\n            isValid = false;\r\n        }\r\n\r\n        setNameError(nameError);\r\n        setIcError(icError);\r\n        setAgeError(ageError);\r\n        setGenderError(genderError);\r\n        setPhoneError(phoneError);\r\n        setAddressError(addressError);\r\n        setPostalError(postalError);\r\n        setNegeriError(negeriError);\r\n        setCityError(cityError);\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    // const changeImage = (event) => {\r\n    //     setImage(event.target.value);\r\n    // }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.files[0]);\r\n    }\r\n\r\n\r\n    const token = useSelector(state=>state.auth.token);\r\n    const headers = {\r\n        'authorization': token,\r\n    }\r\n\r\n    \r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        if(isValid){\r\n            const patient = {\r\n                name: name,\r\n                ic: ic,\r\n                age: age,\r\n                gender: gender,\r\n                phone: phone,\r\n                address: address,\r\n                postal: postal,\r\n                negeri: negeri,\r\n                city: city,\r\n                image: image,\r\n            }\r\n    \r\n            axios.post(`http://localhost:5000/patients/update/${id}`, patient, {headers:headers})\r\n            .then((response)=> {\r\n                dispatch(setSnackbar(true,'success',\"Patient profile updated successfully!\"));\r\n                window.setTimeout(function(){window.location.reload()},600);\r\n            })  \r\n            .catch((err)=>console.log(err))   \r\n        }        \r\n    }\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>Edit Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit={onSubmit} >\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder={name} name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder={ic} name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder={age} name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select onChange={changeGender} style={formControl}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>{props.gender}</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder={phone} name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder={address} name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder={postal} name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select onChange={changeNegeri} style={formControl}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>{props.negeri}</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder={city} name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePatient;","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\DeletePatient.js",["243","244","245"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport axios from 'axios';\r\n\r\nfunction DeletePatient(props){\r\n\r\n    const subtext = {\r\n        marginTop:\"15px\",\r\n        marginBottom: \"30px\",\r\n    }\r\n\r\n    const closeButton = {\r\n        backgroundColor: 'black',\r\n        color: \"white\",\r\n        paddingLeft: \"8px\",\r\n        paddingRight: \"8px\",\r\n    }\r\n\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n    }\r\n\r\n    const id = props.id;\r\n    const token = useSelector(state=>state.auth.token);\r\n    const headers = {\r\n        'authorization': token,\r\n    }\r\n    const axios = require('axios');\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (event) =>{\r\n\r\n        event.preventDefault();\r\n\r\n        axios.delete(`http://localhost:5000/patients/${id}`,{headers:headers})\r\n        .then(response => {\r\n            dispatch(setSnackbar(true,'success',\"Patient profile deleted successfully!\"));\r\n            window.setTimeout(function(){window.location.href = \"http://localhost:3000/patients/\"},800);\r\n        })\r\n        .catch((err)=>console.log(err));   \r\n\r\n\r\n    }\r\n           \r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit = {onSubmit} >\r\n                <div style={title}>\r\n                    Delete Patient\r\n                </div>\r\n                <div style={subtext}>\r\n                    <p>Confirm deletion?</p>\r\n                </div>\r\n                <input style={closeButton} type=\"submit\" value=\"Delete\" className=\"closeButton\"/>\r\n            </form>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default DeletePatient;","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\About.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\EditUserForm.js",["246","247","248","249"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn, setSnackbar } from \"../actions\";\r\n\r\nfunction EditUserForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const wrapper = {\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"90%\"\r\n  };\r\n\r\n  const button = {\r\n    height: \"32px\",\r\n    width: \"100%\"\r\n  };\r\n  const subtext = {\r\n    fontSize: \"12px\",\r\n    fontWeight: \"700\",\r\n    textAlign: \"right\",\r\n    width: \"100%\",\r\n    marginTop: \"-10px\",\r\n    padding: \"0\"\r\n  };\r\n  const states = [\r\n    \"\",\r\n    \"Wilayah Persekutuan\",\r\n    \"Selangor\",\r\n    \"Johor\",\r\n    \"Kedah\",\r\n    \"Kelantan\",\r\n    \"Melaka\",\r\n    \"Negeri Sembilan\",\r\n    \"Pahang\",\r\n    \"Penang\",\r\n    \"Perak\",\r\n    \"Perlis\",\r\n    \"Sabah\",\r\n    \"Sarawak\",\r\n    \"Terengganu\"\r\n  ];\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(props.user.email);\r\n  const [password, setPassword] = useState(props.user.password);\r\n  const [name, setName] = useState(props.user.name);\r\n  const [phone, setPhone] = useState(props.user.phone);\r\n  const [facilityName, setFacilityName] = useState(props.user.facilityName);\r\n  const [facilityAddress, setFacilityAddress] = useState(\r\n    props.user.facilityAddress\r\n  );\r\n  const [postal, setPostal] = useState(props.user.postal);\r\n  const [state, setState] = useState(props.user.state);\r\n  const [city, setCity] = useState(props.user.city);\r\n\r\n  function handleEmail(e) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handlePhone(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n\r\n  function handleFacilityName(e) {\r\n    setFacilityName(e.target.value);\r\n  }\r\n\r\n  function handleFacilityAddress(e) {\r\n    setFacilityAddress(e.target.value);\r\n  }\r\n\r\n  function handlePostal(e) {\r\n    setPostal(e.target.value);\r\n  }\r\n\r\n  function handleState(e) {\r\n    setState(e.target.value);\r\n  }\r\n\r\n  function handleCity(e) {\r\n    setCity(e.target.value);\r\n  }\r\n\r\n  function handlePage() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // const { email, password } = this.state;\r\n\r\n    // Post request to backend\r\n    fetch(\"http://localhost:5000/users/edit\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: props.token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        userId: props.user._id,\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n        phone: phone,\r\n        facilityName: facilityName,\r\n        facilityAddress: facilityAddress,\r\n        postal: postal,\r\n        state: state,\r\n        city: city\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(\"json\", json);\r\n        if (json.success) {\r\n          dispatch(setSnackbar(true, \"success\", json.message));\r\n        } else {\r\n          dispatch(setSnackbar(true, \"error\", json.message));\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={wrapper}>\r\n      <form action=\"\" method=\"post\" className=\"form\">\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              placeholder={email}\r\n              name=\"email\"\r\n              onChange={handleEmail}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"********\"\r\n              name=\"password\"\r\n              onChange={handlePassword}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityName}\r\n            name=\"facility name\"\r\n            onChange={handleFacilityName}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={name}\r\n              name=\"name\"\r\n              onChange={handleName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Mobile Phone</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={phone}\r\n              name=\"phone\"\r\n              onChange={handlePhone}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Address</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityAddress}\r\n            name=\"address\"\r\n            onChange={handleFacilityAddress}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Postal Code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={postal}\r\n              name=\"postal code\"\r\n              onChange={handlePostal}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">State</label>\r\n            <select className=\"form-control\" onChange={handleState}>\r\n              {states.map((state, index) => {\r\n                return state === \"\" ? (\r\n                  <option key={index} value={state} disabled selected>\r\n                    State\r\n                  </option>\r\n                ) : (\r\n                  <option key={index} value={state}>\r\n                    {state}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">City</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={city}\r\n              name=\"city\"\r\n              onChange={handleCity}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Edit\"\r\n          style={button}\r\n          // className=\"button bold\"\r\n          className=\"button bold\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserForm;\r\n","C:\\Users\\USER\\Git Project\\CAT300\\src\\statistics\\states.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\pages\\Scan.js",["250","251"],"C:\\Users\\USER\\Git Project\\CAT300\\src\\information\\Patient.js",["252","253"],"import './Patient.css';\r\nimport React, {useState} from 'react';\r\nimport PatientCards from \"../components/PatientCards\";\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n\r\n  const [modalIsOpen,setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Dashboard\">\r\n        <PatientCards />\r\n      </div>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Git Project\\CAT300\\src\\actions\\index.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientTable.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientCards.js",["254","255","256","257","258","259","260","261","262","263","264","265"],"import { Link } from 'react-router-dom';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setBackdrop } from '../actions';\r\nimport PatientCard from \"./PatientCard\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { useCoverCardMediaStyles } from '@mui-treasury/styles/cardMedia/cover';\r\nimport SearchPatientBar from \"./SearchPatientBar\";\r\nimport Modal from 'react-modal';\r\nimport CreatePatient from './CreatePatient';\r\nimport background from '../assets/images/background.jpg';\r\n\r\n\r\nconst PatientCards = () => {\r\n    const dispatch = useDispatch();\r\n    const AddNewButton = {\r\n        float:'right',\r\n        cursor: 'pointer',\r\n        paddingTop: '8px',\r\n        paddingBottom: '8px',\r\n        paddingLeft:'10px',\r\n        paddingRight:'10px',\r\n        fontSize:'15px',\r\n        marginRight:'20px',\r\n        border:'white',\r\n        fontFamily:'sourceSansPro',\r\n        fontWeight:'bold',\r\n      }\r\n      \r\n    \r\n    const patientInfo = {\r\n        backgroundColor: 'rgb(255,255,255)',\r\n        height: '150px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    };\r\n\r\n    const imageContainer = {\r\n        height: '150px',\r\n        width: '150px',\r\n    }\r\n\r\n    const imageStyle = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    };\r\n\r\n    const info={\r\n        display: 'grid',\r\n        gridTemplateRows: '3fr 1fr 1fr',\r\n        margin: '10px',\r\n        gap: '10px',\r\n\r\n    };\r\n\r\n    const bannerRegion={\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundImage: `url(\"https://kit8.net/images/thumbnails/580/386/detailed/4/At_the_hospital@2x.png\")`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        height: '500px',\r\n        marginBottom: '20px',\r\n        width: '100%',\r\n    }\r\n\r\n    const bannerTitle={\r\n        fontSize:'70px',\r\n        margin:'20px',\r\n        color:'white',\r\n        textShadow: '5px -1px 0 black, 1px -1px 0 #000, -1px 1px 0 #000, 5px 3px 0 #000',\r\n        fontFamily:'Fantasy',\r\n        letterSpacing:'4px',\r\n    }\r\n\r\n    const styles = useCoverCardMediaStyles();\r\n    const token = useSelector(state=>state.auth.token);\r\n    const [patients, setPatients] = useState([]);\r\n    const [xray, setXray] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [modalIsOpen,setModalIsOpen] = useState(false);\r\n    const [user,setUser] = useState(\"\");\r\n\r\n\r\n    const changeSearch = (e) => {\r\n        setSearch(e.target.value);\r\n        console.log(search);\r\n    }\r\n\r\n    const getPatientsRequest = async () =>{\r\n        dispatch(setBackdrop(true));\r\n        try{\r\n            const res = await fetch(\r\n                'http://localhost:5000/patients',\r\n                {\r\n                    type: \"GET\",\r\n                    headers: \r\n                    {\r\n                        \"Content-Type\": \"application/json\",\r\n                        'authorization': token,\r\n                    },\r\n                }\r\n            );\r\n    \r\n            const json = await res.json();\r\n            dispatch(setBackdrop(false));\r\n            setPatients(json.matchPatients);\r\n            setUser(json.user);\r\n            \r\n            console.log(json);\r\n\r\n        }catch(error){\r\n            dispatch(setBackdrop(false));\r\n            console.log(\"Unhandled Error\");\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getPatientsRequest();\r\n    },[]);\r\n\r\n\r\n    const useStyles = makeStyles({\r\n\r\n        banner:{\r\n            width:\"100%\",\r\n            position:\"relative\",\r\n            height:\"500px\",\r\n            marginBottom:\"50px\",\r\n        },\r\n\r\n        gridContainer:{\r\n            minHeight: '30vh',\r\n            paddingTop:\"20px\",\r\n            paddingBottom:\"20px\",\r\n            paddingLeft:\"30px\",\r\n            paddingRight:\"30px\",\r\n\r\n        },\r\n\r\n        gridItem:{\r\n            paddingTop:\"10px\",\r\n            paddingBottom:\"10px\", \r\n            paddingLeft:\"20px\",\r\n            paddingRight:\"20px\",    \r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return( \r\n        <div>\r\n\r\n        <div style={bannerRegion}>\r\n            <div>\r\n            </div>\r\n            <div>\r\n                <div style={bannerTitle}>{user.facilityName}</div>\r\n                <SearchPatientBar handleChange={changeSearch}/>\r\n            </div>\r\n        </div>\r\n        \r\n        <button  onClick={() => setModalIsOpen(true)} style={AddNewButton} className=\"white-button sm-text bold shadow-effect\">Add Patient</button>\r\n        <Modal classname=\"Modal\"\r\n            isOpen={modalIsOpen} \r\n            onRequestClose={() => setModalIsOpen(false)}\r\n            style={\r\n            {\r\n                overlay:{\r\n                backgroundColor:'rgba(0,0,0,0.75)',\r\n                }, \r\n                content:{\r\n                marginTop:'80px',\r\n                marginLeft: 'auto',\r\n                marginRight:'auto',\r\n                marginBottom:'30px',\r\n                width: '45%', \r\n                }\r\n            }\r\n            }\r\n        >\r\n        <CreatePatient openModal={setModalIsOpen}/>\r\n        <button className=\"closeButton \" onClick={() => setModalIsOpen(false)}>Close</button>\r\n      </Modal>\r\n            \r\n\r\n\r\n            <Grid container className={classes.gridContainer}>                   \r\n                {\r\n                    patients.length>0 &&\r\n                    patients.map((patient,index) => {\r\n                        if(patient.name.toLowerCase().includes(search.toLowerCase()))\r\n                        return(                 \r\n                            <Grid item xs={12} sm={6} md={4} lg={3} spacing={5} className={classes.gridItem}>\r\n                            <Link to = {'/patients/' + patient._id}  key={index}>\r\n                            <PatientCard\r\n                                name={patient.name} ic={patient.ic} gender={patient.gender}\r\n                                age={patient.age} phone={patient.phone} address={patient.address}\r\n                                postal={patient.postal} negeri={patient.negeri} city={patient.city}\r\n                                result={patient.result} image={patient.image} id={patient._id}\r\n                            /> \r\n                            </Link>\r\n                            </Grid>\r\n                            \r\n\r\n                        )\r\n                        \r\n                })}\r\n                \r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientCards;","C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\SearchPatientBar.js",[],"C:\\Users\\USER\\Git Project\\CAT300\\src\\components\\PatientCard.js",["266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281"],"import React from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronRightRounded from '@material-ui/icons/ChevronRightRounded';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\r\nimport {Grid} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport PatientProfile from './PatientProfile';\r\nimport { useFourThreeCardMediaStyles } from '@mui-treasury/styles/cardMedia/fourThree';\r\nimport { useSquareCardMediaStyles } from '@mui-treasury/styles/cardMedia/square';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n\r\n    root: {\r\n      maxWidth: 304,\r\n      margin: 'auto',\r\n      boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n      borderRadius: 0,\r\n      padding: 20,\r\n    },\r\n    content: {\r\n      padding: 20,\r\n    },\r\n    cta: {\r\n      marginTop: 20,\r\n      textTransform: 'initial',\r\n      backgroundColor:'darkblue',\r\n      color:\"white\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#63C5DA\",\r\n      },\r\n\r\n    },\r\n  }));\r\n\r\nexport default function PatientCard(props){\r\n\r\n\r\nconst{\r\n  name,\r\n  IC,\r\n  gender,\r\n  age,\r\n  phone,\r\n  address,\r\n  postal,\r\n  negeri,\r\n  city,\r\n  result,\r\n  image,\r\n  id,\r\n} = props;\r\n\r\n\r\n  const styles = useStyles();\r\n  const mediaStyles = useFourThreeCardMediaStyles();\r\n  const textCardContentStyles = useN01TextInfoContentStyles();\r\n  const shadowStyles = useBouncyShadowStyles();\r\n\r\n  return (\r\n      <Card className={cx(styles.root, shadowStyles.root)}>\r\n        <CardMedia\r\n          classes={mediaStyles}\r\n          \r\n          image={`http://localhost:5000/assets/images/${props.image.substring(13)}`} \r\n          //image={\"https://pic1.zhimg.com/v2-57520fcc0c61fc4feb7e8f2df8864b24_b.jpeg\"}\r\n        />\r\n        <CardContent className={styles.content}>\r\n          <TextInfoContent\r\n            classes={textCardContentStyles}\r\n            heading={props.name}\r\n            body={props.result}\r\n          />\r\n          <Link to = {`/patients/${props.id}`}>\r\n      \r\n            <Button id={props._id} fullWidth className={styles.cta}>\r\n              More Details <ChevronRightRounded/>\r\n            </Button>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n\r\n\r\n\r\n}",{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":6,"column":3,"nodeType":"288","messageId":"289","endLine":6,"endColumn":11},{"ruleId":"286","severity":1,"message":"290","line":21,"column":8,"nodeType":"288","messageId":"289","endLine":21,"endColumn":21},{"ruleId":"286","severity":1,"message":"291","line":22,"column":10,"nodeType":"288","messageId":"289","endLine":22,"endColumn":17},{"ruleId":"286","severity":1,"message":"292","line":28,"column":9,"nodeType":"288","messageId":"289","endLine":28,"endColumn":15},{"ruleId":"286","severity":1,"message":"293","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":27},{"ruleId":"286","severity":1,"message":"294","line":7,"column":8,"nodeType":"288","messageId":"289","endLine":7,"endColumn":13},{"ruleId":"286","severity":1,"message":"295","line":8,"column":9,"nodeType":"288","messageId":"289","endLine":8,"endColumn":13},{"ruleId":"286","severity":1,"message":"296","line":17,"column":11,"nodeType":"288","messageId":"289","endLine":17,"endColumn":18},{"ruleId":"286","severity":1,"message":"297","line":40,"column":11,"nodeType":"288","messageId":"289","endLine":40,"endColumn":16},{"ruleId":"298","severity":1,"message":"299","line":194,"column":25,"nodeType":"300","endLine":194,"endColumn":126},{"ruleId":"286","severity":1,"message":"295","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":14},{"ruleId":"286","severity":1,"message":"301","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":28},{"ruleId":"286","severity":1,"message":"294","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":13},{"ruleId":"286","severity":1,"message":"302","line":63,"column":11,"nodeType":"288","messageId":"289","endLine":63,"endColumn":18},{"ruleId":"286","severity":1,"message":"303","line":74,"column":11,"nodeType":"288","messageId":"289","endLine":74,"endColumn":18},{"ruleId":"286","severity":1,"message":"304","line":88,"column":12,"nodeType":"288","messageId":"289","endLine":88,"endColumn":21},{"ruleId":"286","severity":1,"message":"305","line":89,"column":12,"nodeType":"288","messageId":"289","endLine":89,"endColumn":19},{"ruleId":"286","severity":1,"message":"306","line":90,"column":12,"nodeType":"288","messageId":"289","endLine":90,"endColumn":20},{"ruleId":"286","severity":1,"message":"307","line":91,"column":12,"nodeType":"288","messageId":"289","endLine":91,"endColumn":23},{"ruleId":"286","severity":1,"message":"308","line":92,"column":12,"nodeType":"288","messageId":"289","endLine":92,"endColumn":22},{"ruleId":"286","severity":1,"message":"309","line":93,"column":12,"nodeType":"288","messageId":"289","endLine":93,"endColumn":24},{"ruleId":"286","severity":1,"message":"310","line":94,"column":12,"nodeType":"288","messageId":"289","endLine":94,"endColumn":23},{"ruleId":"286","severity":1,"message":"311","line":95,"column":12,"nodeType":"288","messageId":"289","endLine":95,"endColumn":23},{"ruleId":"286","severity":1,"message":"312","line":96,"column":12,"nodeType":"288","messageId":"289","endLine":96,"endColumn":21},{"ruleId":"286","severity":1,"message":"313","line":97,"column":12,"nodeType":"288","messageId":"289","endLine":97,"endColumn":22},{"ruleId":"286","severity":1,"message":"314","line":97,"column":24,"nodeType":"288","messageId":"289","endLine":97,"endColumn":37},{"ruleId":"286","severity":1,"message":"313","line":111,"column":15,"nodeType":"288","messageId":"289","endLine":111,"endColumn":25},{"ruleId":"286","severity":1,"message":"315","line":38,"column":9,"nodeType":"288","messageId":"289","endLine":38,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":137,"column":31,"nodeType":"318","messageId":"319","endLine":137,"endColumn":33},{"ruleId":"298","severity":1,"message":"299","line":157,"column":13,"nodeType":"300","endLine":160,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":173,"column":31,"nodeType":"318","messageId":"319","endLine":173,"endColumn":33},{"ruleId":"320","severity":1,"message":"321","line":179,"column":15,"nodeType":"288","messageId":"322","endLine":179,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":182,"column":15,"nodeType":"288","messageId":"322","endLine":182,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":185,"column":15,"nodeType":"288","messageId":"322","endLine":185,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":188,"column":15,"nodeType":"288","messageId":"322","endLine":188,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":191,"column":15,"nodeType":"288","messageId":"322","endLine":191,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":194,"column":15,"nodeType":"288","messageId":"322","endLine":194,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":197,"column":15,"nodeType":"288","messageId":"322","endLine":197,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":200,"column":15,"nodeType":"288","messageId":"322","endLine":200,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":203,"column":15,"nodeType":"288","messageId":"322","endLine":203,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":206,"column":15,"nodeType":"288","messageId":"322","endLine":206,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":209,"column":15,"nodeType":"288","messageId":"322","endLine":209,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":212,"column":15,"nodeType":"288","messageId":"322","endLine":212,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":215,"column":15,"nodeType":"288","messageId":"322","endLine":215,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":219,"column":15,"nodeType":"288","messageId":"322","endLine":219,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":242,"column":13,"nodeType":"300","endLine":245,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":258,"column":31,"nodeType":"318","messageId":"319","endLine":258,"endColumn":33},{"ruleId":"320","severity":1,"message":"321","line":264,"column":15,"nodeType":"288","messageId":"322","endLine":264,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":267,"column":15,"nodeType":"288","messageId":"322","endLine":267,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":270,"column":15,"nodeType":"288","messageId":"322","endLine":270,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":273,"column":15,"nodeType":"288","messageId":"322","endLine":273,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":276,"column":15,"nodeType":"288","messageId":"322","endLine":276,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":279,"column":15,"nodeType":"288","messageId":"322","endLine":279,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":282,"column":15,"nodeType":"288","messageId":"322","endLine":282,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":285,"column":15,"nodeType":"288","messageId":"322","endLine":285,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":288,"column":15,"nodeType":"288","messageId":"322","endLine":288,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":291,"column":15,"nodeType":"288","messageId":"322","endLine":291,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":294,"column":15,"nodeType":"288","messageId":"322","endLine":294,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":297,"column":15,"nodeType":"288","messageId":"322","endLine":297,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":300,"column":15,"nodeType":"288","messageId":"322","endLine":300,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":304,"column":15,"nodeType":"288","messageId":"322","endLine":304,"endColumn":23},{"ruleId":"298","severity":1,"message":"299","line":327,"column":13,"nodeType":"300","endLine":330,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":345,"column":20,"nodeType":"325","messageId":"326","endLine":345,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":346,"column":20,"nodeType":"325","messageId":"326","endLine":346,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":347,"column":20,"nodeType":"325","messageId":"326","endLine":347,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":359,"column":20,"nodeType":"325","messageId":"326","endLine":359,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":360,"column":20,"nodeType":"325","messageId":"326","endLine":360,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":361,"column":20,"nodeType":"325","messageId":"326","endLine":361,"endColumn":22},{"ruleId":"323","severity":1,"message":"324","line":488,"column":18,"nodeType":"325","messageId":"326","endLine":488,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":490,"column":18,"nodeType":"325","messageId":"326","endLine":490,"endColumn":20},{"ruleId":"323","severity":1,"message":"324","line":491,"column":18,"nodeType":"325","messageId":"326","endLine":491,"endColumn":20},{"ruleId":"286","severity":1,"message":"327","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":25},{"ruleId":"286","severity":1,"message":"296","line":12,"column":9,"nodeType":"288","messageId":"289","endLine":12,"endColumn":16},{"ruleId":"286","severity":1,"message":"297","line":35,"column":9,"nodeType":"288","messageId":"289","endLine":35,"endColumn":14},{"ruleId":"286","severity":1,"message":"328","line":67,"column":9,"nodeType":"288","messageId":"289","endLine":67,"endColumn":11},{"ruleId":"286","severity":1,"message":"329","line":70,"column":10,"nodeType":"288","messageId":"289","endLine":70,"endColumn":27},{"ruleId":"286","severity":1,"message":"330","line":70,"column":29,"nodeType":"288","messageId":"289","endLine":70,"endColumn":49},{"ruleId":"298","severity":1,"message":"299","line":148,"column":13,"nodeType":"300","endLine":152,"endColumn":14},{"ruleId":"286","severity":1,"message":"295","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":14},{"ruleId":"286","severity":1,"message":"302","line":62,"column":11,"nodeType":"288","messageId":"289","endLine":62,"endColumn":18},{"ruleId":"286","severity":1,"message":"303","line":73,"column":11,"nodeType":"288","messageId":"289","endLine":73,"endColumn":18},{"ruleId":"286","severity":1,"message":"304","line":88,"column":12,"nodeType":"288","messageId":"289","endLine":88,"endColumn":21},{"ruleId":"286","severity":1,"message":"305","line":89,"column":12,"nodeType":"288","messageId":"289","endLine":89,"endColumn":19},{"ruleId":"286","severity":1,"message":"306","line":90,"column":12,"nodeType":"288","messageId":"289","endLine":90,"endColumn":20},{"ruleId":"286","severity":1,"message":"307","line":91,"column":12,"nodeType":"288","messageId":"289","endLine":91,"endColumn":23},{"ruleId":"286","severity":1,"message":"308","line":92,"column":12,"nodeType":"288","messageId":"289","endLine":92,"endColumn":22},{"ruleId":"286","severity":1,"message":"309","line":93,"column":12,"nodeType":"288","messageId":"289","endLine":93,"endColumn":24},{"ruleId":"286","severity":1,"message":"310","line":94,"column":12,"nodeType":"288","messageId":"289","endLine":94,"endColumn":23},{"ruleId":"286","severity":1,"message":"311","line":95,"column":12,"nodeType":"288","messageId":"289","endLine":95,"endColumn":23},{"ruleId":"286","severity":1,"message":"312","line":96,"column":12,"nodeType":"288","messageId":"289","endLine":96,"endColumn":21},{"ruleId":"286","severity":1,"message":"331","line":232,"column":11,"nodeType":"288","messageId":"289","endLine":232,"endColumn":22},{"ruleId":"286","severity":1,"message":"295","line":1,"column":10,"nodeType":"288","messageId":"289","endLine":1,"endColumn":14},{"ruleId":"286","severity":1,"message":"332","line":2,"column":17,"nodeType":"288","messageId":"289","endLine":2,"endColumn":25},{"ruleId":"286","severity":1,"message":"294","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":13},{"ruleId":"286","severity":1,"message":"295","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":14},{"ruleId":"286","severity":1,"message":"333","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":16},{"ruleId":"286","severity":1,"message":"302","line":22,"column":9,"nodeType":"288","messageId":"289","endLine":22,"endColumn":16},{"ruleId":"286","severity":1,"message":"334","line":97,"column":12,"nodeType":"288","messageId":"289","endLine":97,"endColumn":22},{"ruleId":"335","severity":1,"message":"336","line":32,"column":8,"nodeType":"337","endLine":32,"endColumn":10,"suggestions":"338"},{"ruleId":"335","severity":1,"message":"339","line":58,"column":8,"nodeType":"337","endLine":58,"endColumn":16,"suggestions":"340"},{"ruleId":"286","severity":1,"message":"341","line":12,"column":10,"nodeType":"288","messageId":"289","endLine":12,"endColumn":21},{"ruleId":"286","severity":1,"message":"342","line":12,"column":22,"nodeType":"288","messageId":"289","endLine":12,"endColumn":36},{"ruleId":"286","severity":1,"message":"343","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":11},{"ruleId":"286","severity":1,"message":"344","line":9,"column":8,"nodeType":"288","messageId":"289","endLine":9,"endColumn":17},{"ruleId":"286","severity":1,"message":"345","line":14,"column":8,"nodeType":"288","messageId":"289","endLine":14,"endColumn":18},{"ruleId":"286","severity":1,"message":"346","line":34,"column":11,"nodeType":"288","messageId":"289","endLine":34,"endColumn":22},{"ruleId":"286","severity":1,"message":"347","line":42,"column":11,"nodeType":"288","messageId":"289","endLine":42,"endColumn":25},{"ruleId":"286","severity":1,"message":"348","line":47,"column":11,"nodeType":"288","messageId":"289","endLine":47,"endColumn":21},{"ruleId":"286","severity":1,"message":"349","line":53,"column":11,"nodeType":"288","messageId":"289","endLine":53,"endColumn":15},{"ruleId":"286","severity":1,"message":"350","line":83,"column":11,"nodeType":"288","messageId":"289","endLine":83,"endColumn":17},{"ruleId":"286","severity":1,"message":"351","line":86,"column":12,"nodeType":"288","messageId":"289","endLine":86,"endColumn":16},{"ruleId":"286","severity":1,"message":"352","line":86,"column":18,"nodeType":"288","messageId":"289","endLine":86,"endColumn":25},{"ruleId":"335","severity":1,"message":"353","line":129,"column":7,"nodeType":"337","endLine":129,"endColumn":9,"suggestions":"354"},{"ruleId":"316","severity":1,"message":"355","line":200,"column":50,"nodeType":"318","messageId":"356","endLine":200,"endColumn":52},{"ruleId":"286","severity":1,"message":"357","line":10,"column":10,"nodeType":"288","messageId":"289","endLine":10,"endColumn":32},{"ruleId":"286","severity":1,"message":"358","line":13,"column":9,"nodeType":"288","messageId":"289","endLine":13,"endColumn":13},{"ruleId":"286","severity":1,"message":"359","line":15,"column":8,"nodeType":"288","messageId":"289","endLine":15,"endColumn":22},{"ruleId":"286","severity":1,"message":"360","line":17,"column":10,"nodeType":"288","messageId":"289","endLine":17,"endColumn":34},{"ruleId":"286","severity":1,"message":"361","line":51,"column":3,"nodeType":"288","messageId":"289","endLine":51,"endColumn":7},{"ruleId":"286","severity":1,"message":"362","line":52,"column":3,"nodeType":"288","messageId":"289","endLine":52,"endColumn":5},{"ruleId":"286","severity":1,"message":"363","line":53,"column":3,"nodeType":"288","messageId":"289","endLine":53,"endColumn":9},{"ruleId":"286","severity":1,"message":"364","line":54,"column":3,"nodeType":"288","messageId":"289","endLine":54,"endColumn":6},{"ruleId":"286","severity":1,"message":"365","line":55,"column":3,"nodeType":"288","messageId":"289","endLine":55,"endColumn":8},{"ruleId":"286","severity":1,"message":"366","line":56,"column":3,"nodeType":"288","messageId":"289","endLine":56,"endColumn":10},{"ruleId":"286","severity":1,"message":"367","line":57,"column":3,"nodeType":"288","messageId":"289","endLine":57,"endColumn":9},{"ruleId":"286","severity":1,"message":"368","line":58,"column":3,"nodeType":"288","messageId":"289","endLine":58,"endColumn":9},{"ruleId":"286","severity":1,"message":"369","line":59,"column":3,"nodeType":"288","messageId":"289","endLine":59,"endColumn":7},{"ruleId":"286","severity":1,"message":"370","line":60,"column":3,"nodeType":"288","messageId":"289","endLine":60,"endColumn":9},{"ruleId":"286","severity":1,"message":"371","line":61,"column":3,"nodeType":"288","messageId":"289","endLine":61,"endColumn":8},{"ruleId":"286","severity":1,"message":"328","line":62,"column":3,"nodeType":"288","messageId":"289","endLine":62,"endColumn":5},"no-native-reassign",["372"],"no-negated-in-lhs",["373"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CreatePatient' is defined but never used.","'connect' is defined but never used.","'signIn' is assigned a value but never used.","'ViewAgendaRounded' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'wrapper' is assigned a value but never used.","'title' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SentimentSatisfied' is defined but never used.","'subtext' is assigned a value but never used.","'results' is assigned a value but never used.","'nameError' is assigned a value but never used.","'icError' is assigned a value but never used.","'ageError' is assigned a value but never used.","'genderError' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'postalError' is assigned a value but never used.","'negeriError' is assigned a value but never used.","'cityError' is assigned a value but never used.","'imageError' is assigned a value but never used.","'setImageError' is assigned a value but never used.","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-redeclare","'infected' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DeleteForeverIcon' is defined but never used.","'id' is assigned a value but never used.","'deleteModalIsOpen' is assigned a value but never used.","'setDeleteModalIsOpen' is assigned a value but never used.","'changeImage' is assigned a value but never used.","'useState' is defined but never used.","'signIn' is defined but never used.","'handlePage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["374"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["375"],"'modalIsOpen' is assigned a value but never used.","'setModalIsOpen' is assigned a value but never used.","'Box' is defined but never used.","'CardMedia' is defined but never used.","'background' is defined but never used.","'patientInfo' is assigned a value but never used.","'imageContainer' is assigned a value but never used.","'imageStyle' is assigned a value but never used.","'info' is assigned a value but never used.","'styles' is assigned a value but never used.","'xray' is assigned a value but never used.","'setXray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPatientsRequest'. Either include it or remove the dependency array.",["376"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useWideCardMediaStyles' is defined but never used.","'Grid' is defined but never used.","'PatientProfile' is defined but never used.","'useSquareCardMediaStyles' is defined but never used.","'name' is assigned a value but never used.","'IC' is assigned a value but never used.","'gender' is assigned a value but never used.","'age' is assigned a value but never used.","'phone' is assigned a value but never used.","'address' is assigned a value but never used.","'postal' is assigned a value but never used.","'negeri' is assigned a value but never used.","'city' is assigned a value but never used.","'result' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},"Update the dependencies array to be: [dispatch]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, result, token]",{"range":"385","text":"386"},"Update the dependencies array to be: [getPatientsRequest]",{"range":"387","text":"388"},[1343,1345],"[dispatch]",[2225,2233],"[dispatch, result, token]",[3738,3740],"[getPatientsRequest]"]