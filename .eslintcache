[{"C:\\Users\\user\\CAT300\\src\\index.js":"1","C:\\Users\\user\\CAT300\\src\\App.js":"2","C:\\Users\\user\\CAT300\\src\\reportWebVitals.js":"3","C:\\Users\\user\\CAT300\\src\\components\\Card.js":"4","C:\\Users\\user\\CAT300\\src\\information\\index.js":"5","C:\\Users\\user\\CAT300\\src\\pages\\Error.js":"6","C:\\Users\\user\\CAT300\\src\\pages\\Login.js":"7","C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js":"8","C:\\Users\\user\\CAT300\\src\\pages\\Home.js":"9","C:\\Users\\user\\CAT300\\src\\components\\NavBar.js":"10","C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js":"11","C:\\Users\\user\\CAT300\\src\\scan\\index.js":"12","C:\\Users\\user\\CAT300\\src\\components\\About.js":"13","C:\\Users\\user\\CAT300\\src\\components\\Form.js":"14","C:\\Users\\user\\CAT300\\src\\components\\Details.js":"15","C:\\Users\\user\\CAT300\\src\\components\\Cards.js":"16","C:\\Users\\user\\CAT300\\src\\information\\App.js":"17","C:\\Users\\user\\CAT300\\src\\store\\reducer.js":"18","C:\\Users\\user\\CAT300\\src\\store\\actions.js":"19","C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js":"20","C:\\Users\\user\\CAT300\\src\\pages\\Scan.js":"21","C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js":"22","C:\\Users\\user\\CAT300\\src\\statistics\\states.js":"23","C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js":"24","C:\\Users\\user\\CAT300\\src\\components\\DeleteWindow.js":"25","C:\\Users\\user\\CAT300\\src\\components\\EditForm.js":"26","C:\\Users\\user\\CAT300\\src\\components\\NewForm.js":"27"},{"size":724,"mtime":1608913261269,"results":"28","hashOfConfig":"29"},{"size":1558,"mtime":1608914670364,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1607783308068,"results":"31","hashOfConfig":"29"},{"size":2417,"mtime":1608913313785,"results":"32","hashOfConfig":"29"},{"size":120,"mtime":1608132388684,"results":"33","hashOfConfig":"29"},{"size":355,"mtime":1608913261270,"results":"34","hashOfConfig":"29"},{"size":3580,"mtime":1608913261315,"results":"35","hashOfConfig":"29"},{"size":8572,"mtime":1608913261317,"results":"36","hashOfConfig":"29"},{"size":1135,"mtime":1608913261315,"results":"37","hashOfConfig":"29"},{"size":1562,"mtime":1608913261264,"results":"38","hashOfConfig":"29"},{"size":275,"mtime":1608127408360,"results":"39","hashOfConfig":"29"},{"size":116,"mtime":1608913261318,"results":"40","hashOfConfig":"29"},{"size":2163,"mtime":1608127408327,"results":"41","hashOfConfig":"29"},{"size":3741,"mtime":1608132388630,"results":"42","hashOfConfig":"29"},{"size":6629,"mtime":1608913313912,"results":"43","hashOfConfig":"29"},{"size":29457,"mtime":1608132388516,"results":"44","hashOfConfig":"29"},{"size":1389,"mtime":1608913314160,"results":"45","hashOfConfig":"29"},{"size":468,"mtime":1608913261423,"results":"46","hashOfConfig":"29"},{"size":76,"mtime":1608913261401,"results":"47","hashOfConfig":"29"},{"size":6042,"mtime":1608913261319,"results":"48","hashOfConfig":"29"},{"size":5623,"mtime":1608913261316,"results":"49","hashOfConfig":"29"},{"size":7261,"mtime":1608913261266,"results":"50","hashOfConfig":"29"},{"size":3258,"mtime":1608913261319,"results":"51","hashOfConfig":"29"},{"size":8835,"mtime":1608913313808,"results":"52","hashOfConfig":"29"},{"size":862,"mtime":1608913313809,"results":"53","hashOfConfig":"29"},{"size":8838,"mtime":1608913313985,"results":"54","hashOfConfig":"29"},{"size":6248,"mtime":1608913315496,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"9mrhfx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"58"},"C:\\Users\\user\\CAT300\\src\\index.js",[],["125","126"],"C:\\Users\\user\\CAT300\\src\\App.js",["127"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Error from \"./pages/Error\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Scan from \"./scan\";\r\nimport Patients from \"./information\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport Details from \"./components/Details\";\r\nimport CreatePatient from './components/CreatePatient';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n      <ScrollToTop />\r\n      <Switch>\r\n        <Route path=\"/scan\">\r\n          {props.signIn ? <Scan /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/patients/:id\">\r\n          {props.signIn ? <Details /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/patients\">\r\n          {props.signIn ? <Patients /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/statistics\">\r\n          {props.signIn ? <Statistics /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={SignUp} />\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"*\" component={Error} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","C:\\Users\\user\\CAT300\\src\\reportWebVitals.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Card.js",["128","129","130","131","132","133","134","135"],"import React from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronRightRounded from '@material-ui/icons/ChevronRightRounded';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\r\nimport {Grid} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport Details from './Details';\r\nimport { useFourThreeCardMediaStyles } from '@mui-treasury/styles/cardMedia/fourThree';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n\r\n    root: {\r\n      maxWidth: 304,\r\n      margin: 'auto',\r\n      boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n      borderRadius: 0,\r\n      padding: 20,\r\n    },\r\n    content: {\r\n      padding: 20,\r\n    },\r\n    cta: {\r\n      marginTop: 20,\r\n      textTransform: 'initial',\r\n      backgroundColor:'darkblue',\r\n      color:\"white\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#63C5DA\",\r\n      },\r\n\r\n\r\n    },\r\n\r\n\r\n  }));\r\n\r\nexport default function PatientCard(props){\r\n\r\n\r\n    const{\r\n        name,\r\n        IC,\r\n        gender,\r\n        age,\r\n        CXR,\r\n        status,\r\n    } = props;\r\n\r\n\r\n    const styles = useStyles();\r\n    const mediaStyles = useWideCardMediaStyles();\r\n    const textCardContentStyles = useN01TextInfoContentStyles();\r\n    const shadowStyles = useBouncyShadowStyles();\r\n\r\n    return (\r\n        <Card className={cx(styles.root, shadowStyles.root)}>\r\n          <CardMedia\r\n            classes={mediaStyles}\r\n            image={props.CXR}\r\n          />\r\n          <CardContent className={styles.content}>\r\n            <TextInfoContent\r\n              classes={textCardContentStyles}\r\n              heading={props.name}\r\n              body={status}\r\n            />\r\n            <Link to = '/patients/1'>\r\n              <Button  fullWidth className={styles.cta}>\r\n                More Details <ChevronRightRounded/>\r\n              </Button>\r\n            </Link>\r\n            \r\n          </CardContent>\r\n        </Card>\r\n      );\r\n\r\n\r\n\r\n}",["136","137"],"C:\\Users\\user\\CAT300\\src\\information\\index.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Error.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Login.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Home.js",[],"C:\\Users\\user\\CAT300\\src\\components\\NavBar.js",[],"C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js",[],"C:\\Users\\user\\CAT300\\src\\scan\\index.js",[],"C:\\Users\\user\\CAT300\\src\\components\\About.js",["138"],"  \r\nimport male from '../assets/images/male.jpg'\r\nimport female from '../assets/images/female.jpg'\r\nfunction About(){\r\n    \r\n    const wrapper={\r\n        height: '90vh'\r\n    }\r\n    const team={\r\n        display: 'flex',\r\n        flexWrap:'wrap',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        top: '25%',\r\n    }\r\n    const teamMember={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        fontSize: '20px',\r\n        position: 'relative',\r\n        gap: '10px'\r\n    };\r\n    const portraitBox={\r\n        width: '200px',\r\n        height: '200px',\r\n    };\r\n    const portrait={\r\n        borderRadius: '50%',\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n    };\r\n    const title={\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        top: '15%',\r\n    };\r\n\r\n    const subtitle={\r\n        color: 'rgb(150,150,150)',\r\n    };\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}><p className=\"xlg-text bold primary-color\">Meet Our Team</p></div>\r\n            <div style={team}>\r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={male} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Lim Shau Hong</p>\r\n                    <p className=\"secondary-color\">Detection</p>\r\n                </div> \r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={male} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Ng Jing Xuan</p>\r\n                    <p className=\"secondary-color\">Dashboard</p>\r\n                </div>\r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={female} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Yeo Pui Yan</p>\r\n                    <p className=\"secondary-color\">Information</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","C:\\Users\\user\\CAT300\\src\\components\\Form.js",["139"],"import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    \r\n    Field:{\r\n        margin: 20,\r\n    },\r\n\r\n    selector:{\r\n        marginLeft: 20,\r\n        minWidth: 220,\r\n    }\r\n    \r\n  }));\r\n\r\n\r\nfunction Form(){\r\n\r\n    const styles = useStyles();\r\n    const [gender,setGender] = React.useState('');\r\n    const [result,setResult] = React.useState('');\r\n    const handleChange_gender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const handleChange_result = (event) => {\r\n        setResult(event.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"NRIC No.\" variant=\"outlined\" />\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Age\" variant=\"outlined\" />\r\n            </div>\r\n            <div>\r\n                <FormControl fullwidth variant=\"outlined\" className={styles.selector}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={gender}\r\n                        onChange={handleChange_gender}\r\n                        label=\"Gender\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                    <MenuItem value={\"Female\"}>Female</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField fullwidth id=\"outlined-basic\" label=\"Contact No.\" variant=\"outlined\" />\r\n            </div>      \r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Hospital\" variant=\"outlined\" />\r\n            </div>\r\n            <div>\r\n                <FormControl fullwidth variant=\"outlined\" className={styles.selector}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Scan Result</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={result}\r\n                        onChange={handleChange_result}\r\n                        label=\"Result\"\r\n                    >\r\n                        <MenuItem value1=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={\"Positive\"}>Positive</MenuItem>\r\n                        <MenuItem value={\"Negative\"}>Negative</MenuItem>\r\n                        <MenuItem value={\"Unknown\"}>Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>            \r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Chest X-ray\" variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","C:\\Users\\user\\CAT300\\src\\components\\Details.js",["140","141","142","143"],"import React from \"react\";\r\nimport './Details.css';\r\n\r\n\r\nfunction Details(){\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            \r\n \r\n            <div className=\"header\">\r\n                \r\n                <h4 className=\"title\">\r\n                    <b>LIU YU XIN</b>\r\n                </h4>\r\n                <div className=\"buttons\">\r\n                    <button className=\"editButton\">Edit</button>\r\n                    <button className=\"deleteButton\">Delete</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n            \r\n            <div className=\"Flexbox\">\r\n                <div className=\"image\">\r\n                    <img src=\"https://wx3.sinaimg.cn/mw690/ec074f36gy1gljviraraeg20ex0ba7wn.gif\"></img>\r\n                </div>\r\n\r\n               \r\n                <table className=\"table\">\r\n                    <tr>\r\n                        <th color=\"black\">NRIC No.</th>\r\n                        <th>970420-33-0320</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Age</th>\r\n                        <th>23</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Gender</th>\r\n                        <th>Female</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Adress</th>\r\n                        <th>Guizhou, Guiyang.</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Contact No.</th>\r\n                        <th>183201314</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Hospital</th>\r\n                        <th>Chimelong Hospital</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Result</th>\r\n                        <th>Negative</th>\r\n                    </tr>\r\n                    \r\n\r\n                </table>\r\n            \r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Details;","C:\\Users\\user\\CAT300\\src\\components\\Cards.js",[],"C:\\Users\\user\\CAT300\\src\\information\\App.js",["144","145","146","147","148"],"import './App.css';\r\nimport React, {useState} from 'react';\r\nimport Cards from \"../components/Cards\";\r\nimport Details from \"../components/Details\";\r\nimport Modal from 'react-modal';\r\nimport NewForm from \"../components/NewForm\";\r\nimport { BrowserRouter as Router, link } from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\nimport CreatePatient from '../components/CreatePatient';\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n\r\n  const [modalIsOpen,setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <button onClick={() => setModalIsOpen(true)} className=\"AddNewButton\">Add New</button>\r\n      <Modal classname=\"Modal\"\r\n        isOpen={modalIsOpen} \r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={\r\n          {\r\n            overlay:{\r\n              backgroundColor:'rgba(0,0,0,0.75)',\r\n            }, \r\n            content:{\r\n              marginTop:'80px',\r\n              marginLeft: 'auto',\r\n              marginRight:'auto',\r\n              width: '50%', \r\n              \r\n            }\r\n          }\r\n        }\r\n      >\r\n        <CreatePatient />\r\n        <button className=\"closeButton\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n      </Modal>\r\n      \r\n      \r\n      <div className=\"Dashboard\">\r\n        <Cards />\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\CAT300\\src\\store\\reducer.js",[],"C:\\Users\\user\\CAT300\\src\\store\\actions.js",[],"C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js",["149","150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { states } from \"./states\";\r\n\r\nfunction Statistics() {\r\n  const container = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  };\r\n\r\n  const innerContainer = {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"800px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  };\r\n\r\n  const columns = {\r\n    columnCount: 3,\r\n    columnGap: \"40px\",\r\n    columnRule: \"1px solid lightblue\"\r\n  };\r\n\r\n  const row = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  };\r\n\r\n  const charts = {\r\n    minHeight: 600,\r\n    minWidth: 800,\r\n    marginTop: 10\r\n  };\r\n\r\n  const blueCards = {\r\n    background: \"#1D5BB8\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const greenCards = {\r\n    background: \"#8EC3A7\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const yellowCards = {\r\n    background: \"#F0CB69\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const redCards = {\r\n    background: \"#DC5356\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const purpleCards = {\r\n    background: \"#9F6DAA\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const mapTitle = {\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"1.2\",\r\n    fontWeight: \"900\"\r\n  };\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const renderMarkers = () => {\r\n    var data = [];\r\n    states.map((state, index) => {\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {state.infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getDataWithFetch = async () => {\r\n    const response = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/6t65lJVfs3d8s6aKc/records/LATEST?disableRedirect=true\"\r\n    );\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataWithFetch();\r\n  });\r\n\r\n  return (\r\n    <div style={container}>\r\n      <span class=\"malaysia-state-flag-icon malaysia-state-flag-icon-mlk\"></span>\r\n      <div style={innerContainer}>\r\n        <div style={row}>\r\n          <div style={blueCards}>\r\n            Total Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.testedPositive}\r\n            </h2>\r\n          </div>\r\n          <div style={greenCards}>\r\n            Total Recovered:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.recovered}\r\n            </h2>\r\n          </div>\r\n          <div style={yellowCards}>\r\n            Total Active Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.activeCases}\r\n            </h2>\r\n          </div>\r\n          <div style={redCards}>\r\n            Total Death Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.deceased}\r\n            </h2>\r\n          </div>\r\n          <div style={purpleCards}>\r\n            Total ICU:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.inICU}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            color: \"rgb(170, 170, 170)\",\r\n            marginBottom: 15\r\n          }}\r\n        >\r\n          Source: Health Ministry • Active cases means total confirmed cases\r\n          minus deaths and recoveries.\r\n        </p>\r\n\r\n        <embed\r\n          style={charts}\r\n          src=\"https://flo.uri.sh/visualisation/1985060/embed\"\r\n        ></embed>\r\n      </div>\r\n      <div style={{ height: 30 }} />\r\n      <div>\r\n        <div id=\"map\" style={{ height: 420, width: 780 }}>\r\n          <h2 style={mapTitle}>\r\n            Malaysia State CONVID-19 Daily Total New Cases\r\n          </h2>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAdWEmhfQyer_yx4JlOAcJxkfjVKN3TcJg\"\r\n            }}\r\n            defaultCenter={{\r\n              lat: 3.9743,\r\n              lng: 102.4381\r\n            }}\r\n            defaultZoom={7.5}\r\n          >\r\n            {renderMarkers()}\r\n          </GoogleMapReact>\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              color: \"rgb(170, 170, 170)\",\r\n              marginBottom: 15\r\n            }}\r\n          >\r\n            Source: Health Ministry • Cases are updated on 12am daily.\r\n          </p>\r\n          <div style={{ height: 30 }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statistics;\r\n","C:\\Users\\user\\CAT300\\src\\pages\\Scan.js",["152","153"],"import xray from '../assets/images/xray.jpg';\r\nimport PatientTable from '../components/PatientTable';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport React, {useState, useEffect, useRef} from 'react';\r\n\r\nfunction Scan(){\r\n    const [model,setModel] = useState(null);\r\n    const [result,setResult] = useState(null);\r\n    const imageRef = useRef();\r\n    const label = ['COVID-19', 'Normal'];\r\n\r\n    useEffect(()=>{\r\n        const fetchModel = async ()=>{\r\n            const localModel = await tf.loadLayersModel(\"http://localhost:5000/ResNet50/model.json\");\r\n            setModel(localModel);\r\n            console.log(\"Model Loaded\");\r\n        }\r\n        fetchModel();\r\n    },[]);\r\n\r\n    const handleClick = async ()=> {\r\n        const scanImage = imageRef.current;\r\n        let tensor = tf.browser.fromPixels(scanImage);\r\n        tensor = tf.image.resizeNearestNeighbor(tensor, [224,224]);\r\n        tensor = tensor.toFloat().div(255).expandDims();\r\n        console.log(\"Preprocessed\");\r\n        const predictions = await model.predict(tensor).data();\r\n        console.log(\"Predicted\");\r\n        console.log(predictions);\r\n        const results = [];\r\n        predictions.map((prediction,index)=>{\r\n            results[index] = parseFloat(prediction*100).toFixed(2);\r\n        })\r\n        setResult(results);\r\n    }\r\n     \r\n\r\n    const wrapper = {\r\n        height: '90vh',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '3fr 5fr 3fr',\r\n    };\r\n    const information = {\r\n        minWidth: '250px',\r\n    };\r\n    const panel = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        height: '90vh',\r\n        width: '100%',\r\n        minWidth: '400px',\r\n    };\r\n    const image = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    }\r\n    const analysis = {\r\n        minWidth: '250px',\r\n    };\r\n    const container = {\r\n        height: '90vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const upperPane = {\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        gap: '20px',\r\n    };\r\n    const group = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '60px auto',\r\n    }\r\n    const positive = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        color: 'rgb(255,255,255)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%',\r\n    }\r\n    const negative = {\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        color: 'dimgray',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%'\r\n    }\r\n    const bar = {\r\n        width: '100%',\r\n        borderRadius: '2%',\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        border: '1px solid rgba(0,0,0,15%)',\r\n        margin: '60px auto 30px auto',\r\n\r\n    }\r\n    const barFill = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        width: '90%',\r\n        height: '36px',\r\n    }\r\n  \r\n    const lowerPane = {\r\n        margin:'0 auto',\r\n        marginBottom: '20px',\r\n        width: '70%',\r\n        height: '48px',\r\n        borderRadius: '2%',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n    };\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={information}>\r\n                <PatientTable/>\r\n            </div>\r\n            <div style={panel}>\r\n                <img src={xray} style={image} ref={imageRef} /> \r\n            </div>\r\n            <div style={analysis}>\r\n                <div style={container}>\r\n                    <div style={upperPane}>\r\n                        <div>\r\n                        <p className=\"sm-text bold\">Result</p>\r\n                        <div style={group}>\r\n                            <div style={positive}>\r\n                                <p className=\"sm-text bold\">Positive</p>\r\n                            </div>\r\n                            <div style={negative}>\r\n                                <p className=\"sm-text bold\">Negative</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"sm-text bold\">Abnormality Score</p>\r\n                            <div style={bar} >\r\n                                <div style={barFill}/>\r\n                            </div>\r\n                            <div style={{display:'flex', justifyContent:'space-around', gap: '20px', alignItems:'center'}}>\r\n                                {\r\n                                    result && result.map((item,index)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <p className=\"md-text bold\">{label[index]}</p>\r\n                                                <p className=\"md-text bold\" style={{textAlign: 'center', padding:'10px 0px'}}>{item}</p>\r\n                                            </div>\r\n                                        ) \r\n                                    }\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {model && <button style={lowerPane} className=\"button sm-text bold\" onClick={handleClick}>Scan</button>}\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scan;","C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js",["154","155","156","157"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction createData(id, name, date, score){\r\n    return {id, name, date, score};\r\n}\r\n\r\nconst rows = [\r\n    createData(1,'Unknown','2020-10-10',90),\r\n    createData(2,'Unknown','2020-10-10',90),\r\n    createData(3,'Unknown','2020-10-10',90),\r\n    createData(4,'Unknown','2020-10-10',90),\r\n    createData(5,'Unknown','2020-10-10',90),\r\n    createData(6,'Unknown','2020-10-10',90),\r\n    createData(7,'Unknown','2020-10-10',90),\r\n    createData(8,'Unknown','2020-10-10',90),\r\n    createData(9,'Unknown','2020-10-10',90),\r\n    createData(10,'Unknown','2020-10-10',90),\r\n    createData(11,'Unknown','2020-10-10',90),\r\n    createData(12,'Unknown','2020-10-10',90),\r\n    createData(13,'Unknown','2020-10-10',90),\r\n    createData(14,'Unknown','2020-10-10',90),\r\n    createData(15,'Unknown','2020-10-10',90),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'id', numeric: false, disablePadding: false, label: 'ID',  },\r\n    { id: 'name', numeric: false, disablePadding: true, label: 'Name',  },\r\n    { id: 'date', numeric: true, disablePadding: true, label: 'Date',  },\r\n    { id: 'score', numeric: true, disablePadding: false, label: 'Score',  },\r\n  ];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',  \r\n  },\r\n  container: {\r\n      maxHeight: '90vh',\r\n  },\r\n  table: {\r\n    minWidth: 250,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  pagination:{\r\n      overflow: 'hidden',\r\n      marginTop: '0px'\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('date');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 15));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>  \r\n        <TableContainer className={classes.container}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      className={classes.row}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" className={classes.row}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\" >{row.name}</TableCell>\r\n                      <TableCell align=\"right\" padding=\"none\" >{row.date}</TableCell>\r\n                      <TableCell align=\"right\" >{row.score}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n            <TablePagination\r\n            rowsPerPageOptions={[]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            className={classes.pagination}\r\n            />\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\CAT300\\src\\statistics\\states.js",[],"C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js",["158","159","160","161"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { SentimentSatisfied } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreatePatient(){\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '25px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n    \r\n    const [name, setName] = useState(null); \r\n    const [ic, setIC] = useState(null); \r\n    const [age, setAge] = useState(0); \r\n    const [gender, setGender] = useState(null); \r\n    const [phone, setPhone] = useState(null); \r\n    const [address, setAddress] = useState(null); \r\n    const [postal, setPostal] = useState(0); \r\n    const [negeri, setNegeri] = useState(null); \r\n    const [city, setCity] = useState(null); \r\n    const [result, setResult] = useState(null); \r\n    const [image, setImage] = useState(null); \r\n\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    const changeResult = (event) => {\r\n        setResult(event.target.value);\r\n    }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.value);\r\n    }\r\n\r\n\r\n    const axios = require('axios');\r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const patient = {\r\n            name: name,\r\n            ic: ic,\r\n            age: age,\r\n            gender: gender,\r\n            phone: phone,\r\n            address: address,\r\n            postal: postal,\r\n            negeri: negeri,\r\n            city: city,\r\n            result: result,\r\n            image: image,\r\n        }\r\n        axios.post('http://localhost:5000/patients/add', patient)\r\n        .then((response)=> {console.log(response.data)})  \r\n        .catch((err)=>console.log(err))      \r\n    }\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit = {onSubmit}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder=\"Name\" name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder=\"NRIC No.\" name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder=\"Age\" name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select style={formControl} onChange={changeGender}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>Gender</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder=\"Contact No.\" name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder=\"Address\" name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder=\"Postal Code\" name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select style={formControl} onChange={changeNegeri}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>State</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={formGroup}> \r\n                        <label style={label}>Result</label>\r\n                        <select style={formControl} onChange={changeResult}>\r\n                            {\r\n                                results.map((result,index)=>{\r\n                                    return(\r\n                                        result===''\r\n                                        ?<option key={index} value={result} disabled selected>Result</option>\r\n                                        :<option key={index} value={result}>{result}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input onChange={changeImage} style={formControl} type=\"text\"/>\r\n                </div>\r\n                    \r\n                 \r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePatient;","C:\\Users\\user\\CAT300\\src\\components\\DeleteWindow.js",["162","163","164"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction DeleteWindow(){\r\n\r\n    const axios = require('axios');\r\n\r\n    const onSubmit = (event) =>{\r\n\r\n        axios.delete('http://localhost:5000/patients/5fe43ad99dc46a2fe82b54c8')\r\n        .then(response => {console.log(response.data)})\r\n        .catch((err)=>console.log(err));   \r\n\r\n        window.location = '/';\r\n    }\r\n           \r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit = {onSubmit} >\r\n                <h3>\r\n                    Delete Patient\r\n                </h3>\r\n                <div>\r\n                    <p>Confirm deletion?</p>\r\n                </div>\r\n                <input type=\"submit\" value=\"Delete1\" className=\"closeButton\"/>\r\n            </form>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default DeleteWindow;","C:\\Users\\user\\CAT300\\src\\components\\EditForm.js",["165","166"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction EditForm(props){\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '25px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n\r\n    const [name, setName] = useState(props.name); \r\n    const [ic, setIC] = useState(props.ic); \r\n    const [age, setAge] = useState(props.age); \r\n    const [gender, setGender] = useState(props.gender); \r\n    const [phone, setPhone] = useState(props.phone); \r\n    const [address, setAddress] = useState(props.address); \r\n    const [postal, setPostal] = useState(props.postal); \r\n    const [negeri, setNegeri] = useState(props.negeri); \r\n    const [city, setCity] = useState(props.city); \r\n    const [result, setResult] = useState(props.result); \r\n    const [image, setImage] = useState(props.image);\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    const changeResult = (event) => {\r\n        setResult(event.target.value);\r\n    }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.value);\r\n    }\r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const patient = {\r\n            name: name,\r\n            ic: ic,\r\n            age: age,\r\n            gender: gender,\r\n            phone: phone,\r\n            address: address,\r\n            postal: postal,\r\n            negeri: negeri,\r\n            city: city,\r\n            result: result,\r\n            image: image,\r\n        }\r\n\r\n        axios.post('http://localhost:5000/patients/update/5fe43ad99dc46a2fe82b54c8', patient)\r\n        .then((response)=> {console.log(response.data)})  \r\n        .catch((err)=>console.log(err))      \r\n    }\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit={onSubmit}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder={name} name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder={ic} name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder={age} name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select onChange={changeGender} style={formControl}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>{props.gender}</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder={phone} name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder={address} name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder={postal} name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select onChange={changeNegeri} style={formControl}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>{props.negeri}</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder={city} name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={formGroup}> \r\n                        <label style={label}>Result</label>\r\n                        <select onChange={changeResult} style={formControl}>\r\n                            {\r\n                                results.map((result,index)=>{\r\n                                    return(\r\n                                        result===''\r\n                                        ?<option key={index} value={result} disabled selected>{result}</option>\r\n                                        :<option key={index} value={result}>{result}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input onChange={changeImage} style={formControl} type=\"text\"/>\r\n                </div>\r\n                    \r\n                 \r\n\r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditForm;","C:\\Users\\user\\CAT300\\src\\components\\NewForm.js",["167"],"function NewForm(){\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '25px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const states = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n\r\n    const results = ['Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"Name\" name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"NRIC No.\" name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"Age\" name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select style={formControl}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>Gender</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"Contact No.\" name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"Address\" name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"Postal Code\" name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select style={formControl}>\r\n                            {\r\n                                states.map((state,index)=>{\r\n                                    return(\r\n                                        state===''\r\n                                        ?<option key={index} value={state} disabled selected>State</option>\r\n                                        :<option key={index} value={state}>{state}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input style={formControl} type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={formGroup}> \r\n                        <label style={label}>Result</label>\r\n                        <select style={formControl}>\r\n                            {\r\n                                results.map((result,index)=>{\r\n                                    return(\r\n                                        result===''\r\n                                        ?<option key={index} value={result} disabled selected>Result</option>\r\n                                        :<option key={index} value={result}>{result}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                </div>\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input style={formControl} type=\"file\"/>\r\n                </div>\r\n                    \r\n                 \r\n\r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewForm;",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":18,"column":8,"nodeType":"174","messageId":"175","endLine":18,"endColumn":21},{"ruleId":"172","severity":1,"message":"176","line":13,"column":9,"nodeType":"174","messageId":"175","endLine":13,"endColumn":13},{"ruleId":"172","severity":1,"message":"177","line":15,"column":8,"nodeType":"174","messageId":"175","endLine":15,"endColumn":15},{"ruleId":"172","severity":1,"message":"178","line":16,"column":10,"nodeType":"174","messageId":"175","endLine":16,"endColumn":37},{"ruleId":"172","severity":1,"message":"179","line":53,"column":9,"nodeType":"174","messageId":"175","endLine":53,"endColumn":13},{"ruleId":"172","severity":1,"message":"180","line":54,"column":9,"nodeType":"174","messageId":"175","endLine":54,"endColumn":11},{"ruleId":"172","severity":1,"message":"181","line":55,"column":9,"nodeType":"174","messageId":"175","endLine":55,"endColumn":15},{"ruleId":"172","severity":1,"message":"182","line":56,"column":9,"nodeType":"174","messageId":"175","endLine":56,"endColumn":12},{"ruleId":"172","severity":1,"message":"183","line":57,"column":9,"nodeType":"174","messageId":"175","endLine":57,"endColumn":12},{"ruleId":"168","replacedBy":"184"},{"ruleId":"170","replacedBy":"185"},{"ruleId":"172","severity":1,"message":"186","line":42,"column":11,"nodeType":"174","messageId":"175","endLine":42,"endColumn":19},{"ruleId":"172","severity":1,"message":"187","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":22},{"ruleId":"172","severity":1,"message":"188","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":16},{"ruleId":"172","severity":1,"message":"189","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":27},{"ruleId":"172","severity":1,"message":"190","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":116,"column":25,"nodeType":"193","endLine":116,"endColumn":135},{"ruleId":"172","severity":1,"message":"177","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":15},{"ruleId":"172","severity":1,"message":"194","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":15},{"ruleId":"172","severity":1,"message":"195","line":7,"column":27,"nodeType":"174","messageId":"175","endLine":7,"endColumn":33},{"ruleId":"172","severity":1,"message":"196","line":7,"column":35,"nodeType":"174","messageId":"175","endLine":7,"endColumn":39},{"ruleId":"172","severity":1,"message":"197","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":13},{"ruleId":"172","severity":1,"message":"198","line":24,"column":9,"nodeType":"174","messageId":"175","endLine":24,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":114,"column":31,"nodeType":"201","messageId":"202","endLine":114,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":132,"column":13,"nodeType":"193","endLine":135,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":31,"column":43,"nodeType":"201","messageId":"202","endLine":31,"endColumn":45},{"ruleId":"191","severity":1,"message":"192","line":125,"column":17,"nodeType":"193","endLine":125,"endColumn":64},{"ruleId":"172","severity":1,"message":"203","line":72,"column":20,"nodeType":"174","messageId":"175","endLine":72,"endColumn":36},{"ruleId":"172","severity":1,"message":"204","line":72,"column":54,"nodeType":"174","messageId":"175","endLine":72,"endColumn":65},{"ruleId":"172","severity":1,"message":"205","line":72,"column":67,"nodeType":"174","messageId":"175","endLine":72,"endColumn":75},{"ruleId":"172","severity":1,"message":"206","line":168,"column":9,"nodeType":"174","messageId":"175","endLine":168,"endColumn":18},{"ruleId":"172","severity":1,"message":"207","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":14},{"ruleId":"172","severity":1,"message":"208","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":28},{"ruleId":"172","severity":1,"message":"190","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":13},{"ruleId":"172","severity":1,"message":"209","line":60,"column":11,"nodeType":"174","messageId":"175","endLine":60,"endColumn":18},{"ruleId":"172","severity":1,"message":"207","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":14},{"ruleId":"172","severity":1,"message":"210","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":25},{"ruleId":"172","severity":1,"message":"190","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"207","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":14},{"ruleId":"172","severity":1,"message":"209","line":58,"column":11,"nodeType":"174","messageId":"175","endLine":58,"endColumn":18},{"ruleId":"172","severity":1,"message":"209","line":54,"column":11,"nodeType":"174","messageId":"175","endLine":54,"endColumn":18},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'CreatePatient' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Details' is defined but never used.","'useFourThreeCardMediaStyles' is defined but never used.","'name' is assigned a value but never used.","'IC' is assigned a value but never used.","'gender' is assigned a value but never used.","'age' is assigned a value but never used.","'CXR' is assigned a value but never used.",["211"],["212"],"'subtitle' is assigned a value but never used.","'FormHelperText' is defined but never used.","'EditForm' is defined but never used.","'ViewAgendaRounded' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NewForm' is defined but never used.","'Router' is defined but never used.","'link' is defined but never used.","'Route' is defined but never used.","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'Link' is defined but never used.","'SentimentSatisfied' is defined but never used.","'subtext' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]