[{"E:\\Y3S1\\300\\CAT300\\src\\index.js":"1","E:\\Y3S1\\300\\CAT300\\src\\App.js":"2","E:\\Y3S1\\300\\CAT300\\src\\reportWebVitals.js":"3","E:\\Y3S1\\300\\CAT300\\src\\pages\\Login.js":"4","E:\\Y3S1\\300\\CAT300\\src\\pages\\Error.js":"5","E:\\Y3S1\\300\\CAT300\\src\\pages\\Home.js":"6","E:\\Y3S1\\300\\CAT300\\src\\components\\NavBar.js":"7","E:\\Y3S1\\300\\CAT300\\src\\components\\ScrollToTop.js":"8","E:\\Y3S1\\300\\CAT300\\src\\pages\\SignUp.js":"9","E:\\Y3S1\\300\\CAT300\\src\\components\\Details.js":"10","E:\\Y3S1\\300\\CAT300\\src\\scan\\index.js":"11","E:\\Y3S1\\300\\CAT300\\src\\information\\index.js":"12","E:\\Y3S1\\300\\CAT300\\src\\components\\About.js":"13","E:\\Y3S1\\300\\CAT300\\src\\pages\\Scan.js":"14","E:\\Y3S1\\300\\CAT300\\src\\information\\App.js":"15","E:\\Y3S1\\300\\CAT300\\src\\components\\PatientTable.js":"16","E:\\Y3S1\\300\\CAT300\\src\\components\\Cards.js":"17","E:\\Y3S1\\300\\CAT300\\src\\components\\Form.js":"18","E:\\Y3S1\\300\\CAT300\\src\\components\\Card.js":"19","E:\\Y3S1\\300\\CAT300\\src\\store\\reducer.js":"20","E:\\Y3S1\\300\\CAT300\\src\\store\\actions.js":"21","E:\\Y3S1\\300\\CAT300\\src\\statistics\\Statistics.js":"22","E:\\Y3S1\\300\\CAT300\\src\\statistics\\states.js":"23","E:\\Y3S1\\300\\CAT300\\src\\pages\\User.js":"24","E:\\Y3S1\\300\\CAT300\\src\\reducers\\index.js":"25","E:\\Y3S1\\300\\CAT300\\src\\reducers\\backdropReducer.js":"26","E:\\Y3S1\\300\\CAT300\\src\\reducers\\authReducer.js":"27","E:\\Y3S1\\300\\CAT300\\src\\reducers\\snackbarReducer.js":"28","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\index.js":"29","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\App.js":"30","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reportWebVitals.js":"31","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\index.js":"32","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\authReducer.js":"33","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\snackbarReducer.js":"34","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\backdropReducer.js":"35","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Login.js":"36","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\NavBar.js":"37","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Home.js":"38","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Error.js":"39","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\SignUp.js":"40","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\Snackbar.js":"41","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\ScrollToTop.js":"42","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\CreatePatient.js":"43","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\utils\\AuthRoute.js":"44","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\User.js":"45","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\Backdrop.js":"46","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\statistics\\Statistics.js":"47","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\scan\\index.js":"48","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\information\\index.js":"49","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\About.js":"50","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\statistics\\states.js":"51","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Scan.js":"52","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\actions\\index.js":"53","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientTable.js":"54","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\SearchPatientBar.js":"55","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\EditUserForm.js":"56","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientProfile.js":"57","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\information\\Patient.js":"58","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\DeletePatient.js":"59","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientCards.js":"60","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\UpdatePatient.js":"61","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientCard.js":"62"},{"size":859,"mtime":1609409059603,"results":"63","hashOfConfig":"64"},{"size":2655,"mtime":1609409059845,"results":"65","hashOfConfig":"64"},{"size":375,"mtime":1608367840780,"results":"66","hashOfConfig":"64"},{"size":3736,"mtime":1609409059713,"results":"67","hashOfConfig":"64"},{"size":355,"mtime":1608367840778,"results":"68","hashOfConfig":"64"},{"size":2236,"mtime":1609409059608,"results":"69","hashOfConfig":"64"},{"size":2226,"mtime":1609409059751,"results":"70","hashOfConfig":"64"},{"size":275,"mtime":1608367840765,"results":"71","hashOfConfig":"64"},{"size":7700,"mtime":1609409059610,"results":"72","hashOfConfig":"64"},{"size":9193,"mtime":1609409059592,"results":"73","hashOfConfig":"64"},{"size":116,"mtime":1608367840780,"results":"74","hashOfConfig":"64"},{"size":120,"mtime":1608367840777,"results":"75","hashOfConfig":"64"},{"size":3247,"mtime":1609409059583,"results":"76","hashOfConfig":"64"},{"size":13348,"mtime":1609409059609,"results":"77","hashOfConfig":"64"},{"size":1435,"mtime":1609409059606,"results":"78","hashOfConfig":"64"},{"size":10497,"mtime":1609409059595,"results":"79","hashOfConfig":"64"},{"size":7702,"mtime":1609409059587,"results":"80","hashOfConfig":"64"},{"size":3741,"mtime":1608367840761,"results":"81","hashOfConfig":"64"},{"size":2889,"mtime":1609409059585,"results":"82","hashOfConfig":"64"},{"size":513,"mtime":1608890395280,"results":"83","hashOfConfig":"64"},{"size":121,"mtime":1609409059614,"results":"84","hashOfConfig":"64"},{"size":6240,"mtime":1608890881081,"results":"85","hashOfConfig":"64"},{"size":3258,"mtime":1608725564652,"results":"86","hashOfConfig":"64"},{"size":2831,"mtime":1608890788492,"results":"87","hashOfConfig":"64"},{"size":357,"mtime":1609409059613,"results":"88","hashOfConfig":"64"},{"size":229,"mtime":1609409059612,"results":"89","hashOfConfig":"64"},{"size":693,"mtime":1609409059611,"results":"90","hashOfConfig":"64"},{"size":494,"mtime":1609409059613,"results":"91","hashOfConfig":"64"},{"size":859,"mtime":1609410569076,"results":"92","hashOfConfig":"93"},{"size":1694,"mtime":1610644328757,"results":"94","hashOfConfig":"93"},{"size":375,"mtime":1609410569081,"results":"95","hashOfConfig":"93"},{"size":357,"mtime":1609410569081,"results":"96","hashOfConfig":"93"},{"size":693,"mtime":1609410569080,"results":"97","hashOfConfig":"93"},{"size":494,"mtime":1609410569081,"results":"98","hashOfConfig":"93"},{"size":229,"mtime":1609410569080,"results":"99","hashOfConfig":"93"},{"size":3400,"mtime":1609411077889,"results":"100","hashOfConfig":"93"},{"size":1912,"mtime":1609411062027,"results":"101","hashOfConfig":"93"},{"size":1790,"mtime":1610644328880,"results":"102","hashOfConfig":"93"},{"size":355,"mtime":1609410569078,"results":"103","hashOfConfig":"93"},{"size":7700,"mtime":1609410569080,"results":"104","hashOfConfig":"93"},{"size":1318,"mtime":1609410569074,"results":"105","hashOfConfig":"93"},{"size":275,"mtime":1609410569074,"results":"106","hashOfConfig":"93"},{"size":12780,"mtime":1610644328814,"results":"107","hashOfConfig":"93"},{"size":474,"mtime":1609410569084,"results":"108","hashOfConfig":"93"},{"size":6724,"mtime":1610639859161,"results":"109","hashOfConfig":"93"},{"size":716,"mtime":1609410569069,"results":"110","hashOfConfig":"93"},{"size":13330,"mtime":1610644211633,"results":"111","hashOfConfig":"93"},{"size":116,"mtime":1609410569082,"results":"112","hashOfConfig":"93"},{"size":132,"mtime":1610644328860,"results":"113","hashOfConfig":"93"},{"size":3247,"mtime":1609410569069,"results":"114","hashOfConfig":"93"},{"size":3272,"mtime":1610639550348,"results":"115","hashOfConfig":"93"},{"size":12791,"mtime":1610644328884,"results":"116","hashOfConfig":"93"},{"size":515,"mtime":1609410569047,"results":"117","hashOfConfig":"93"},{"size":10454,"mtime":1610644328847,"results":"118","hashOfConfig":"93"},{"size":1147,"mtime":1609410569074,"results":"119","hashOfConfig":"93"},{"size":6969,"mtime":1609482817250,"results":"120","hashOfConfig":"93"},{"size":9325,"mtime":1610644329153,"results":"121","hashOfConfig":"93"},{"size":435,"mtime":1610644328856,"results":"122","hashOfConfig":"93"},{"size":1719,"mtime":1610644329182,"results":"123","hashOfConfig":"93"},{"size":6802,"mtime":1610644329166,"results":"124","hashOfConfig":"93"},{"size":12090,"mtime":1610644329139,"results":"125","hashOfConfig":"93"},{"size":2668,"mtime":1610644328839,"results":"126","hashOfConfig":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kqhhxm",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"131"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"131"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"131"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"131"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"131"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"131"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"131"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"131"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"131"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"131"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1kvxv4s",{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"196"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"196"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"196"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Y3S1\\300\\CAT300\\src\\index.js",[],"E:\\Y3S1\\300\\CAT300\\src\\App.js",[],["267","268"],"E:\\Y3S1\\300\\CAT300\\src\\reportWebVitals.js",[],"E:\\Y3S1\\300\\CAT300\\src\\pages\\Login.js",[],"E:\\Y3S1\\300\\CAT300\\src\\pages\\Error.js",[],"E:\\Y3S1\\300\\CAT300\\src\\pages\\Home.js",[],"E:\\Y3S1\\300\\CAT300\\src\\components\\NavBar.js",[],"E:\\Y3S1\\300\\CAT300\\src\\components\\ScrollToTop.js",[],"E:\\Y3S1\\300\\CAT300\\src\\pages\\SignUp.js",["269"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"../store/actions\";\r\n\r\nfunction SignUp(props) {\r\n  const container = {\r\n    display: \"flex\",\r\n    height: \"90vh\",\r\n    width: \"100%\",\r\n    alignItems: \"center\"\r\n  };\r\n  const wrapper = {\r\n    display: \"flex\",\r\n    margin: \"0 auto\",\r\n    padding: \"20px 40px\",\r\n    minWidth: \"350px\",\r\n    width: \"40%\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    border: \"1px solid rgba(0,0,0,15%)\",\r\n    boxShadow: \"5px 5px 5px rgba(0,0,0,16%), -5px 5px 5px rgba(0,0,0,16%)\",\r\n    gap: \"20px\",\r\n    borderRadius: \"2%\"\r\n  };\r\n  const button = {\r\n    height: \"32px\",\r\n    width: \"100%\"\r\n  };\r\n  const textArea = {\r\n    paddingTop: \"5px\",\r\n    width: \"100%\",\r\n    paddingLeft: \"5px\"\r\n  };\r\n  const subtext = {\r\n    fontSize: \"12px\",\r\n    fontWeight: \"700\",\r\n    textAlign: \"right\",\r\n    width: \"100%\",\r\n    marginTop: \"-10px\",\r\n    padding: \"0\"\r\n  };\r\n  const states = [\r\n    \"\",\r\n    \"Wilayah Persekutuan\",\r\n    \"Selangor\",\r\n    \"Johor\",\r\n    \"Kedah\",\r\n    \"Kelantan\",\r\n    \"Melaka\",\r\n    \"Negeri Sembilan\",\r\n    \"Pahang\",\r\n    \"Penang\",\r\n    \"Perak\",\r\n    \"Perlis\",\r\n    \"Sabah\",\r\n    \"Sarawak\",\r\n    \"Terengganu\"\r\n  ];\r\n\r\n  const history = useHistory();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [facilityName, setFacilityName] = useState(\"\");\r\n  const [facilityAddress, setFacilityAddress] = useState(\"\");\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  function handleEmail(e) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handlePhone(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n\r\n  function handleFacilityName(e) {\r\n    setFacilityName(e.target.value);\r\n  }\r\n\r\n  function handleFacilityAddress(e) {\r\n    setFacilityAddress(e.target.value);\r\n  }\r\n\r\n  function handlePostal(e) {\r\n    setPostal(e.target.value);\r\n  }\r\n\r\n  function handleState(e) {\r\n    setState(e.target.value);\r\n  }\r\n\r\n  function handleCity(e) {\r\n    setCity(e.target.value);\r\n  }\r\n\r\n  function handlePage() {\r\n    history.push(\"/scan\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // const { email, password } = this.state;\r\n\r\n    // Post request to backend\r\n    fetch(\"http://localhost:5000/users/register\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n        phone: phone,\r\n        facilityName: facilityName,\r\n        facilityAddress: facilityAddress,\r\n        postal: postal,\r\n        state: state,\r\n        city: city\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(\"json\", json);\r\n        if (json.success) {\r\n          setErrorMessage(json.message);\r\n          props.setToken(json.token);\r\n          handlePage();\r\n        } else {\r\n          setErrorMessage(json.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={container}>\r\n      <div style={wrapper}>\r\n        <p className=\"md-text bold\">Join Us Today</p>\r\n        <form action=\"\" method=\"post\" className=\"form\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">Email</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={handleEmail}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">Password</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                onChange={handlePassword}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Healthcare Facility Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Healthcare Facility Name\"\r\n              name=\"facility name\"\r\n              onChange={handleFacilityName}\r\n            />\r\n          </div>\r\n          {/* <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">\r\n              Healthcare Facility Description\r\n            </label>\r\n            <textArea\r\n              rows=\"3\"\r\n              style={textArea}\r\n              type=\"text\"\r\n              placeholder=\"Restaurant Description\"\r\n              name=\"description\"\r\n            />\r\n          </div> */}\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">Name</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                onChange={handleName}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">Mobile Phone</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Mobile Phone\"\r\n                name=\"phone\"\r\n                onChange={handlePhone}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Healthcare Facility Address</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Healthcare Facility Address\"\r\n              name=\"address\"\r\n              onChange={handleFacilityAddress}\r\n            />\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">Postal Code</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Postal Code\"\r\n                name=\"postal code\"\r\n                onChange={handlePostal}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">State</label>\r\n              <select className=\"form-control\" onChange={handleState}>\r\n                {states.map((state, index) => {\r\n                  return state === \"\" ? (\r\n                    <option key={index} value={state} disabled selected>\r\n                      State\r\n                    </option>\r\n                  ) : (\r\n                    <option key={index} value={state}>\r\n                      {state}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"sm-text bold\">City</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                onChange={handleCity}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Upload Image</label>\r\n            <input type=\"file\" name=\"image\" accept=\"image/*\" />\r\n          </div> */}\r\n\r\n          {errorMessage && (\r\n            <p style={{ color: \"red\", textAlign: \"center\" }}>{errorMessage}</p>\r\n          )}\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Sign Up\"\r\n            style={button}\r\n            className=\"button bold\"\r\n            onClick={handleSubmit}\r\n          />\r\n\r\n          <Link style={subtext} to=\"/login\">\r\n            Back To Login Page\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToken: token =>\r\n      dispatch({ type: actionTypes.SIGNEDIN, userToken: token })\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","E:\\Y3S1\\300\\CAT300\\src\\components\\Details.js",["270"],"import React from \"react\";\r\nimport './Details.css';\r\n\r\n\r\nfunction Details(){\r\n\r\n    return(\r\n        <div className=\"page\">\r\n            \r\n \r\n            <div className=\"header\">\r\n                \r\n                <h4 className=\"title\">\r\n                    <b>LIU YU XIN</b>\r\n                </h4>\r\n                <div className=\"buttons\">\r\n                    <button className=\"editButton\">Edit</button>\r\n                    <button className=\"deleteButton\">Delete</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n            \r\n            <div className=\"Flexbox\">\r\n                <div className=\"image\">\r\n                    <img src=\"https://wx3.sinaimg.cn/mw690/ec074f36gy1gljviraraeg20ex0ba7wn.gif\"></img>\r\n                </div>\r\n\r\n               \r\n                <table className=\"table\">\r\n                    <tr>\r\n                        <th color=\"black\">NRIC No.</th>\r\n                        <th>970420-33-0320</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Age</th>\r\n                        <th>23</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Gender</th>\r\n                        <th>Female</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Adress</th>\r\n                        <th>Guizhou, Guiyang.</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Contact No.</th>\r\n                        <th>183201314</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Hospital</th>\r\n                        <th>Chimelong Hospital</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th classname=\"Butir\">Result</th>\r\n                        <th>Negative</th>\r\n                    </tr>\r\n                    \r\n\r\n                </table>\r\n            \r\n        </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Details;","E:\\Y3S1\\300\\CAT300\\src\\scan\\index.js",[],"E:\\Y3S1\\300\\CAT300\\src\\information\\index.js",[],"E:\\Y3S1\\300\\CAT300\\src\\components\\About.js",["271"],"  \r\nimport male from '../assets/images/male.jpg'\r\nimport female from '../assets/images/female.jpg'\r\nfunction About(){\r\n    \r\n    const wrapper={\r\n        height: '90vh'\r\n    }\r\n    const team={\r\n        display: 'flex',\r\n        flexWrap:'wrap',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        top: '25%',\r\n    }\r\n    const teamMember={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        fontSize: '20px',\r\n        position: 'relative',\r\n        gap: '10px'\r\n    };\r\n    const portraitBox={\r\n        width: '200px',\r\n        height: '200px',\r\n    };\r\n    const portrait={\r\n        borderRadius: '50%',\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n    };\r\n    const title={\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        top: '15%',\r\n    };\r\n\r\n    const subtitle={\r\n        color: 'rgb(150,150,150)',\r\n    };\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}><p className=\"xlg-text bold primary-color\">Meet Our Team</p></div>\r\n            <div style={team}>\r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={male} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Lim Shau Hong</p>\r\n                    <p className=\"secondary-color\">Detection</p>\r\n                </div> \r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={male} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Ng Jing Xuan</p>\r\n                    <p className=\"secondary-color\">Dashboard</p>\r\n                </div>\r\n                <div className=\"md-text bold\" style={teamMember}>\r\n                    <div style={portraitBox}><img src={female} alt=\"Logo\" style={portrait} /></div>\r\n                    <p>Yeo Pui Yan</p>\r\n                    <p className=\"secondary-color\">Information</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","E:\\Y3S1\\300\\CAT300\\src\\pages\\Scan.js",["272","273"],"import xray from '../assets/images/xray.jpg';\r\nimport PatientTable from '../components/PatientTable';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport React, {useState, useEffect, useRef} from 'react';\r\n\r\nfunction Scan(){\r\n    const [model,setModel] = useState(null);\r\n    const [result,setResult] = useState(null);\r\n    const imageRef = useRef();\r\n    const label = ['COVID-19', 'Normal'];\r\n\r\n    useEffect(()=>{\r\n        const fetchModel = async ()=>{\r\n            const localModel = await tf.loadLayersModel(\"http://localhost:5000/ResNet50/model.json\");\r\n            setModel(localModel);\r\n            console.log(\"Model Loaded\");\r\n        }\r\n        fetchModel();\r\n    },[]);\r\n\r\n    const handleClick = async ()=> {\r\n        const scanImage = imageRef.current;\r\n        let tensor = tf.browser.fromPixels(scanImage);\r\n        tensor = tf.image.resizeNearestNeighbor(tensor, [224,224]);\r\n        tensor = tensor.toFloat().div(255).expandDims();\r\n        console.log(\"Preprocessed\");\r\n        const predictions = await model.predict(tensor).data();\r\n        console.log(\"Predicted\");\r\n        console.log(predictions);\r\n        const results = [];\r\n        predictions.map((prediction,index)=>{\r\n            results[index] = parseFloat(prediction*100).toFixed(2);\r\n        })\r\n        setResult(results);\r\n    }\r\n     \r\n\r\n    const wrapper = {\r\n        height: '90vh',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '3fr 5fr 3fr',\r\n    };\r\n    const information = {\r\n        minWidth: '250px',\r\n    };\r\n    const panel = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        height: '90vh',\r\n        width: '100%',\r\n        minWidth: '400px',\r\n    };\r\n    const image = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    }\r\n    const analysis = {\r\n        minWidth: '250px',\r\n    };\r\n    const container = {\r\n        height: '90vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const upperPane = {\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        gap: '20px',\r\n    };\r\n    const group = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '60px auto',\r\n    }\r\n    const positive = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        color: 'rgb(255,255,255)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%',\r\n    }\r\n    const negative = {\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        color: 'dimgray',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%'\r\n    }\r\n    const bar = {\r\n        width: '100%',\r\n        borderRadius: '2%',\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        border: '1px solid rgba(0,0,0,15%)',\r\n        margin: '60px auto 30px auto',\r\n\r\n    }\r\n    const barFill = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        width: '90%',\r\n        height: '36px',\r\n    }\r\n  \r\n    const lowerPane = {\r\n        margin:'0 auto',\r\n        marginBottom: '20px',\r\n        width: '70%',\r\n        height: '48px',\r\n        borderRadius: '2%',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n    };\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={information}>\r\n                <PatientTable/>\r\n            </div>\r\n            <div style={panel}>\r\n                <img src={xray} style={image} ref={imageRef} /> \r\n            </div>\r\n            <div style={analysis}>\r\n                <div style={container}>\r\n                    <div style={upperPane}>\r\n                        <div>\r\n                        <p className=\"sm-text bold\">Result</p>\r\n                        <div style={group}>\r\n                            <div style={positive}>\r\n                                <p className=\"sm-text bold\">Positive</p>\r\n                            </div>\r\n                            <div style={negative}>\r\n                                <p className=\"sm-text bold\">Negative</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"sm-text bold\">Abnormality Score</p>\r\n                            <div style={bar} >\r\n                                <div style={barFill}/>\r\n                            </div>\r\n                            <div style={{display:'flex', justifyContent:'space-around', gap: '20px', alignItems:'center'}}>\r\n                                {\r\n                                    result && result.map((item,index)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <p className=\"md-text bold\">{label[index]}</p>\r\n                                                <p className=\"md-text bold\" style={{textAlign: 'center', padding:'10px 0px'}}>{item}</p>\r\n                                            </div>\r\n                                        ) \r\n                                    }\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {model && <button style={lowerPane} className=\"button sm-text bold\" onClick={handleClick}>Scan</button>}\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scan;","E:\\Y3S1\\300\\CAT300\\src\\information\\App.js",["274","275","276","277"],"import './App.css';\r\nimport React, {useState} from 'react';\r\nimport Cards from \"../components/Cards\";\r\nimport Details from \"../components/Details\";\r\nimport Modal from 'react-modal';\r\nimport Form from \"../components/Form\";\r\nimport { BrowserRouter as Router, link } from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n\r\n  const [modalIsOpen,setModalIsOpen] = useState(false);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <button onClick={() => setModalIsOpen(true)} className=\"AddNewButton\">Add New</button>\r\n      <Modal classname=\"Modal\"\r\n        isOpen={modalIsOpen} \r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={\r\n          {\r\n            overlay:{\r\n              backgroundColor:'rgba(0,0,0,0.75)',\r\n            }, \r\n            content:{\r\n              padding: '30px',\r\n              color: 'yellow',\r\n              width: '50%', \r\n              margin: 'auto',     \r\n            }\r\n          }\r\n        }\r\n\r\n        \r\n        >\r\n        <Form />\r\n        <button className=\"closeButton\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n      </Modal>\r\n      \r\n      \r\n      <div className=\"Dashboard\">\r\n        <Cards />\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Y3S1\\300\\CAT300\\src\\components\\PatientTable.js",["278","279","280","281"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction createData(id, name, date, score){\r\n    return {id, name, date, score};\r\n}\r\n\r\nconst rows = [\r\n    createData(1,'Unknown','2020-10-10',90),\r\n    createData(2,'Unknown','2020-10-10',90),\r\n    createData(3,'Unknown','2020-10-10',90),\r\n    createData(4,'Unknown','2020-10-10',90),\r\n    createData(5,'Unknown','2020-10-10',90),\r\n    createData(6,'Unknown','2020-10-10',90),\r\n    createData(7,'Unknown','2020-10-10',90),\r\n    createData(8,'Unknown','2020-10-10',90),\r\n    createData(9,'Unknown','2020-10-10',90),\r\n    createData(10,'Unknown','2020-10-10',90),\r\n    createData(11,'Unknown','2020-10-10',90),\r\n    createData(12,'Unknown','2020-10-10',90),\r\n    createData(13,'Unknown','2020-10-10',90),\r\n    createData(14,'Unknown','2020-10-10',90),\r\n    createData(15,'Unknown','2020-10-10',90),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'id', numeric: false, disablePadding: false, label: 'ID',  },\r\n    { id: 'name', numeric: false, disablePadding: true, label: 'Name',  },\r\n    { id: 'date', numeric: true, disablePadding: true, label: 'Date',  },\r\n    { id: 'score', numeric: true, disablePadding: false, label: 'Score',  },\r\n  ];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',  \r\n  },\r\n  container: {\r\n      maxHeight: '90vh',\r\n  },\r\n  table: {\r\n    minWidth: 250,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  pagination:{\r\n      overflow: 'hidden',\r\n      marginTop: '0px'\r\n  }\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('date');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 15));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>  \r\n        <TableContainer className={classes.container}>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            aria-label=\"enhanced table\"\r\n            stickyHeader\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      className={classes.row}\r\n                    >\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" className={classes.row}>\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" padding=\"none\" >{row.name}</TableCell>\r\n                      <TableCell align=\"right\" padding=\"none\" >{row.date}</TableCell>\r\n                      <TableCell align=\"right\" >{row.score}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n            <TablePagination\r\n            rowsPerPageOptions={[]}\r\n            component=\"div\"\r\n            count={rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            className={classes.pagination}\r\n            />\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Y3S1\\300\\CAT300\\src\\components\\Cards.js",[],"E:\\Y3S1\\300\\CAT300\\src\\components\\Form.js",["282"],"import React from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    \r\n    Field:{\r\n        margin: 20,\r\n    },\r\n\r\n    selector:{\r\n        marginLeft: 20,\r\n        minWidth: 220,\r\n    }\r\n    \r\n  }));\r\n\r\n\r\nfunction Form(){\r\n\r\n    const styles = useStyles();\r\n    const [gender,setGender] = React.useState('');\r\n    const [result,setResult] = React.useState('');\r\n    const handleChange_gender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const handleChange_result = (event) => {\r\n        setResult(event.target.value);\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" />\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"NRIC No.\" variant=\"outlined\" />\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Age\" variant=\"outlined\" />\r\n            </div>\r\n            <div>\r\n                <FormControl fullwidth variant=\"outlined\" className={styles.selector}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Gender</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={gender}\r\n                        onChange={handleChange_gender}\r\n                        label=\"Gender\"\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Male\"}>Male</MenuItem>\r\n                    <MenuItem value={\"Female\"}>Female</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField fullwidth id=\"outlined-basic\" label=\"Contact No.\" variant=\"outlined\" />\r\n            </div>      \r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Hospital\" variant=\"outlined\" />\r\n            </div>\r\n            <div>\r\n                <FormControl fullwidth variant=\"outlined\" className={styles.selector}>\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Scan Result</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-outlined-label\"\r\n                        id=\"demo-simple-select-outlined\"\r\n                        value={result}\r\n                        onChange={handleChange_result}\r\n                        label=\"Result\"\r\n                    >\r\n                        <MenuItem value1=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={\"Positive\"}>Positive</MenuItem>\r\n                        <MenuItem value={\"Negative\"}>Negative</MenuItem>\r\n                        <MenuItem value={\"Unknown\"}>Unknown</MenuItem>\r\n                    </Select>\r\n                </FormControl>            \r\n            </div>\r\n            <div className={styles.Field}>\r\n                <TextField id=\"outlined-basic\" label=\"Chest X-ray\" variant=\"outlined\" />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","E:\\Y3S1\\300\\CAT300\\src\\components\\Card.js",["283","284","285","286","287","288"],"import React from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronRightRounded from '@material-ui/icons/ChevronRightRounded';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\r\nimport {Grid} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n      maxWidth: 304,\r\n      margin: 'auto',\r\n      boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n      borderRadius: 0,\r\n      padding: 20,\r\n    },\r\n    content: {\r\n      padding: 24,\r\n    },\r\n    cta: {\r\n      marginTop: 24,\r\n      textTransform: 'initial',\r\n      backgroundColor:'#85C1E9',\r\n      color:\"white\",\r\n\r\n    },\r\n  }));\r\n\r\nexport default function PatientCard(props){\r\n\r\n    \r\n\r\n    const{\r\n        name,\r\n        IC,\r\n        gender,\r\n        age,\r\n        CXR,\r\n        status,\r\n    } = props;\r\n\r\n\r\n    const styles = useStyles();\r\n    const mediaStyles = useWideCardMediaStyles();\r\n    const textCardContentStyles = useN01TextInfoContentStyles();\r\n    const shadowStyles = useBouncyShadowStyles();\r\n\r\n    return (\r\n        <Card className={cx(styles.root, shadowStyles.root)}>\r\n          <CardMedia\r\n            classes={mediaStyles}\r\n            image={props.CXR}\r\n          />\r\n          <CardContent className={styles.content}>\r\n            <TextInfoContent\r\n              classes={textCardContentStyles}\r\n              heading={props.name}\r\n              body={status}\r\n            />\r\n            <Link to = '/patients/1'>\r\n              <Button color={'primary'} fullWidth className={styles.cta}>\r\n                More Details <ChevronRightRounded />\r\n              </Button>\r\n            </Link>\r\n            \r\n          </CardContent>\r\n        </Card>\r\n      );\r\n\r\n\r\n\r\n}","E:\\Y3S1\\300\\CAT300\\src\\store\\reducer.js",[],"E:\\Y3S1\\300\\CAT300\\src\\store\\actions.js",[],"E:\\Y3S1\\300\\CAT300\\src\\statistics\\Statistics.js",["289","290","291"],"import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { states } from \"./states\";\r\nimport { connect } from \"react-redux\";\r\nfunction Statistics(props) {\r\n  const container = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  };\r\n\r\n  const innerContainer = {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"800px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  };\r\n\r\n  const columns = {\r\n    columnCount: 3,\r\n    columnGap: \"40px\",\r\n    columnRule: \"1px solid lightblue\"\r\n  };\r\n\r\n  const row = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  };\r\n\r\n  const charts = {\r\n    minHeight: 600,\r\n    minWidth: 800,\r\n    marginTop: 10\r\n  };\r\n\r\n  const blueCards = {\r\n    background: \"#1D5BB8\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const greenCards = {\r\n    background: \"#8EC3A7\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const yellowCards = {\r\n    background: \"#F0CB69\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const redCards = {\r\n    background: \"#DC5356\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const purpleCards = {\r\n    background: \"#9F6DAA\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const mapTitle = {\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"1.2\",\r\n    fontWeight: \"900\"\r\n  };\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const renderMarkers = () => {\r\n    var data = [];\r\n    states.map((state, index) => {\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {state.infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getDataWithFetch = async () => {\r\n    const response = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/6t65lJVfs3d8s6aKc/records/LATEST?disableRedirect=true\"\r\n    );\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.token);\r\n    getDataWithFetch();\r\n  });\r\n\r\n  return (\r\n    <div style={container}>\r\n      <span class=\"malaysia-state-flag-icon malaysia-state-flag-icon-mlk\"></span>\r\n      <div style={innerContainer}>\r\n        <div style={row}>\r\n          <div style={blueCards}>\r\n            Total Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.testedPositive}\r\n            </h2>\r\n          </div>\r\n          <div style={greenCards}>\r\n            Total Recovered:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.recovered}\r\n            </h2>\r\n          </div>\r\n          <div style={yellowCards}>\r\n            Total Active Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.activeCases}\r\n            </h2>\r\n          </div>\r\n          <div style={redCards}>\r\n            Total Death Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.deceased}\r\n            </h2>\r\n          </div>\r\n          <div style={purpleCards}>\r\n            Total ICU:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.inICU}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            color: \"rgb(170, 170, 170)\",\r\n            marginBottom: 15\r\n          }}\r\n        >\r\n          Source: Health Ministry • Active cases means total confirmed cases\r\n          minus deaths and recoveries.\r\n        </p>\r\n\r\n        <embed\r\n          style={charts}\r\n          src=\"https://flo.uri.sh/visualisation/1985060/embed\"\r\n        ></embed>\r\n      </div>\r\n      <div style={{ height: 30 }} />\r\n      <div>\r\n        <div id=\"map\" style={{ height: 420, width: 780 }}>\r\n          <h2 style={mapTitle}>\r\n            Malaysia State CONVID-19 Daily Total New Cases\r\n          </h2>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAdWEmhfQyer_yx4JlOAcJxkfjVKN3TcJg\"\r\n            }}\r\n            defaultCenter={{\r\n              lat: 3.9743,\r\n              lng: 102.4381\r\n            }}\r\n            defaultZoom={7.5}\r\n          >\r\n            {renderMarkers()}\r\n          </GoogleMapReact>\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              color: \"rgb(170, 170, 170)\",\r\n              marginBottom: 15\r\n            }}\r\n          >\r\n            Source: Health Ministry • Cases are updated on 12am daily.\r\n          </p>\r\n          <div style={{ height: 30 }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","E:\\Y3S1\\300\\CAT300\\src\\statistics\\states.js",[],"E:\\Y3S1\\300\\CAT300\\src\\pages\\User.js",["292"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../components/Details.css\";\r\n\r\nfunction User(props) {\r\n  useEffect(() => {\r\n    console.log(props.token);\r\n\r\n    fetch(\"http://localhost:5000/users/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        // prettier-ignore\r\n        \"Authorization\": props.token,\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json) {\r\n          console.log(json);\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      });\r\n  });\r\n\r\n  //   function onSignIn(e) {\r\n  //     // Grab state\r\n  //     e.preventDefault();\r\n\r\n  //     // const { email, password } = this.state;\r\n\r\n  //     // Post request to backend\r\n  //     fetch(\"http://localhost:5000/users/login\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         email: email,\r\n  //         password: password\r\n  //       })\r\n  //     })\r\n  //       .then(res => res.json())\r\n  //       .then(json => {\r\n  //         console.log(\"json\", json);\r\n  //         if (json.success) {\r\n  //         } else {\r\n  //         }\r\n  //       });\r\n  //   }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h4 className=\"title\">\r\n          <b>User</b>\r\n        </h4>\r\n        <div className=\"buttons\">\r\n          <button className=\"editButton\">Edit</button>\r\n          <button className=\"deleteButton\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Flexbox\">\r\n        <div className=\"image\">\r\n          <img src=\"https://wx3.sinaimg.cn/mw690/ec074f36gy1gljviraraeg20ex0ba7wn.gif\"></img>\r\n        </div>\r\n\r\n        <table className=\"table\">\r\n          <tr>\r\n            <th color=\"black\">NRIC No.</th>\r\n            <th>970420-33-0320</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Age</th>\r\n            <th>23</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Gender</th>\r\n            <th>Female</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Adress</th>\r\n            <th>Guizhou, Guiyang.</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Contact No.</th>\r\n            <th>183201314</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Hospital</th>\r\n            <th>Chimelong Hospital</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Result</th>\r\n            <th>Negative</th>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","E:\\Y3S1\\300\\CAT300\\src\\reducers\\index.js",[],"E:\\Y3S1\\300\\CAT300\\src\\reducers\\backdropReducer.js",[],"E:\\Y3S1\\300\\CAT300\\src\\reducers\\authReducer.js",[],"E:\\Y3S1\\300\\CAT300\\src\\reducers\\snackbarReducer.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\index.js",[],["293","294"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\App.js",["295","296","297","298"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reportWebVitals.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\index.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\authReducer.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\snackbarReducer.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\reducers\\backdropReducer.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Login.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\NavBar.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Home.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Error.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\SignUp.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\Snackbar.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\ScrollToTop.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\CreatePatient.js",["299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport { SentimentSatisfied } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreatePatient(props){\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '30px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['','Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n    \r\n    const [name, setName] = useState(\"\"); \r\n    const [ic, setIC] = useState(\"\"); \r\n    const [age, setAge] = useState(\"\"); \r\n    const [gender, setGender] = useState(\"\"); \r\n    const [phone, setPhone] = useState(\"\"); \r\n    const [address, setAddress] = useState(\"\"); \r\n    const [postal, setPostal] = useState(\"\"); \r\n    const [negeri, setNegeri] = useState(\"\"); \r\n    const [city, setCity] = useState(\"\"); \r\n    //const [result, setResult] = useState(\"\"); \r\n    const [image, setImage] = useState(\"\"); \r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [icError, setIcError] = useState(\"\");\r\n    const [ageError, setAgeError] = useState(\"\");\r\n    const [genderError, setGenderError] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [addressError, setAddressError] = useState(\"\");\r\n    const [postalError, setPostalError] = useState(\"\");\r\n    const [negeriError, setNegeriError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n    //const [resultError, setResultError] = useState(\"\");\r\n    const [imageError, setImageError] = useState(\"\");\r\n\r\n\r\n    const formValidation = () => {\r\n        const nameError = {};\r\n        const icError = {};\r\n        const ageError = {};\r\n        const genderError = {};\r\n        const phoneError = {};\r\n        const addressError = {};\r\n        const postalError = {};\r\n        const negeriError = {};\r\n        const cityError = {};\r\n        //const resultError = {};\r\n        const imageError = {};\r\n\r\n\r\n        let isValid = true;\r\n\r\n        if(name.trim().length < 1){\r\n            nameError.emptyName = \"Please fill in patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.emptyName));\r\n            isValid = false;\r\n        }\r\n\r\n        if(ic.trim().length < 1){\r\n            icError.emptyIc = \"Please fill in patient's NRIC number.\";\r\n            dispatch(setSnackbar(true,'error', icError.emptyIc));\r\n            isValid = false;\r\n        }\r\n\r\n        if(age.trim().length < 1){\r\n            ageError.emptyAge = \"Please fill in patient's age.\";\r\n            dispatch(setSnackbar(true,'error', ageError.emptyAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if(phone.trim().length < 1){\r\n            phoneError.emptyPhone = \"Please fill in patient's contact number.\";\r\n            dispatch(setSnackbar(true,'error', phoneError.emptyPhone));\r\n            isValid = false;\r\n        }\r\n\r\n        if(address.trim().length < 1){\r\n            addressError.emptyAddress = \"Please fill in patient's address.\";\r\n            dispatch(setSnackbar(true,'error', addressError.emptyAddress));\r\n            isValid = false;\r\n        }\r\n\r\n        if(postal.trim().length < 1){\r\n            postalError.emptyPostal = \"Please fill in patient's postal code.\";\r\n            dispatch(setSnackbar(true,'error', postalError.emptyPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if(negeri.trim().length < 1){\r\n            negeriError.emptyNegeri = \"Please fill in patient's state of \";\r\n            dispatch(setSnackbar(true,'error', negeriError.emptyNegeri));\r\n            isValid = false;\r\n        }\r\n\r\n        if(city.trim().length < 1){\r\n            cityError.emptyCity = \"Please fill in patient's city.\";\r\n            dispatch(setSnackbar(true,'error', cityError.emptyCity));\r\n            isValid = false;\r\n        }\r\n\r\n        // if(result.trim().length < 1){\r\n        //     resultError.emptyResult = \"Please fill in patient's scan result.\";\r\n        //     dispatch(setSnackbar(true,'error', resultError.emptyResult));\r\n        //     isValid = false;\r\n        // }\r\n\r\n        setNameError(nameError);\r\n        setIcError(icError);\r\n        setAgeError(ageError);\r\n        setGenderError(genderError);\r\n        setPhoneError(phoneError);\r\n        setAddressError(addressError);\r\n        setPostalError(postalError);\r\n        setNegeriError(negeriError);\r\n        setCityError(cityError);\r\n        //setResultError(resultError);\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    // const changeResult = (event) => {\r\n    //     setResult(event.target.value);\r\n    // }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.files[0]);\r\n    }\r\n\r\n\r\n    const axios = require('axios');\r\n    const token = useSelector(state=>state.auth.token);\r\n\r\n    const headers = {\r\n        'authorization': token,\r\n    }\r\n\r\n    console.log(token);   \r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        if(isValid){\r\n            const patient = {\r\n                name: name,\r\n                ic: ic,\r\n                age: age,\r\n                gender: gender,\r\n                phone: phone,\r\n                address: address,\r\n                postal: postal,\r\n                negeri: negeri,\r\n                city: city,\r\n                //result: result,\r\n                image: image,\r\n            }\r\n\r\n            const formData = new FormData();\r\n            for(let key in patient){\r\n                formData.append(key,patient[key]);\r\n            }\r\n            \r\n            axios.post('http://localhost:5000/patients/add', formData, {headers:headers})\r\n            .then((response)=> {console.log(response.data)})  \r\n            .catch((err)=>console.log(err)); \r\n            \r\n            window.location.reload(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit = {onSubmit}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder=\"Name\" name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder=\"NRIC No.\" name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder=\"Age\" name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select style={formControl} onChange={changeGender}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>Gender</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder=\"Contact No.\" name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder=\"Address\" name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder=\"Postal Code\" name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select style={formControl} onChange={changeNegeri}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>State</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* <div style={formGroup}> \r\n                        <label style={label}>Result</label>\r\n                        <select style={formControl} onChange={changeResult}>\r\n                            {\r\n                                results.map((result,index)=>{\r\n                                    return(\r\n                                        result===''\r\n                                        ?<option key={index} value={result} disabled selected>Result</option>\r\n                                        :<option key={index} value={result}>{result}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                </div> */}\r\n\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input onChange={changeImage} style={formControl} type=\"file\" accept=\"image/*\"/>\r\n                </div>\r\n                    \r\n                 \r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePatient;","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\utils\\AuthRoute.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\User.js",["316","317","318","319","320","321","322"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\Backdrop.js",["323"],"import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: 10000,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst CustomizedBackdrop = () => {\r\n  const classes = useStyles();\r\n  const open = useSelector(state=>state.backdrop);\r\n\r\n  return (\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n  );\r\n}\r\n\r\nexport default CustomizedBackdrop;\r\n","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\statistics\\Statistics.js",["324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\scan\\index.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\information\\index.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\About.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\statistics\\states.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\pages\\Scan.js",["368","369","370","371"],"import PatientTable from '../components/PatientTable';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar, setBackdrop } from '../actions';\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction Scan(){\r\n    const token = useSelector(state=>state.auth.token);\r\n    const dispatch = useDispatch();\r\n    const [model,setModel] = useState(null);\r\n    const [result,setResult] = useState(null);\r\n    const [patients,setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [xray, setXray] = useState(null);\r\n    const imageRef = useRef();\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchModel = async ()=>{\r\n            try{\r\n                dispatch(setBackdrop(true));\r\n                const localModel = await tf.loadLayersModel(\"http://localhost:5000/assets/ResNet50/model.json\");\r\n                setModel(localModel);\r\n                dispatch(setBackdrop(false));\r\n            }catch(err){\r\n                dispatch(setBackdrop(false));\r\n                dispatch(setSnackbar(true,'error','Request Error'));\r\n            }\r\n        };\r\n        fetchModel();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const getPatientsRequest = async () => {\r\n            try{\r\n                const res = await fetch(\r\n                    'http://localhost:5000/patients/',\r\n                    {\r\n                        method: \"GET\",\r\n                        headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                        }\r\n                    },\r\n                );\r\n                const json = await res.json();\r\n                if(res.ok){\r\n                    setPatients(json.matchPatients);\r\n                }else{\r\n                    dispatch(setSnackbar(true,'error',json.message));\r\n                }\r\n            }catch(error){\r\n                dispatch(setSnackbar(true,'error','Request Error'));\r\n            }\r\n        };\r\n        getPatientsRequest();\r\n    }, [result]);\r\n\r\n    const postResultRequest = async(results)=>{\r\n        try{\r\n            const res = await fetch(\r\n                `http://localhost:5000/patients/updateStatus/${selectedPatient._id}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                    },\r\n                    body: JSON.stringify({result:results[0]>50?\"Positive\":\"Negative\", score:results[0]}),\r\n                }\r\n            );\r\n            const json = await res.json();\r\n            if(res.ok){\r\n                dispatch(setSnackbar(true,'success',json.message));\r\n            }else{\r\n                dispatch(setSnackbar(true,'error',json.message));\r\n            }\r\n        }catch(error){\r\n            dispatch(setSnackbar(true,'error','Request Error'));\r\n        }\r\n    };\r\n\r\n    const handleScan = async ()=> {\r\n        dispatch(setBackdrop(true));\r\n        const scanImage = imageRef.current;\r\n        let tensor = tf.browser.fromPixels(scanImage);\r\n        tensor = tf.image.resizeNearestNeighbor(tensor, [224,224]);\r\n        tensor = tensor.toFloat().div(255).expandDims();\r\n        const predictions = await model.predict(tensor).data();\r\n        const results = [];\r\n        predictions.forEach((prediction,index)=>{\r\n            results[index] = parseFloat(prediction*100);\r\n        })\r\n        setResult(results);\r\n        postResultRequest(results);\r\n        const updatedPatient = selectedPatient;\r\n        updatedPatient.score = results[0];\r\n        updatedPatient.result = results[0]>50? \"Positive\": \"Negative\";\r\n        setSelectedPatient(updatedPatient);\r\n        dispatch(setBackdrop(false));\r\n    };\r\n\r\n    const handleClick = (patient) => {\r\n        setSelectedPatient(patient);\r\n        setXray(patient.image);\r\n    };\r\n\r\n    const positiveStyles = buildStyles({\r\n        textSize: '16px',\r\n        text:'inherit',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n    });\r\n\r\n    const negativeStyles = buildStyles({\r\n        textSize: '16px',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${100-selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n        fontWeight: 700,\r\n    });\r\n    \r\n    const wrapper = {\r\n        height: '90vh',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '3fr 5fr 3fr',\r\n    };\r\n    const information = {\r\n        minWidth: '250px',\r\n    };\r\n    const panel = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        height: '90vh',\r\n        width: '100%',\r\n        minWidth: '400px',\r\n        backgroundColor: 'rgba(240,240,240,50%)'\r\n    };\r\n    const image = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    }\r\n    const analysis = {\r\n        minWidth: '250px',\r\n    };\r\n    const container = {\r\n        height: '90vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const upperPane = {\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        gap: '20px',\r\n    };\r\n    const group = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '60px auto',\r\n    }\r\n    const positiveStatus = {\r\n        backgroundColor: 'rgb(0,68,139)',\r\n        color: 'rgb(255,255,255)',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%',\r\n    }\r\n    const negativeStatus = {\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        color: 'dimgray',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%'\r\n    };\r\n    const circle = {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '10px',\r\n        width: '100%',\r\n        margin: '40px auto 30px auto',\r\n    };\r\n    const circleBar = {\r\n        width: '40%',\r\n    };\r\n    const lowerPane = {\r\n        margin:'0 auto',\r\n        marginBottom: '20px',\r\n        width: '70%',\r\n        height: '48px',\r\n        borderRadius: '2%',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n    };\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={information}>\r\n                <PatientTable\r\n                    patients={patients}\r\n                    handleClick={handleClick}\r\n                />\r\n            </div>\r\n            <div style={panel}>\r\n                {\r\n                    selectedPatient &&\r\n                    <img \r\n                    crossOrigin='anonymous'\r\n                    src={`http://localhost:5000/assets/images/${xray.substring(13)}`} \r\n                    alt=\"X-Ray\"\r\n                    style={image} \r\n                    ref={imageRef} /> \r\n                }\r\n            </div>\r\n            <div style={analysis}>\r\n                <div style={container}>\r\n                    <div style={upperPane}>\r\n                        <div>\r\n                        <p className=\"sm-text bold\">Result</p>\r\n                        <div style={group}>\r\n                            {\r\n                                selectedPatient && selectedPatient.result === \"Positive\"\r\n                                ?\r\n                                (\r\n                                <>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                                )\r\n                                :\r\n                                <>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"sm-text bold\">Abnormality Score</p>\r\n                            <div style={{display:'flex', justifyContent:'space-around', gap: '20px', alignItems:'center'}}>\r\n                                {\r\n                                    selectedPatient \r\n                                    && selectedPatient.score \r\n                                    ?\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={100-selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(100-selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>            \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        model && selectedPatient\r\n                        ?<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan}>Scan</button>\r\n                        :<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan} disabled>Scan</button>\r\n                    }\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scan;","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\actions\\index.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientTable.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\SearchPatientBar.js",[],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\EditUserForm.js",["372","373","374","375"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn, setSnackbar } from \"../actions\";\r\n\r\nfunction EditUserForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const wrapper = {\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"90%\"\r\n  };\r\n\r\n  const button = {\r\n    height: \"32px\",\r\n    width: \"100%\"\r\n  };\r\n  const subtext = {\r\n    fontSize: \"12px\",\r\n    fontWeight: \"700\",\r\n    textAlign: \"right\",\r\n    width: \"100%\",\r\n    marginTop: \"-10px\",\r\n    padding: \"0\"\r\n  };\r\n  const states = [\r\n    \"\",\r\n    \"Wilayah Persekutuan\",\r\n    \"Selangor\",\r\n    \"Johor\",\r\n    \"Kedah\",\r\n    \"Kelantan\",\r\n    \"Melaka\",\r\n    \"Negeri Sembilan\",\r\n    \"Pahang\",\r\n    \"Penang\",\r\n    \"Perak\",\r\n    \"Perlis\",\r\n    \"Sabah\",\r\n    \"Sarawak\",\r\n    \"Terengganu\"\r\n  ];\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(props.user.email);\r\n  const [password, setPassword] = useState(props.user.password);\r\n  const [name, setName] = useState(props.user.name);\r\n  const [phone, setPhone] = useState(props.user.phone);\r\n  const [facilityName, setFacilityName] = useState(props.user.facilityName);\r\n  const [facilityAddress, setFacilityAddress] = useState(\r\n    props.user.facilityAddress\r\n  );\r\n  const [postal, setPostal] = useState(props.user.postal);\r\n  const [state, setState] = useState(props.user.state);\r\n  const [city, setCity] = useState(props.user.city);\r\n\r\n  function handleEmail(e) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handlePhone(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n\r\n  function handleFacilityName(e) {\r\n    setFacilityName(e.target.value);\r\n  }\r\n\r\n  function handleFacilityAddress(e) {\r\n    setFacilityAddress(e.target.value);\r\n  }\r\n\r\n  function handlePostal(e) {\r\n    setPostal(e.target.value);\r\n  }\r\n\r\n  function handleState(e) {\r\n    setState(e.target.value);\r\n  }\r\n\r\n  function handleCity(e) {\r\n    setCity(e.target.value);\r\n  }\r\n\r\n  function handlePage() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // const { email, password } = this.state;\r\n\r\n    // Post request to backend\r\n    fetch(\"http://localhost:5000/users/edit\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: props.token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        userId: props.user._id,\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n        phone: phone,\r\n        facilityName: facilityName,\r\n        facilityAddress: facilityAddress,\r\n        postal: postal,\r\n        state: state,\r\n        city: city\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(\"json\", json);\r\n        if (json.success) {\r\n          dispatch(setSnackbar(true, \"success\", json.message));\r\n        } else {\r\n          dispatch(setSnackbar(true, \"error\", json.message));\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={wrapper}>\r\n      <form action=\"\" method=\"post\" className=\"form\">\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              placeholder={email}\r\n              name=\"email\"\r\n              onChange={handleEmail}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"********\"\r\n              name=\"password\"\r\n              onChange={handlePassword}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityName}\r\n            name=\"facility name\"\r\n            onChange={handleFacilityName}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={name}\r\n              name=\"name\"\r\n              onChange={handleName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Mobile Phone</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={phone}\r\n              name=\"phone\"\r\n              onChange={handlePhone}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Address</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityAddress}\r\n            name=\"address\"\r\n            onChange={handleFacilityAddress}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Postal Code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={postal}\r\n              name=\"postal code\"\r\n              onChange={handlePostal}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">State</label>\r\n            <select className=\"form-control\" onChange={handleState}>\r\n              {states.map((state, index) => {\r\n                return state === \"\" ? (\r\n                  <option key={index} value={state} disabled selected>\r\n                    State\r\n                  </option>\r\n                ) : (\r\n                  <option key={index} value={state}>\r\n                    {state}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">City</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={city}\r\n              name=\"city\"\r\n              onChange={handleCity}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Edit\"\r\n          style={button}\r\n          // className=\"button bold\"\r\n          className=\"button bold\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserForm;\r\n","E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientProfile.js",["376","377","378","379","380","381"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\information\\Patient.js",["382","383"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\DeletePatient.js",["384","385","386"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientCards.js",["387","388","389","390","391","392","393","394","395","396","397","398"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\UpdatePatient.js",["399","400","401","402","403","404","405","406","407","408","409","410","411"],"E:\\Y3S1\\300\\Final Assn\\CAT300\\src\\components\\PatientCard.js",["412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427"],{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":32,"column":9,"nodeType":"434","messageId":"435","endLine":32,"endColumn":17},{"ruleId":"436","severity":1,"message":"437","line":27,"column":21,"nodeType":"438","endLine":27,"endColumn":98},{"ruleId":"432","severity":1,"message":"439","line":42,"column":11,"nodeType":"434","messageId":"435","endLine":42,"endColumn":19},{"ruleId":"440","severity":1,"message":"441","line":31,"column":43,"nodeType":"442","messageId":"443","endLine":31,"endColumn":45},{"ruleId":"436","severity":1,"message":"437","line":125,"column":17,"nodeType":"438","endLine":125,"endColumn":64},{"ruleId":"432","severity":1,"message":"444","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":15},{"ruleId":"432","severity":1,"message":"445","line":7,"column":27,"nodeType":"434","messageId":"435","endLine":7,"endColumn":33},{"ruleId":"432","severity":1,"message":"446","line":7,"column":35,"nodeType":"434","messageId":"435","endLine":7,"endColumn":39},{"ruleId":"432","severity":1,"message":"447","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":13},{"ruleId":"432","severity":1,"message":"448","line":72,"column":20,"nodeType":"434","messageId":"435","endLine":72,"endColumn":36},{"ruleId":"432","severity":1,"message":"449","line":72,"column":54,"nodeType":"434","messageId":"435","endLine":72,"endColumn":65},{"ruleId":"432","severity":1,"message":"450","line":72,"column":67,"nodeType":"434","messageId":"435","endLine":72,"endColumn":75},{"ruleId":"432","severity":1,"message":"451","line":168,"column":9,"nodeType":"434","messageId":"435","endLine":168,"endColumn":18},{"ruleId":"432","severity":1,"message":"452","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":22},{"ruleId":"432","severity":1,"message":"453","line":13,"column":9,"nodeType":"434","messageId":"435","endLine":13,"endColumn":13},{"ruleId":"432","severity":1,"message":"454","line":41,"column":9,"nodeType":"434","messageId":"435","endLine":41,"endColumn":13},{"ruleId":"432","severity":1,"message":"455","line":42,"column":9,"nodeType":"434","messageId":"435","endLine":42,"endColumn":11},{"ruleId":"432","severity":1,"message":"456","line":43,"column":9,"nodeType":"434","messageId":"435","endLine":43,"endColumn":15},{"ruleId":"432","severity":1,"message":"457","line":44,"column":9,"nodeType":"434","messageId":"435","endLine":44,"endColumn":12},{"ruleId":"432","severity":1,"message":"458","line":45,"column":9,"nodeType":"434","messageId":"435","endLine":45,"endColumn":12},{"ruleId":"432","severity":1,"message":"459","line":24,"column":9,"nodeType":"434","messageId":"435","endLine":24,"endColumn":16},{"ruleId":"440","severity":1,"message":"441","line":114,"column":31,"nodeType":"442","messageId":"443","endLine":114,"endColumn":33},{"ruleId":"436","severity":1,"message":"437","line":132,"column":13,"nodeType":"438","endLine":135,"endColumn":15},{"ruleId":"436","severity":1,"message":"437","line":67,"column":11,"nodeType":"438","endLine":67,"endColumn":88},{"ruleId":"428","replacedBy":"460"},{"ruleId":"430","replacedBy":"461"},{"ruleId":"432","severity":1,"message":"462","line":6,"column":3,"nodeType":"434","messageId":"435","endLine":6,"endColumn":11},{"ruleId":"432","severity":1,"message":"463","line":21,"column":8,"nodeType":"434","messageId":"435","endLine":21,"endColumn":21},{"ruleId":"432","severity":1,"message":"464","line":22,"column":10,"nodeType":"434","messageId":"435","endLine":22,"endColumn":17},{"ruleId":"432","severity":1,"message":"465","line":28,"column":9,"nodeType":"434","messageId":"435","endLine":28,"endColumn":15},{"ruleId":"432","severity":1,"message":"466","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":14},{"ruleId":"432","severity":1,"message":"467","line":5,"column":10,"nodeType":"434","messageId":"435","endLine":5,"endColumn":28},{"ruleId":"432","severity":1,"message":"468","line":6,"column":8,"nodeType":"434","messageId":"435","endLine":6,"endColumn":13},{"ruleId":"432","severity":1,"message":"469","line":63,"column":11,"nodeType":"434","messageId":"435","endLine":63,"endColumn":18},{"ruleId":"432","severity":1,"message":"470","line":74,"column":11,"nodeType":"434","messageId":"435","endLine":74,"endColumn":18},{"ruleId":"432","severity":1,"message":"471","line":89,"column":12,"nodeType":"434","messageId":"435","endLine":89,"endColumn":21},{"ruleId":"432","severity":1,"message":"472","line":90,"column":12,"nodeType":"434","messageId":"435","endLine":90,"endColumn":19},{"ruleId":"432","severity":1,"message":"473","line":91,"column":12,"nodeType":"434","messageId":"435","endLine":91,"endColumn":20},{"ruleId":"432","severity":1,"message":"474","line":92,"column":12,"nodeType":"434","messageId":"435","endLine":92,"endColumn":23},{"ruleId":"432","severity":1,"message":"475","line":93,"column":12,"nodeType":"434","messageId":"435","endLine":93,"endColumn":22},{"ruleId":"432","severity":1,"message":"476","line":94,"column":12,"nodeType":"434","messageId":"435","endLine":94,"endColumn":24},{"ruleId":"432","severity":1,"message":"477","line":95,"column":12,"nodeType":"434","messageId":"435","endLine":95,"endColumn":23},{"ruleId":"432","severity":1,"message":"478","line":96,"column":12,"nodeType":"434","messageId":"435","endLine":96,"endColumn":23},{"ruleId":"432","severity":1,"message":"479","line":97,"column":12,"nodeType":"434","messageId":"435","endLine":97,"endColumn":21},{"ruleId":"432","severity":1,"message":"480","line":99,"column":12,"nodeType":"434","messageId":"435","endLine":99,"endColumn":22},{"ruleId":"432","severity":1,"message":"481","line":99,"column":24,"nodeType":"434","messageId":"435","endLine":99,"endColumn":37},{"ruleId":"432","severity":1,"message":"480","line":113,"column":15,"nodeType":"434","messageId":"435","endLine":113,"endColumn":25},{"ruleId":"432","severity":1,"message":"482","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":25},{"ruleId":"432","severity":1,"message":"483","line":12,"column":9,"nodeType":"434","messageId":"435","endLine":12,"endColumn":16},{"ruleId":"432","severity":1,"message":"484","line":35,"column":9,"nodeType":"434","messageId":"435","endLine":35,"endColumn":14},{"ruleId":"432","severity":1,"message":"485","line":67,"column":9,"nodeType":"434","messageId":"435","endLine":67,"endColumn":11},{"ruleId":"432","severity":1,"message":"486","line":70,"column":10,"nodeType":"434","messageId":"435","endLine":70,"endColumn":27},{"ruleId":"432","severity":1,"message":"487","line":70,"column":29,"nodeType":"434","messageId":"435","endLine":70,"endColumn":49},{"ruleId":"436","severity":1,"message":"437","line":148,"column":13,"nodeType":"438","endLine":152,"endColumn":14},{"ruleId":"432","severity":1,"message":"488","line":4,"column":8,"nodeType":"434","messageId":"435","endLine":4,"endColumn":14},{"ruleId":"432","severity":1,"message":"459","line":38,"column":9,"nodeType":"434","messageId":"435","endLine":38,"endColumn":16},{"ruleId":"440","severity":1,"message":"441","line":137,"column":31,"nodeType":"442","messageId":"443","endLine":137,"endColumn":33},{"ruleId":"436","severity":1,"message":"437","line":157,"column":13,"nodeType":"438","endLine":160,"endColumn":15},{"ruleId":"440","severity":1,"message":"441","line":173,"column":31,"nodeType":"442","messageId":"443","endLine":173,"endColumn":33},{"ruleId":"489","severity":1,"message":"490","line":179,"column":15,"nodeType":"434","messageId":"491","endLine":179,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":182,"column":15,"nodeType":"434","messageId":"491","endLine":182,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":185,"column":15,"nodeType":"434","messageId":"491","endLine":185,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":188,"column":15,"nodeType":"434","messageId":"491","endLine":188,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":191,"column":15,"nodeType":"434","messageId":"491","endLine":191,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":194,"column":15,"nodeType":"434","messageId":"491","endLine":194,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":197,"column":15,"nodeType":"434","messageId":"491","endLine":197,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":200,"column":15,"nodeType":"434","messageId":"491","endLine":200,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":203,"column":15,"nodeType":"434","messageId":"491","endLine":203,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":206,"column":15,"nodeType":"434","messageId":"491","endLine":206,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":209,"column":15,"nodeType":"434","messageId":"491","endLine":209,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":212,"column":15,"nodeType":"434","messageId":"491","endLine":212,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":215,"column":15,"nodeType":"434","messageId":"491","endLine":215,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":219,"column":15,"nodeType":"434","messageId":"491","endLine":219,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":242,"column":13,"nodeType":"438","endLine":245,"endColumn":15},{"ruleId":"440","severity":1,"message":"441","line":258,"column":31,"nodeType":"442","messageId":"443","endLine":258,"endColumn":33},{"ruleId":"489","severity":1,"message":"490","line":264,"column":15,"nodeType":"434","messageId":"491","endLine":264,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":267,"column":15,"nodeType":"434","messageId":"491","endLine":267,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":270,"column":15,"nodeType":"434","messageId":"491","endLine":270,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":273,"column":15,"nodeType":"434","messageId":"491","endLine":273,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":276,"column":15,"nodeType":"434","messageId":"491","endLine":276,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":279,"column":15,"nodeType":"434","messageId":"491","endLine":279,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":282,"column":15,"nodeType":"434","messageId":"491","endLine":282,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":285,"column":15,"nodeType":"434","messageId":"491","endLine":285,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":288,"column":15,"nodeType":"434","messageId":"491","endLine":288,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":291,"column":15,"nodeType":"434","messageId":"491","endLine":291,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":294,"column":15,"nodeType":"434","messageId":"491","endLine":294,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":297,"column":15,"nodeType":"434","messageId":"491","endLine":297,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":300,"column":15,"nodeType":"434","messageId":"491","endLine":300,"endColumn":23},{"ruleId":"489","severity":1,"message":"490","line":304,"column":15,"nodeType":"434","messageId":"491","endLine":304,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":327,"column":13,"nodeType":"438","endLine":330,"endColumn":15},{"ruleId":"492","severity":1,"message":"493","line":345,"column":20,"nodeType":"494","messageId":"495","endLine":345,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":346,"column":20,"nodeType":"494","messageId":"495","endLine":346,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":347,"column":20,"nodeType":"494","messageId":"495","endLine":347,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":359,"column":20,"nodeType":"494","messageId":"495","endLine":359,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":360,"column":20,"nodeType":"494","messageId":"495","endLine":360,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":361,"column":20,"nodeType":"494","messageId":"495","endLine":361,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":488,"column":18,"nodeType":"494","messageId":"495","endLine":488,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":490,"column":18,"nodeType":"494","messageId":"495","endLine":490,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":491,"column":18,"nodeType":"494","messageId":"495","endLine":491,"endColumn":20},{"ruleId":"496","severity":1,"message":"497","line":28,"column":8,"nodeType":"498","endLine":28,"endColumn":10,"suggestions":"499"},{"ruleId":"496","severity":1,"message":"500","line":54,"column":8,"nodeType":"498","endLine":54,"endColumn":16,"suggestions":"501"},{"ruleId":"432","severity":1,"message":"502","line":205,"column":11,"nodeType":"434","messageId":"435","endLine":205,"endColumn":14},{"ruleId":"432","severity":1,"message":"503","line":214,"column":11,"nodeType":"434","messageId":"435","endLine":214,"endColumn":18},{"ruleId":"432","severity":1,"message":"466","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":14},{"ruleId":"432","severity":1,"message":"504","line":5,"column":10,"nodeType":"434","messageId":"435","endLine":5,"endColumn":16},{"ruleId":"432","severity":1,"message":"469","line":22,"column":9,"nodeType":"434","messageId":"435","endLine":22,"endColumn":16},{"ruleId":"432","severity":1,"message":"505","line":97,"column":12,"nodeType":"434","messageId":"435","endLine":97,"endColumn":22},{"ruleId":"432","severity":1,"message":"506","line":6,"column":10,"nodeType":"434","messageId":"435","endLine":6,"endColumn":27},{"ruleId":"432","severity":1,"message":"468","line":7,"column":8,"nodeType":"434","messageId":"435","endLine":7,"endColumn":13},{"ruleId":"432","severity":1,"message":"466","line":8,"column":9,"nodeType":"434","messageId":"435","endLine":8,"endColumn":13},{"ruleId":"432","severity":1,"message":"483","line":17,"column":11,"nodeType":"434","messageId":"435","endLine":17,"endColumn":18},{"ruleId":"432","severity":1,"message":"484","line":40,"column":11,"nodeType":"434","messageId":"435","endLine":40,"endColumn":16},{"ruleId":"436","severity":1,"message":"437","line":194,"column":25,"nodeType":"438","endLine":194,"endColumn":126},{"ruleId":"432","severity":1,"message":"507","line":12,"column":10,"nodeType":"434","messageId":"435","endLine":12,"endColumn":21},{"ruleId":"432","severity":1,"message":"508","line":12,"column":22,"nodeType":"434","messageId":"435","endLine":12,"endColumn":36},{"ruleId":"432","severity":1,"message":"466","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":14},{"ruleId":"432","severity":1,"message":"509","line":2,"column":17,"nodeType":"434","messageId":"435","endLine":2,"endColumn":25},{"ruleId":"432","severity":1,"message":"468","line":5,"column":8,"nodeType":"434","messageId":"435","endLine":5,"endColumn":13},{"ruleId":"432","severity":1,"message":"510","line":8,"column":8,"nodeType":"434","messageId":"435","endLine":8,"endColumn":11},{"ruleId":"432","severity":1,"message":"511","line":9,"column":8,"nodeType":"434","messageId":"435","endLine":9,"endColumn":17},{"ruleId":"432","severity":1,"message":"512","line":14,"column":8,"nodeType":"434","messageId":"435","endLine":14,"endColumn":18},{"ruleId":"432","severity":1,"message":"513","line":34,"column":11,"nodeType":"434","messageId":"435","endLine":34,"endColumn":22},{"ruleId":"432","severity":1,"message":"514","line":42,"column":11,"nodeType":"434","messageId":"435","endLine":42,"endColumn":25},{"ruleId":"432","severity":1,"message":"515","line":47,"column":11,"nodeType":"434","messageId":"435","endLine":47,"endColumn":21},{"ruleId":"432","severity":1,"message":"516","line":53,"column":11,"nodeType":"434","messageId":"435","endLine":53,"endColumn":15},{"ruleId":"432","severity":1,"message":"517","line":83,"column":11,"nodeType":"434","messageId":"435","endLine":83,"endColumn":17},{"ruleId":"432","severity":1,"message":"518","line":86,"column":12,"nodeType":"434","messageId":"435","endLine":86,"endColumn":16},{"ruleId":"432","severity":1,"message":"519","line":86,"column":18,"nodeType":"434","messageId":"435","endLine":86,"endColumn":25},{"ruleId":"496","severity":1,"message":"520","line":129,"column":7,"nodeType":"498","endLine":129,"endColumn":9,"suggestions":"521"},{"ruleId":"440","severity":1,"message":"522","line":200,"column":50,"nodeType":"442","messageId":"523","endLine":200,"endColumn":52},{"ruleId":"432","severity":1,"message":"466","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":14},{"ruleId":"432","severity":1,"message":"469","line":62,"column":11,"nodeType":"434","messageId":"435","endLine":62,"endColumn":18},{"ruleId":"432","severity":1,"message":"470","line":73,"column":11,"nodeType":"434","messageId":"435","endLine":73,"endColumn":18},{"ruleId":"432","severity":1,"message":"471","line":88,"column":12,"nodeType":"434","messageId":"435","endLine":88,"endColumn":21},{"ruleId":"432","severity":1,"message":"472","line":89,"column":12,"nodeType":"434","messageId":"435","endLine":89,"endColumn":19},{"ruleId":"432","severity":1,"message":"473","line":90,"column":12,"nodeType":"434","messageId":"435","endLine":90,"endColumn":20},{"ruleId":"432","severity":1,"message":"474","line":91,"column":12,"nodeType":"434","messageId":"435","endLine":91,"endColumn":23},{"ruleId":"432","severity":1,"message":"475","line":92,"column":12,"nodeType":"434","messageId":"435","endLine":92,"endColumn":22},{"ruleId":"432","severity":1,"message":"476","line":93,"column":12,"nodeType":"434","messageId":"435","endLine":93,"endColumn":24},{"ruleId":"432","severity":1,"message":"477","line":94,"column":12,"nodeType":"434","messageId":"435","endLine":94,"endColumn":23},{"ruleId":"432","severity":1,"message":"478","line":95,"column":12,"nodeType":"434","messageId":"435","endLine":95,"endColumn":23},{"ruleId":"432","severity":1,"message":"479","line":96,"column":12,"nodeType":"434","messageId":"435","endLine":96,"endColumn":21},{"ruleId":"432","severity":1,"message":"524","line":232,"column":11,"nodeType":"434","messageId":"435","endLine":232,"endColumn":22},{"ruleId":"432","severity":1,"message":"525","line":10,"column":10,"nodeType":"434","messageId":"435","endLine":10,"endColumn":32},{"ruleId":"432","severity":1,"message":"453","line":13,"column":9,"nodeType":"434","messageId":"435","endLine":13,"endColumn":13},{"ruleId":"432","severity":1,"message":"526","line":15,"column":8,"nodeType":"434","messageId":"435","endLine":15,"endColumn":22},{"ruleId":"432","severity":1,"message":"527","line":17,"column":10,"nodeType":"434","messageId":"435","endLine":17,"endColumn":34},{"ruleId":"432","severity":1,"message":"454","line":51,"column":3,"nodeType":"434","messageId":"435","endLine":51,"endColumn":7},{"ruleId":"432","severity":1,"message":"455","line":52,"column":3,"nodeType":"434","messageId":"435","endLine":52,"endColumn":5},{"ruleId":"432","severity":1,"message":"456","line":53,"column":3,"nodeType":"434","messageId":"435","endLine":53,"endColumn":9},{"ruleId":"432","severity":1,"message":"457","line":54,"column":3,"nodeType":"434","messageId":"435","endLine":54,"endColumn":6},{"ruleId":"432","severity":1,"message":"528","line":55,"column":3,"nodeType":"434","messageId":"435","endLine":55,"endColumn":8},{"ruleId":"432","severity":1,"message":"529","line":56,"column":3,"nodeType":"434","messageId":"435","endLine":56,"endColumn":10},{"ruleId":"432","severity":1,"message":"530","line":57,"column":3,"nodeType":"434","messageId":"435","endLine":57,"endColumn":9},{"ruleId":"432","severity":1,"message":"531","line":58,"column":3,"nodeType":"434","messageId":"435","endLine":58,"endColumn":9},{"ruleId":"432","severity":1,"message":"532","line":59,"column":3,"nodeType":"434","messageId":"435","endLine":59,"endColumn":7},{"ruleId":"432","severity":1,"message":"533","line":60,"column":3,"nodeType":"434","messageId":"435","endLine":60,"endColumn":9},{"ruleId":"432","severity":1,"message":"534","line":61,"column":3,"nodeType":"434","messageId":"435","endLine":61,"endColumn":8},{"ruleId":"432","severity":1,"message":"485","line":62,"column":3,"nodeType":"434","messageId":"435","endLine":62,"endColumn":5},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"no-unused-vars","'textArea' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'subtitle' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Details' is defined but never used.","'Router' is defined but never used.","'link' is defined but never used.","'Route' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'FormHelperText' is defined but never used.","'Grid' is defined but never used.","'name' is assigned a value but never used.","'IC' is assigned a value but never used.","'gender' is assigned a value but never used.","'age' is assigned a value but never used.","'CXR' is assigned a value but never used.","'columns' is assigned a value but never used.",["535"],["536"],"'Redirect' is defined but never used.","'CreatePatient' is defined but never used.","'connect' is defined but never used.","'signIn' is assigned a value but never used.","'Link' is defined but never used.","'SentimentSatisfied' is defined but never used.","'axios' is defined but never used.","'subtext' is assigned a value but never used.","'results' is assigned a value but never used.","'nameError' is assigned a value but never used.","'icError' is assigned a value but never used.","'ageError' is assigned a value but never used.","'genderError' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'postalError' is assigned a value but never used.","'negeriError' is assigned a value but never used.","'cityError' is assigned a value but never used.","'imageError' is assigned a value but never used.","'setImageError' is assigned a value but never used.","'DeleteForeverIcon' is defined but never used.","'wrapper' is assigned a value but never used.","'title' is assigned a value but never used.","'id' is assigned a value but never used.","'deleteModalIsOpen' is assigned a value but never used.","'setDeleteModalIsOpen' is assigned a value but never used.","'Button' is defined but never used.","no-redeclare","'infected' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["537"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["538"],"'bar' is assigned a value but never used.","'barFill' is assigned a value but never used.","'signIn' is defined but never used.","'handlePage' is defined but never used.","'ViewAgendaRounded' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'setModalIsOpen' is assigned a value but never used.","'useState' is defined but never used.","'Box' is defined but never used.","'CardMedia' is defined but never used.","'background' is defined but never used.","'patientInfo' is assigned a value but never used.","'imageContainer' is assigned a value but never used.","'imageStyle' is assigned a value but never used.","'info' is assigned a value but never used.","'styles' is assigned a value but never used.","'xray' is assigned a value but never used.","'setXray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPatientsRequest'. Either include it or remove the dependency array.",["539"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'changeImage' is assigned a value but never used.","'useWideCardMediaStyles' is defined but never used.","'PatientProfile' is defined but never used.","'useSquareCardMediaStyles' is defined but never used.","'phone' is assigned a value but never used.","'address' is assigned a value but never used.","'postal' is assigned a value but never used.","'negeri' is assigned a value but never used.","'city' is assigned a value but never used.","'result' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [dispatch]",{"range":"546","text":"547"},"Update the dependencies array to be: [dispatch, result, token]",{"range":"548","text":"549"},"Update the dependencies array to be: [getPatientsRequest]",{"range":"550","text":"551"},[1153,1155],"[dispatch]",[2035,2043],"[dispatch, result, token]",[3738,3740],"[getPatientsRequest]"]