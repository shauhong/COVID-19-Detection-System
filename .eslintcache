[{"C:\\Users\\user\\CAT300\\src\\index.js":"1","C:\\Users\\user\\CAT300\\src\\reportWebVitals.js":"2","C:\\Users\\user\\CAT300\\src\\App.js":"3","C:\\Users\\user\\CAT300\\src\\reducers\\index.js":"4","C:\\Users\\user\\CAT300\\src\\reducers\\snackbarReducer.js":"5","C:\\Users\\user\\CAT300\\src\\reducers\\backdropReducer.js":"6","C:\\Users\\user\\CAT300\\src\\reducers\\authReducer.js":"7","C:\\Users\\user\\CAT300\\src\\components\\NavBar.js":"8","C:\\Users\\user\\CAT300\\src\\pages\\Login.js":"9","C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js":"10","C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js":"11","C:\\Users\\user\\CAT300\\src\\pages\\Error.js":"12","C:\\Users\\user\\CAT300\\src\\components\\Snackbar.js":"13","C:\\Users\\user\\CAT300\\src\\pages\\User.js":"14","C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js":"15","C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js":"16","C:\\Users\\user\\CAT300\\src\\pages\\Home.js":"17","C:\\Users\\user\\CAT300\\src\\utils\\AuthRoute.js":"18","C:\\Users\\user\\CAT300\\src\\components\\Backdrop.js":"19","C:\\Users\\user\\CAT300\\src\\information\\index.js":"20","C:\\Users\\user\\CAT300\\src\\scan\\index.js":"21","C:\\Users\\user\\CAT300\\src\\statistics\\states.js":"22","C:\\Users\\user\\CAT300\\src\\components\\About.js":"23","C:\\Users\\user\\CAT300\\src\\pages\\Scan.js":"24","C:\\Users\\user\\CAT300\\src\\actions\\index.js":"25","C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js":"26","C:\\Users\\user\\CAT300\\src\\components\\SearchPatientBar.js":"27","C:\\Users\\user\\CAT300\\src\\components\\EditUserForm.js":"28","C:\\Users\\user\\CAT300\\src\\components\\PatientCards.js":"29","C:\\Users\\user\\CAT300\\src\\components\\PatientCard.js":"30","C:\\Users\\user\\CAT300\\src\\information\\Patient.js":"31","C:\\Users\\user\\CAT300\\src\\components\\UpdatePatient.js":"32","C:\\Users\\user\\CAT300\\src\\components\\DeletePatient.js":"33","C:\\Users\\user\\CAT300\\src\\components\\PatientProfile.js":"34"},{"size":859,"mtime":1609171926828,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1607783308068,"results":"37","hashOfConfig":"36"},{"size":2338,"mtime":1610439166549,"results":"38","hashOfConfig":"36"},{"size":357,"mtime":1609433181064,"results":"39","hashOfConfig":"36"},{"size":494,"mtime":1609171927097,"results":"40","hashOfConfig":"36"},{"size":229,"mtime":1609433181063,"results":"41","hashOfConfig":"36"},{"size":693,"mtime":1609171927093,"results":"42","hashOfConfig":"36"},{"size":1912,"mtime":1609775922095,"results":"43","hashOfConfig":"36"},{"size":3400,"mtime":1609775498827,"results":"44","hashOfConfig":"36"},{"size":12780,"mtime":1610629193538,"results":"45","hashOfConfig":"36"},{"size":275,"mtime":1608127408360,"results":"46","hashOfConfig":"36"},{"size":355,"mtime":1608913261270,"results":"47","hashOfConfig":"36"},{"size":1318,"mtime":1609171926827,"results":"48","hashOfConfig":"36"},{"size":6726,"mtime":1609775498791,"results":"49","hashOfConfig":"36"},{"size":7700,"mtime":1609433181060,"results":"50","hashOfConfig":"36"},{"size":6240,"mtime":1609433181066,"results":"51","hashOfConfig":"36"},{"size":1734,"mtime":1610615668824,"results":"52","hashOfConfig":"36"},{"size":474,"mtime":1609433181068,"results":"53","hashOfConfig":"36"},{"size":716,"mtime":1609433180787,"results":"54","hashOfConfig":"36"},{"size":132,"mtime":1610436994748,"results":"55","hashOfConfig":"36"},{"size":116,"mtime":1608913261318,"results":"56","hashOfConfig":"36"},{"size":3258,"mtime":1608913261319,"results":"57","hashOfConfig":"36"},{"size":3247,"mtime":1609433180786,"results":"58","hashOfConfig":"36"},{"size":13383,"mtime":1609775498790,"results":"59","hashOfConfig":"36"},{"size":515,"mtime":1609433180785,"results":"60","hashOfConfig":"36"},{"size":10497,"mtime":1609433181025,"results":"61","hashOfConfig":"36"},{"size":1147,"mtime":1609433181041,"results":"62","hashOfConfig":"36"},{"size":6969,"mtime":1609775498788,"results":"63","hashOfConfig":"36"},{"size":6802,"mtime":1610625421194,"results":"64","hashOfConfig":"36"},{"size":2668,"mtime":1610620798560,"results":"65","hashOfConfig":"36"},{"size":435,"mtime":1610437158158,"results":"66","hashOfConfig":"36"},{"size":12090,"mtime":1610619344774,"results":"67","hashOfConfig":"36"},{"size":1719,"mtime":1610619153633,"results":"68","hashOfConfig":"36"},{"size":9325,"mtime":1610441981042,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"90b64d",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},"C:\\Users\\user\\CAT300\\src\\index.js",[],["147","148"],"C:\\Users\\user\\CAT300\\src\\reportWebVitals.js",[],"C:\\Users\\user\\CAT300\\src\\App.js",["149","150","151","152"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Error from \"./pages/Error\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Scan from \"./scan\";\r\nimport Patients from \"./information\";\r\nimport User from \"./pages/User\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Snackbar from \"./components/Snackbar\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport PatientProfile from \"./components/PatientProfile\";\r\nimport CreatePatient from \"./components/CreatePatient\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport AuthRoute from \"./utils/AuthRoute\";\r\nimport Backdrop from \"./components/Backdrop\";\r\n\r\nfunction App() {\r\n  const signIn = useSelector(state => state.auth.signIn);\r\n  return (\r\n    <Router>\r\n      <Backdrop />\r\n      <NavBar />\r\n      <Snackbar />\r\n      <ScrollToTop />\r\n      <Switch>\r\n        {/* <Route path=\"/scan\">\r\n          {signIn ? <Scan /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/patients/:id\" render={({match})=>{\r\n          if(signIn){\r\n            return(<Details match={match}/>);\r\n          }else{\r\n            return(<Redirect to='/'/>)\r\n          }\r\n          }}\r\n        />\r\n\r\n        <Route path=\"/patients\">\r\n          {signIn ? <Patients /> : <Redirect to=\"/\" />}\r\n          <Route path=\"/users\" component={User} />\r\n        </Route>\r\n        <Route path=\"/statistics\">\r\n          {signIn ? <Statistics /> : <Redirect to=\"/\" />}\r\n        </Route> */}\r\n        <AuthRoute path=\"/users\" component={User} />\r\n        <AuthRoute path=\"/scan\" component={Scan} />\r\n        <AuthRoute path=\"/patients/:id\" component={PatientProfile} />\r\n        <AuthRoute path=\"/patients\" component={Patients} />\r\n        <AuthRoute path=\"/statistics\" component={Statistics} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={SignUp} />s\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"*\" component={Error} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return { signIn: state.signIn };\r\n// };\r\n\r\nexport default App;\r\n// export default connect(mapStateToProps)(App);\r\n","C:\\Users\\user\\CAT300\\src\\reducers\\index.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\snackbarReducer.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\backdropReducer.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\authReducer.js",[],"C:\\Users\\user\\CAT300\\src\\components\\NavBar.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Login.js",[],"C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Error.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Snackbar.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\User.js",["170","171","172","173","174","175","176"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../components/Details.css\";\r\nimport Modal from \"react-modal\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport EditForm from \"../components/EditUserForm\";\r\n// import DeleteWindow from \"./DeleteWindow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nfunction User(props) {\r\n  const wrapper = {\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\"\r\n  };\r\n\r\n  const form = {\r\n    display: \"flex\",\r\n    marginTop: \"30px\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\",\r\n    gap: \"15px\",\r\n    minWidth: \"250px\",\r\n    width: \"100%\",\r\n    marginLeft: \"20px\"\r\n  };\r\n  const row = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n    gap: \"10px\",\r\n    marginBottom: \"10px\"\r\n  };\r\n  const title = {\r\n    fontSize: \"26px\",\r\n    fontWeight: \"700\",\r\n    margin: \"15px\",\r\n    textAlign: \"center\"\r\n  };\r\n\r\n  const label = {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"700\",\r\n    color: \"#2B547E\"\r\n  };\r\n\r\n  const button = {\r\n    width: \"100%\",\r\n    height: \"32px\",\r\n    backgroundColor: \"darkblue\",\r\n    color: \"rgb(255,255,255)\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"5px\"\r\n  };\r\n  const formGroup = {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    gap: \"5px\"\r\n  };\r\n  const formControl = {\r\n    width: \"100%\",\r\n    height: \"20px\"\r\n  };\r\n\r\n  const id = props.match.params.id;\r\n  const token = useSelector(state => state.auth.token);\r\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\r\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ic, setIC] = useState(\"\");\r\n  // const [age, setAge] = useState(\"\");\r\n  // const [gender, setGender] = useState(\"\");\r\n  // const [phone, setPhone] = useState(\"\");\r\n  // const [address, setAddress] = useState(\"\");\r\n  // const [postal, setPostal] = useState(\"\");\r\n  // const [negeri, setNegeri] = useState(\"\");\r\n  // const [city, setCity] = useState(\"\");\r\n  // const [result, setResult] = useState(\"\");\r\n  // const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/users/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        // prettier-ignore\r\n        \"Authorization\": token,\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json) {\r\n          setUser(json);\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      });\r\n  });\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h4 className=\"title\">\r\n          <b>{user.name}</b>\r\n        </h4>\r\n        <div className=\"buttons\">\r\n          {/* <button onClick={() => setEditModalIsOpen(true)} className=\"editButton\">Edit</button> */}\r\n          <IconButton\r\n            onClick={() => setEditModalIsOpen(true)}\r\n            className=\"editButton\"\r\n          >\r\n            <EditIcon className=\"editIcon\" />\r\n          </IconButton>\r\n          <Modal\r\n            classname=\"EditModal\"\r\n            isOpen={editModalIsOpen}\r\n            onRequestClose={() => setEditModalIsOpen(false)}\r\n            style={{\r\n              overlay: {\r\n                backgroundColor: \"rgba(0,0,0,0.75)\"\r\n              },\r\n              content: {\r\n                marginTop: \"80px\",\r\n                marginLeft: \"auto\",\r\n                marginRight: \"auto\",\r\n                width: \"50%\"\r\n              }\r\n            }}\r\n          >\r\n            <EditForm token={token} user={user} />\r\n            <button\r\n              className=\"closeButton\"\r\n              onClick={() => setEditModalIsOpen(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Flexbox\">\r\n        <div className=\"flexItem\">\r\n          <div className=\"image\">\r\n            <img\r\n              height=\"350px\"\r\n              width=\"350px\"\r\n              src=\"https://innmind.com/assets/placeholders/no_avatar-3d6725770296b6a1cce653a203d8f85dcc5298945b71fa7360e3d9aa4a3fc054.svg\"\r\n            ></img>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexItem\">\r\n          <div style={form}>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Name</label>\r\n                <p style={formControl}>{user.name} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Email</label>\r\n                <p style={formControl}>{user.email} </p>\r\n              </div>\r\n            </div>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Password</label>\r\n                <p style={formControl}>*********</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Phone</label>\r\n                <p style={formControl}>{user.phone}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Healthccare Facility Name </label>\r\n                <p style={formControl}>{user.facilityName} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Healthccare Facility Address</label>\r\n                <p style={formControl}>{user.facilityAddress} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>Postal Code</label>\r\n                <p style={formControl}>{user.postal} </p>\r\n              </div>\r\n            </div>\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>State</label>\r\n                <p style={formControl}>{user.state} </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={row}>\r\n              <div style={formGroup}>\r\n                <label style={label}>City</label>\r\n                <p style={formControl}>{user.city} </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js",[],"C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js",["177","178","179"],"import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { states } from \"./states\";\r\nimport { connect } from \"react-redux\";\r\nfunction Statistics(props) {\r\n  const container = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  };\r\n\r\n  const innerContainer = {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"800px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  };\r\n\r\n  const columns = {\r\n    columnCount: 3,\r\n    columnGap: \"40px\",\r\n    columnRule: \"1px solid lightblue\"\r\n  };\r\n\r\n  const row = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  };\r\n\r\n  const charts = {\r\n    minHeight: 600,\r\n    minWidth: 800,\r\n    marginTop: 10\r\n  };\r\n\r\n  const blueCards = {\r\n    background: \"#1D5BB8\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const greenCards = {\r\n    background: \"#8EC3A7\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const yellowCards = {\r\n    background: \"#F0CB69\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const redCards = {\r\n    background: \"#DC5356\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const purpleCards = {\r\n    background: \"#9F6DAA\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const mapTitle = {\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"1.2\",\r\n    fontWeight: \"900\"\r\n  };\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const renderMarkers = () => {\r\n    var data = [];\r\n    states.map((state, index) => {\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {state.infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getDataWithFetch = async () => {\r\n    const response = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/6t65lJVfs3d8s6aKc/records/LATEST?disableRedirect=true\"\r\n    );\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.token);\r\n    getDataWithFetch();\r\n  });\r\n\r\n  return (\r\n    <div style={container}>\r\n      <span class=\"malaysia-state-flag-icon malaysia-state-flag-icon-mlk\"></span>\r\n      <div style={innerContainer}>\r\n        <div style={row}>\r\n          <div style={blueCards}>\r\n            Total Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.testedPositive}\r\n            </h2>\r\n          </div>\r\n          <div style={greenCards}>\r\n            Total Recovered:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.recovered}\r\n            </h2>\r\n          </div>\r\n          <div style={yellowCards}>\r\n            Total Active Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.activeCases}\r\n            </h2>\r\n          </div>\r\n          <div style={redCards}>\r\n            Total Death Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.deceased}\r\n            </h2>\r\n          </div>\r\n          <div style={purpleCards}>\r\n            Total ICU:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.inICU}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            color: \"rgb(170, 170, 170)\",\r\n            marginBottom: 15\r\n          }}\r\n        >\r\n          Source: Health Ministry • Active cases means total confirmed cases\r\n          minus deaths and recoveries.\r\n        </p>\r\n\r\n        <embed\r\n          style={charts}\r\n          src=\"https://flo.uri.sh/visualisation/1985060/embed\"\r\n        ></embed>\r\n      </div>\r\n      <div style={{ height: 30 }} />\r\n      <div>\r\n        <div id=\"map\" style={{ height: 420, width: 780 }}>\r\n          <h2 style={mapTitle}>\r\n            Malaysia State CONVID-19 Daily Total New Cases\r\n          </h2>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAdWEmhfQyer_yx4JlOAcJxkfjVKN3TcJg\"\r\n            }}\r\n            defaultCenter={{\r\n              lat: 3.9743,\r\n              lng: 102.4381\r\n            }}\r\n            defaultZoom={7.5}\r\n          >\r\n            {renderMarkers()}\r\n          </GoogleMapReact>\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              color: \"rgb(170, 170, 170)\",\r\n              marginBottom: 15\r\n            }}\r\n          >\r\n            Source: Health Ministry • Cases are updated on 12am daily.\r\n          </p>\r\n          <div style={{ height: 30 }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","C:\\Users\\user\\CAT300\\src\\pages\\Home.js",[],"C:\\Users\\user\\CAT300\\src\\utils\\AuthRoute.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Backdrop.js",["180"],"import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: 10000,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst CustomizedBackdrop = () => {\r\n  const classes = useStyles();\r\n  const open = useSelector(state=>state.backdrop);\r\n\r\n  return (\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n  );\r\n}\r\n\r\nexport default CustomizedBackdrop;\r\n","C:\\Users\\user\\CAT300\\src\\information\\index.js",[],"C:\\Users\\user\\CAT300\\src\\scan\\index.js",[],"C:\\Users\\user\\CAT300\\src\\statistics\\states.js",[],"C:\\Users\\user\\CAT300\\src\\components\\About.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Scan.js",["181","182","183","184"],"import PatientTable from '../components/PatientTable';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar, setBackdrop } from '../actions';\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction Scan(){\r\n    const token = useSelector(state=>state.auth.token);\r\n    const dispatch = useDispatch();\r\n    const [model,setModel] = useState(null);\r\n    const [result,setResult] = useState(null);\r\n    const [patients,setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [xray, setXray] = useState(null);\r\n    const imageRef = useRef();\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchModel = async ()=>{\r\n            dispatch(setBackdrop(true));\r\n            const localModel = await tf.loadLayersModel(\"http://localhost:5000/assets/ResNet50/model.json\");\r\n            setModel(localModel);\r\n            dispatch(setBackdrop(false));\r\n        };\r\n        fetchModel();\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        const getPatientsRequest = async () => {\r\n            try{\r\n                const res = await fetch(\r\n                    'http://localhost:5000/patients/',\r\n                    {\r\n                        method: \"GET\",\r\n                        headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                        }\r\n                    },\r\n                );\r\n                const json = await res.json();\r\n                if(res.ok){\r\n                    setPatients(json.matchPatients);\r\n                }else{\r\n                    dispatch(setSnackbar(true,'error',json.message));\r\n                }\r\n            }catch(error){\r\n                dispatch(setSnackbar(true,'error','Request Error'));\r\n            }\r\n        };\r\n        getPatientsRequest();\r\n    }, [result]);\r\n\r\n    const postResultRequest = async(results)=>{\r\n        try{\r\n            const res = await fetch(\r\n                `http://localhost:5000/patients/updateStatus/${selectedPatient._id}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                    },\r\n                    body: JSON.stringify({result:results[0]>50?\"Positive\":\"Negative\", score:results[0]}),\r\n                }\r\n            );\r\n            const json = await res.json();\r\n            if(res.ok){\r\n                dispatch(setSnackbar(true,'success',json.message));\r\n            }else{\r\n                dispatch(setSnackbar(true,'error',json.message));\r\n            }\r\n        }catch(error){\r\n            dispatch(setSnackbar(true,'error','Request Error'));\r\n        }\r\n    };\r\n\r\n    const handleScan = async ()=> {\r\n        dispatch(setBackdrop(true));\r\n        const scanImage = imageRef.current;\r\n        let tensor = tf.browser.fromPixels(scanImage);\r\n        tensor = tf.image.resizeNearestNeighbor(tensor, [224,224]);\r\n        tensor = tensor.toFloat().div(255).expandDims();\r\n        const predictions = await model.predict(tensor).data();\r\n        const results = [];\r\n        predictions.forEach((prediction,index)=>{\r\n            results[index] = parseFloat(prediction*100);\r\n        })\r\n        setResult(results);\r\n        const updatedPatient = selectedPatient;\r\n        updatedPatient.score = results[0];\r\n        updatedPatient.result = results[0]>50? \"Positive\": \"Negative\";\r\n        setSelectedPatient(updatedPatient);\r\n        postResultRequest(results);\r\n        dispatch(setBackdrop(false));\r\n    };\r\n\r\n    const handleClick = (patient) => {\r\n        setSelectedPatient(patient);\r\n        setXray(patient.image);\r\n    };\r\n\r\n    const positiveStyles = buildStyles({\r\n        textSize: '16px',\r\n        text:'inherit',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n    });\r\n\r\n    const negativeStyles = buildStyles({\r\n        textSize: '16px',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${100-selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n        fontWeight: 700,\r\n    });\r\n    \r\n    const wrapper = {\r\n        height: '90vh',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '3fr 5fr 3fr',\r\n    };\r\n    const information = {\r\n        minWidth: '250px',\r\n    };\r\n    const panel = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        height: '90vh',\r\n        width: '100%',\r\n        minWidth: '400px',\r\n        backgroundColor: 'rgba(240,240,240,50%)'\r\n    };\r\n    const image = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    }\r\n    const analysis = {\r\n        minWidth: '250px',\r\n    };\r\n    const container = {\r\n        height: '90vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const upperPane = {\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        gap: '20px',\r\n    };\r\n    const group = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '60px auto',\r\n    }\r\n    const positiveStatus = {\r\n        // backgroundColor: 'rgb(0,63,255)',\r\n        backgroundColor: 'rgb(0,68,139)',\r\n        color: 'rgb(255,255,255)',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%',\r\n    }\r\n    const negativeStatus = {\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        color: 'dimgray',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%'\r\n    };\r\n    const circle = {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '10px',\r\n        width: '100%',\r\n        margin: '40px auto 30px auto',\r\n    };\r\n    const circleBar = {\r\n        width: '40%',\r\n    };\r\n    const bar = {\r\n        width: '100%',\r\n        borderRadius: '2%',\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        border: '1px solid rgba(0,0,0,15%)',\r\n        margin: '60px auto 30px auto',\r\n\r\n    }\r\n    const barFill = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        // width: result?`${result[0]}%`:0,\r\n        width: selectedPatient && selectedPatient.score? `${selectedPatient.score}%`:0,\r\n        height: '36px',\r\n    }\r\n  \r\n    const lowerPane = {\r\n        margin:'0 auto',\r\n        marginBottom: '20px',\r\n        width: '70%',\r\n        height: '48px',\r\n        borderRadius: '2%',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n    };\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={information}>\r\n                <PatientTable\r\n                    patients={patients}\r\n                    handleClick={handleClick}\r\n                />\r\n            </div>\r\n            <div style={panel}>\r\n                {\r\n                    selectedPatient &&\r\n                    <img \r\n                    crossOrigin='anonymous'\r\n                    src={`http://localhost:5000/assets/images/${xray.substring(13)}`} \r\n                    alt=\"X-Ray\"\r\n                    style={image} \r\n                    ref={imageRef} /> \r\n                }\r\n            </div>\r\n            <div style={analysis}>\r\n                <div style={container}>\r\n                    <div style={upperPane}>\r\n                        <div>\r\n                        <p className=\"sm-text bold\">Result</p>\r\n                        <div style={group}>\r\n                            {\r\n                                selectedPatient && selectedPatient.result === \"Positive\"\r\n                                // result && result[0]>50\r\n                                ?\r\n                                (\r\n                                <>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                                )\r\n                                :\r\n                                <>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"sm-text bold\">Abnormality Score</p>\r\n                            {/* <div style={bar} >\r\n                                <div style={barFill}/>\r\n                            </div> */}\r\n                            <div style={{display:'flex', justifyContent:'space-around', gap: '20px', alignItems:'center'}}>\r\n                                {\r\n                                    selectedPatient \r\n                                    && selectedPatient.score \r\n                                    ?\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={100-selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(100-selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>\r\n                                    \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        model && selectedPatient\r\n                        ?<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan}>Scan</button>\r\n                        :<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan} disabled>Scan</button>\r\n                    }\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scan;","C:\\Users\\user\\CAT300\\src\\actions\\index.js",[],"C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js",[],"C:\\Users\\user\\CAT300\\src\\components\\SearchPatientBar.js",[],"C:\\Users\\user\\CAT300\\src\\components\\EditUserForm.js",["185","186","187","188"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn, setSnackbar } from \"../actions\";\r\n\r\nfunction EditUserForm(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const wrapper = {\r\n    paddingLeft: \"15px\",\r\n    paddingRight: \"15px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"90%\"\r\n  };\r\n\r\n  const button = {\r\n    height: \"32px\",\r\n    width: \"100%\"\r\n  };\r\n  const subtext = {\r\n    fontSize: \"12px\",\r\n    fontWeight: \"700\",\r\n    textAlign: \"right\",\r\n    width: \"100%\",\r\n    marginTop: \"-10px\",\r\n    padding: \"0\"\r\n  };\r\n  const states = [\r\n    \"\",\r\n    \"Wilayah Persekutuan\",\r\n    \"Selangor\",\r\n    \"Johor\",\r\n    \"Kedah\",\r\n    \"Kelantan\",\r\n    \"Melaka\",\r\n    \"Negeri Sembilan\",\r\n    \"Pahang\",\r\n    \"Penang\",\r\n    \"Perak\",\r\n    \"Perlis\",\r\n    \"Sabah\",\r\n    \"Sarawak\",\r\n    \"Terengganu\"\r\n  ];\r\n\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(props.user.email);\r\n  const [password, setPassword] = useState(props.user.password);\r\n  const [name, setName] = useState(props.user.name);\r\n  const [phone, setPhone] = useState(props.user.phone);\r\n  const [facilityName, setFacilityName] = useState(props.user.facilityName);\r\n  const [facilityAddress, setFacilityAddress] = useState(\r\n    props.user.facilityAddress\r\n  );\r\n  const [postal, setPostal] = useState(props.user.postal);\r\n  const [state, setState] = useState(props.user.state);\r\n  const [city, setCity] = useState(props.user.city);\r\n\r\n  function handleEmail(e) {\r\n    setEmail(e.target.value);\r\n  }\r\n\r\n  function handlePassword(e) {\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handlePhone(e) {\r\n    setPhone(e.target.value);\r\n  }\r\n\r\n  function handleFacilityName(e) {\r\n    setFacilityName(e.target.value);\r\n  }\r\n\r\n  function handleFacilityAddress(e) {\r\n    setFacilityAddress(e.target.value);\r\n  }\r\n\r\n  function handlePostal(e) {\r\n    setPostal(e.target.value);\r\n  }\r\n\r\n  function handleState(e) {\r\n    setState(e.target.value);\r\n  }\r\n\r\n  function handleCity(e) {\r\n    setCity(e.target.value);\r\n  }\r\n\r\n  function handlePage() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // const { email, password } = this.state;\r\n\r\n    // Post request to backend\r\n    fetch(\"http://localhost:5000/users/edit\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Authorization: props.token,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        userId: props.user._id,\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n        phone: phone,\r\n        facilityName: facilityName,\r\n        facilityAddress: facilityAddress,\r\n        postal: postal,\r\n        state: state,\r\n        city: city\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        console.log(\"json\", json);\r\n        if (json.success) {\r\n          dispatch(setSnackbar(true, \"success\", json.message));\r\n        } else {\r\n          dispatch(setSnackbar(true, \"error\", json.message));\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div style={wrapper}>\r\n      <form action=\"\" method=\"post\" className=\"form\">\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Email</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              placeholder={email}\r\n              name=\"email\"\r\n              onChange={handleEmail}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Password</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"password\"\r\n              placeholder=\"********\"\r\n              name=\"password\"\r\n              onChange={handlePassword}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Name</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityName}\r\n            name=\"facility name\"\r\n            onChange={handleFacilityName}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Name</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={name}\r\n              name=\"name\"\r\n              onChange={handleName}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Mobile Phone</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={phone}\r\n              name=\"phone\"\r\n              onChange={handlePhone}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"sm-text bold\">Healthcare Facility Address</label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder={facilityAddress}\r\n            name=\"address\"\r\n            onChange={handleFacilityAddress}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">Postal Code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={postal}\r\n              name=\"postal code\"\r\n              onChange={handlePostal}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">State</label>\r\n            <select className=\"form-control\" onChange={handleState}>\r\n              {states.map((state, index) => {\r\n                return state === \"\" ? (\r\n                  <option key={index} value={state} disabled selected>\r\n                    State\r\n                  </option>\r\n                ) : (\r\n                  <option key={index} value={state}>\r\n                    {state}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"sm-text bold\">City</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder={city}\r\n              name=\"city\"\r\n              onChange={handleCity}\r\n            />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Edit\"\r\n          style={button}\r\n          // className=\"button bold\"\r\n          className=\"button bold\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserForm;\r\n","C:\\Users\\user\\CAT300\\src\\components\\PatientCards.js",["189","190","191","192","193","194","195","196","197","198","199","200"],"C:\\Users\\user\\CAT300\\src\\components\\PatientCard.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"C:\\Users\\user\\CAT300\\src\\information\\Patient.js",["217","218"],"import './Patient.css';\r\nimport React, {useState} from 'react';\r\nimport PatientCards from \"../components/PatientCards\";\r\nimport Modal from 'react-modal';\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n\r\n  const [modalIsOpen,setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Dashboard\">\r\n        <PatientCards />\r\n      </div>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\CAT300\\src\\components\\UpdatePatient.js",["219","220","221","222","223","224","225","226","227","228","229","230","231"],"C:\\Users\\user\\CAT300\\src\\components\\DeletePatient.js",["232","233","234"],"C:\\Users\\user\\CAT300\\src\\components\\PatientProfile.js",["235","236","237","238","239","240"],"import React, {useState, useEffect} from 'react';\r\nimport './Details.css';\r\nimport Modal from 'react-modal';\r\nimport UpdatePatient from \"./UpdatePatient\";\r\nimport DeletePatient from \"./DeletePatient\";\r\nimport { ViewAgendaRounded } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\nfunction PatientProfile(props){\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        marginTop:'30px',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n        marginLeft:'20px',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '10px',\r\n        marginBottom:'10px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '18px',\r\n        fontWeight: '700',\r\n        color: '#2B547E',\r\n    };\r\n\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '20px',\r\n    };\r\n\r\n    const id = props.match.params.id;\r\n    console.log(props);\r\n    const [editModalIsOpen,setEditModalIsOpen] = useState(false);\r\n    const [deleteModalIsOpen,setDeleteModalIsOpen] = useState(false);\r\n    \r\n    const [name, setName] = useState(\"\"); \r\n    const [ic, setIC] = useState(\"\"); \r\n    const [age, setAge] = useState(\"\"); \r\n    const [gender, setGender] = useState(\"\"); \r\n    const [phone, setPhone] = useState(\"\"); \r\n    const [address, setAddress] = useState(\"\"); \r\n    const [postal, setPostal] = useState(\"\"); \r\n    const [negeri, setNegeri] = useState(\"\"); \r\n    const [city, setCity] = useState(\"\"); \r\n    const [result, setResult] = useState(\"\"); \r\n    const [image, setImage] = useState(\"\"); \r\n\r\n    const axios = require('axios');\r\n    const token = useSelector(state=>state.auth.token);\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'authorization': token,\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/patients/${id}`, {headers:headers})\r\n        .then((response) => {\r\n            \r\n            setName(response.data.name);\r\n            setIC(response.data.ic);\r\n            setAge(response.data.age);\r\n            setGender(response.data.gender);\r\n            setPhone(response.data.phone);\r\n            setAddress(response.data.address);\r\n            setPostal(response.data.postal);\r\n            setNegeri(response.data.negeri);\r\n            setCity(response.data.city);\r\n            setResult(response.data.result);\r\n            setImage(response.data.image);\r\n            \r\n        })\r\n        .catch((err)=>console.log(err));\r\n    })\r\n\r\n    return(\r\n        \r\n \r\n        <div className=\"page\">\r\n            \r\n\r\n            <div className=\"header\">\r\n                \r\n                <h4 className=\"title\">\r\n                    <b>{name}</b>\r\n                </h4>\r\n                <div className=\"buttons\">\r\n                    {/* <button onClick={() => setEditModalIsOpen(true)} className=\"editButton\">Edit</button> */}\r\n                    <IconButton onClick={() => setEditModalIsOpen(true)} className=\"editButton\">\r\n                        <EditIcon className=\"editIcon\"/>\r\n                    </IconButton>\r\n                    <Modal classname=\"EditModal\"\r\n                        isOpen={editModalIsOpen} \r\n                        onRequestClose={() => setEditModalIsOpen(false)}\r\n                        style={\r\n                        {\r\n                            overlay:{\r\n                            backgroundColor:'rgba(0,0,0,0.75)',\r\n                            }, \r\n                            content:{\r\n                                marginTop:'120px',\r\n                                marginLeft: 'auto',\r\n                                marginRight:'auto',\r\n                                marginBottom:'80px',\r\n                                width: '45%',\r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <UpdatePatient id={id} name={name} ic={ic} age={age} gender={gender} phone={phone} address={address} postal={postal} negeri={negeri} city={city} result={result} image={image}/>\r\n                        {/* <button className=\"closeButton\" onClick={() => setEditModalIsOpen(false)}>Close</button> */}\r\n                        <button className=\"closeButton\" onClick={() => setEditModalIsOpen(false)}>Close</button>\r\n                    </Modal>\r\n                    \r\n\r\n                    {/* <button onClick={() => setDeleteModalIsOpen(true)} className=\"deleteButton\">Delete</button> */}\r\n                    <IconButton color={'action'} onClick={() => setDeleteModalIsOpen(true)} className=\"deleteButton\">\r\n                        <DeleteForeverIcon className=\"deleteIcon\"/>\r\n                    </IconButton>\r\n                    \r\n                    <Modal classname=\"DeleteModal\"\r\n                        isOpen={deleteModalIsOpen} \r\n                        onRequestClose={() => setDeleteModalIsOpen(false)}\r\n                        style={\r\n                        {\r\n                            overlay:{\r\n                                backgroundColor:'rgba(0,0,0,0.75)',\r\n                            }, \r\n                            content:{\r\n                                height:\"180px\",\r\n                                marginTop:'250px',\r\n                                marginLeft: 'auto',\r\n                                marginRight:'auto',\r\n                                width: '30%', \r\n                                \r\n                            \r\n                            }\r\n                        }\r\n                        }\r\n                    >\r\n                        <DeletePatient id={id} />\r\n                        <div>\r\n                            <button className=\"closeButton\" onClick={() => setDeleteModalIsOpen(false)}>Cancel</button>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <div className=\"Flexbox\">\r\n                <div className=\"flexItem\"> \r\n                    <div className=\"image\">\r\n                        <img height=\"450px\" width=\"450px\" src={`http://localhost:5000/assets/images/${image.substring(13)}`}></img>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"flexItem\">\r\n                    <div style={form} >\r\n                        \r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>NRIC No.</label>\r\n                                <p style={formControl}>{ic} </p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Age</label>\r\n                                    <p style={formControl}>{age} </p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>Gender</label>\r\n                                <p style={formControl}>{gender} </p>\r\n                            </div>  \r\n                        </div>\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                <label style={label}>Contact No.</label>\r\n                                <p style={formControl}>{phone} </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Address</label>\r\n                                    <p style={formControl}>{address + \", \" + postal + \" \" + city + \", \" + negeri + \".\" } </p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div style={row}>\r\n                            <div style={formGroup}> \r\n                                    <label style={label}>Result</label>\r\n                                    <p style={formControl}>{result} </p>\r\n                            </div>\r\n                        </div>            \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PatientProfile;",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":6,"column":3,"nodeType":"247","messageId":"248","endLine":6,"endColumn":11},{"ruleId":"245","severity":1,"message":"249","line":20,"column":8,"nodeType":"247","messageId":"248","endLine":20,"endColumn":21},{"ruleId":"245","severity":1,"message":"250","line":21,"column":10,"nodeType":"247","messageId":"248","endLine":21,"endColumn":17},{"ruleId":"245","severity":1,"message":"251","line":26,"column":9,"nodeType":"247","messageId":"248","endLine":26,"endColumn":15},{"ruleId":"245","severity":1,"message":"252","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":14},{"ruleId":"245","severity":1,"message":"253","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":28},{"ruleId":"245","severity":1,"message":"254","line":6,"column":8,"nodeType":"247","messageId":"248","endLine":6,"endColumn":13},{"ruleId":"245","severity":1,"message":"255","line":63,"column":11,"nodeType":"247","messageId":"248","endLine":63,"endColumn":18},{"ruleId":"245","severity":1,"message":"256","line":74,"column":11,"nodeType":"247","messageId":"248","endLine":74,"endColumn":18},{"ruleId":"245","severity":1,"message":"257","line":88,"column":12,"nodeType":"247","messageId":"248","endLine":88,"endColumn":21},{"ruleId":"245","severity":1,"message":"258","line":89,"column":12,"nodeType":"247","messageId":"248","endLine":89,"endColumn":19},{"ruleId":"245","severity":1,"message":"259","line":90,"column":12,"nodeType":"247","messageId":"248","endLine":90,"endColumn":20},{"ruleId":"245","severity":1,"message":"260","line":91,"column":12,"nodeType":"247","messageId":"248","endLine":91,"endColumn":23},{"ruleId":"245","severity":1,"message":"261","line":92,"column":12,"nodeType":"247","messageId":"248","endLine":92,"endColumn":22},{"ruleId":"245","severity":1,"message":"262","line":93,"column":12,"nodeType":"247","messageId":"248","endLine":93,"endColumn":24},{"ruleId":"245","severity":1,"message":"263","line":94,"column":12,"nodeType":"247","messageId":"248","endLine":94,"endColumn":23},{"ruleId":"245","severity":1,"message":"264","line":95,"column":12,"nodeType":"247","messageId":"248","endLine":95,"endColumn":23},{"ruleId":"245","severity":1,"message":"265","line":96,"column":12,"nodeType":"247","messageId":"248","endLine":96,"endColumn":21},{"ruleId":"245","severity":1,"message":"266","line":97,"column":12,"nodeType":"247","messageId":"248","endLine":97,"endColumn":22},{"ruleId":"245","severity":1,"message":"267","line":97,"column":24,"nodeType":"247","messageId":"248","endLine":97,"endColumn":37},{"ruleId":"245","severity":1,"message":"266","line":111,"column":15,"nodeType":"247","messageId":"248","endLine":111,"endColumn":25},{"ruleId":"245","severity":1,"message":"268","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":25},{"ruleId":"245","severity":1,"message":"269","line":12,"column":9,"nodeType":"247","messageId":"248","endLine":12,"endColumn":16},{"ruleId":"245","severity":1,"message":"270","line":35,"column":9,"nodeType":"247","messageId":"248","endLine":35,"endColumn":14},{"ruleId":"245","severity":1,"message":"271","line":67,"column":9,"nodeType":"247","messageId":"248","endLine":67,"endColumn":11},{"ruleId":"245","severity":1,"message":"272","line":70,"column":10,"nodeType":"247","messageId":"248","endLine":70,"endColumn":27},{"ruleId":"245","severity":1,"message":"273","line":70,"column":29,"nodeType":"247","messageId":"248","endLine":70,"endColumn":49},{"ruleId":"274","severity":1,"message":"275","line":148,"column":13,"nodeType":"276","endLine":152,"endColumn":14},{"ruleId":"245","severity":1,"message":"277","line":24,"column":9,"nodeType":"247","messageId":"248","endLine":24,"endColumn":16},{"ruleId":"278","severity":1,"message":"279","line":114,"column":31,"nodeType":"280","messageId":"281","endLine":114,"endColumn":33},{"ruleId":"274","severity":1,"message":"275","line":132,"column":13,"nodeType":"276","endLine":135,"endColumn":15},{"ruleId":"245","severity":1,"message":"282","line":4,"column":8,"nodeType":"247","messageId":"248","endLine":4,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":28,"column":8,"nodeType":"285","endLine":28,"endColumn":10,"suggestions":"286"},{"ruleId":"283","severity":1,"message":"287","line":54,"column":8,"nodeType":"285","endLine":54,"endColumn":16,"suggestions":"288"},{"ruleId":"245","severity":1,"message":"289","line":205,"column":11,"nodeType":"247","messageId":"248","endLine":205,"endColumn":14},{"ruleId":"245","severity":1,"message":"290","line":214,"column":11,"nodeType":"247","messageId":"248","endLine":214,"endColumn":18},{"ruleId":"245","severity":1,"message":"252","line":2,"column":10,"nodeType":"247","messageId":"248","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"291","line":5,"column":10,"nodeType":"247","messageId":"248","endLine":5,"endColumn":16},{"ruleId":"245","severity":1,"message":"255","line":22,"column":9,"nodeType":"247","messageId":"248","endLine":22,"endColumn":16},{"ruleId":"245","severity":1,"message":"292","line":97,"column":12,"nodeType":"247","messageId":"248","endLine":97,"endColumn":22},{"ruleId":"245","severity":1,"message":"293","line":8,"column":8,"nodeType":"247","messageId":"248","endLine":8,"endColumn":11},{"ruleId":"245","severity":1,"message":"294","line":9,"column":8,"nodeType":"247","messageId":"248","endLine":9,"endColumn":17},{"ruleId":"245","severity":1,"message":"295","line":14,"column":8,"nodeType":"247","messageId":"248","endLine":14,"endColumn":18},{"ruleId":"245","severity":1,"message":"296","line":34,"column":11,"nodeType":"247","messageId":"248","endLine":34,"endColumn":22},{"ruleId":"245","severity":1,"message":"297","line":42,"column":11,"nodeType":"247","messageId":"248","endLine":42,"endColumn":25},{"ruleId":"245","severity":1,"message":"298","line":47,"column":11,"nodeType":"247","messageId":"248","endLine":47,"endColumn":21},{"ruleId":"245","severity":1,"message":"299","line":53,"column":11,"nodeType":"247","messageId":"248","endLine":53,"endColumn":15},{"ruleId":"245","severity":1,"message":"300","line":83,"column":11,"nodeType":"247","messageId":"248","endLine":83,"endColumn":17},{"ruleId":"245","severity":1,"message":"301","line":86,"column":12,"nodeType":"247","messageId":"248","endLine":86,"endColumn":16},{"ruleId":"245","severity":1,"message":"302","line":86,"column":18,"nodeType":"247","messageId":"248","endLine":86,"endColumn":25},{"ruleId":"283","severity":1,"message":"303","line":129,"column":7,"nodeType":"285","endLine":129,"endColumn":9,"suggestions":"304"},{"ruleId":"278","severity":1,"message":"305","line":200,"column":50,"nodeType":"280","messageId":"306","endLine":200,"endColumn":52},{"ruleId":"245","severity":1,"message":"307","line":10,"column":10,"nodeType":"247","messageId":"248","endLine":10,"endColumn":32},{"ruleId":"245","severity":1,"message":"308","line":13,"column":9,"nodeType":"247","messageId":"248","endLine":13,"endColumn":13},{"ruleId":"245","severity":1,"message":"309","line":15,"column":8,"nodeType":"247","messageId":"248","endLine":15,"endColumn":22},{"ruleId":"245","severity":1,"message":"310","line":17,"column":10,"nodeType":"247","messageId":"248","endLine":17,"endColumn":34},{"ruleId":"245","severity":1,"message":"311","line":51,"column":3,"nodeType":"247","messageId":"248","endLine":51,"endColumn":7},{"ruleId":"245","severity":1,"message":"312","line":52,"column":3,"nodeType":"247","messageId":"248","endLine":52,"endColumn":5},{"ruleId":"245","severity":1,"message":"313","line":53,"column":3,"nodeType":"247","messageId":"248","endLine":53,"endColumn":9},{"ruleId":"245","severity":1,"message":"314","line":54,"column":3,"nodeType":"247","messageId":"248","endLine":54,"endColumn":6},{"ruleId":"245","severity":1,"message":"315","line":55,"column":3,"nodeType":"247","messageId":"248","endLine":55,"endColumn":8},{"ruleId":"245","severity":1,"message":"316","line":56,"column":3,"nodeType":"247","messageId":"248","endLine":56,"endColumn":10},{"ruleId":"245","severity":1,"message":"317","line":57,"column":3,"nodeType":"247","messageId":"248","endLine":57,"endColumn":9},{"ruleId":"245","severity":1,"message":"318","line":58,"column":3,"nodeType":"247","messageId":"248","endLine":58,"endColumn":9},{"ruleId":"245","severity":1,"message":"319","line":59,"column":3,"nodeType":"247","messageId":"248","endLine":59,"endColumn":7},{"ruleId":"245","severity":1,"message":"320","line":60,"column":3,"nodeType":"247","messageId":"248","endLine":60,"endColumn":9},{"ruleId":"245","severity":1,"message":"321","line":61,"column":3,"nodeType":"247","messageId":"248","endLine":61,"endColumn":8},{"ruleId":"245","severity":1,"message":"271","line":62,"column":3,"nodeType":"247","messageId":"248","endLine":62,"endColumn":5},{"ruleId":"245","severity":1,"message":"322","line":12,"column":10,"nodeType":"247","messageId":"248","endLine":12,"endColumn":21},{"ruleId":"245","severity":1,"message":"323","line":12,"column":22,"nodeType":"247","messageId":"248","endLine":12,"endColumn":36},{"ruleId":"245","severity":1,"message":"252","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":14},{"ruleId":"245","severity":1,"message":"255","line":62,"column":11,"nodeType":"247","messageId":"248","endLine":62,"endColumn":18},{"ruleId":"245","severity":1,"message":"256","line":73,"column":11,"nodeType":"247","messageId":"248","endLine":73,"endColumn":18},{"ruleId":"245","severity":1,"message":"257","line":88,"column":12,"nodeType":"247","messageId":"248","endLine":88,"endColumn":21},{"ruleId":"245","severity":1,"message":"258","line":89,"column":12,"nodeType":"247","messageId":"248","endLine":89,"endColumn":19},{"ruleId":"245","severity":1,"message":"259","line":90,"column":12,"nodeType":"247","messageId":"248","endLine":90,"endColumn":20},{"ruleId":"245","severity":1,"message":"260","line":91,"column":12,"nodeType":"247","messageId":"248","endLine":91,"endColumn":23},{"ruleId":"245","severity":1,"message":"261","line":92,"column":12,"nodeType":"247","messageId":"248","endLine":92,"endColumn":22},{"ruleId":"245","severity":1,"message":"262","line":93,"column":12,"nodeType":"247","messageId":"248","endLine":93,"endColumn":24},{"ruleId":"245","severity":1,"message":"263","line":94,"column":12,"nodeType":"247","messageId":"248","endLine":94,"endColumn":23},{"ruleId":"245","severity":1,"message":"264","line":95,"column":12,"nodeType":"247","messageId":"248","endLine":95,"endColumn":23},{"ruleId":"245","severity":1,"message":"265","line":96,"column":12,"nodeType":"247","messageId":"248","endLine":96,"endColumn":21},{"ruleId":"245","severity":1,"message":"324","line":232,"column":11,"nodeType":"247","messageId":"248","endLine":232,"endColumn":22},{"ruleId":"245","severity":1,"message":"252","line":1,"column":10,"nodeType":"247","messageId":"248","endLine":1,"endColumn":14},{"ruleId":"245","severity":1,"message":"325","line":2,"column":17,"nodeType":"247","messageId":"248","endLine":2,"endColumn":25},{"ruleId":"245","severity":1,"message":"254","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":13},{"ruleId":"245","severity":1,"message":"326","line":6,"column":10,"nodeType":"247","messageId":"248","endLine":6,"endColumn":27},{"ruleId":"245","severity":1,"message":"254","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":13},{"ruleId":"245","severity":1,"message":"252","line":8,"column":9,"nodeType":"247","messageId":"248","endLine":8,"endColumn":13},{"ruleId":"245","severity":1,"message":"269","line":17,"column":11,"nodeType":"247","messageId":"248","endLine":17,"endColumn":18},{"ruleId":"245","severity":1,"message":"270","line":40,"column":11,"nodeType":"247","messageId":"248","endLine":40,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":194,"column":25,"nodeType":"276","endLine":194,"endColumn":126},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CreatePatient' is defined but never used.","'connect' is defined but never used.","'signIn' is assigned a value but never used.","'Link' is defined but never used.","'SentimentSatisfied' is defined but never used.","'axios' is defined but never used.","'subtext' is assigned a value but never used.","'results' is assigned a value but never used.","'nameError' is assigned a value but never used.","'icError' is assigned a value but never used.","'ageError' is assigned a value but never used.","'genderError' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'postalError' is assigned a value but never used.","'negeriError' is assigned a value but never used.","'cityError' is assigned a value but never used.","'imageError' is assigned a value but never used.","'setImageError' is assigned a value but never used.","'DeleteForeverIcon' is defined but never used.","'wrapper' is assigned a value but never used.","'title' is assigned a value but never used.","'id' is assigned a value but never used.","'deleteModalIsOpen' is assigned a value but never used.","'setDeleteModalIsOpen' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["329"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["330"],"'bar' is assigned a value but never used.","'barFill' is assigned a value but never used.","'signIn' is defined but never used.","'handlePage' is defined but never used.","'Box' is defined but never used.","'CardMedia' is defined but never used.","'background' is defined but never used.","'patientInfo' is assigned a value but never used.","'imageContainer' is assigned a value but never used.","'imageStyle' is assigned a value but never used.","'info' is assigned a value but never used.","'styles' is assigned a value but never used.","'xray' is assigned a value but never used.","'setXray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPatientsRequest'. Either include it or remove the dependency array.",["331"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useWideCardMediaStyles' is defined but never used.","'Grid' is defined but never used.","'PatientProfile' is defined but never used.","'useSquareCardMediaStyles' is defined but never used.","'name' is assigned a value but never used.","'IC' is assigned a value but never used.","'gender' is assigned a value but never used.","'age' is assigned a value but never used.","'phone' is assigned a value but never used.","'address' is assigned a value but never used.","'postal' is assigned a value but never used.","'negeri' is assigned a value but never used.","'city' is assigned a value but never used.","'result' is assigned a value but never used.","'image' is assigned a value but never used.","'modalIsOpen' is assigned a value but never used.","'setModalIsOpen' is assigned a value but never used.","'changeImage' is assigned a value but never used.","'useState' is defined but never used.","'ViewAgendaRounded' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [dispatch]",{"range":"338","text":"339"},"Update the dependencies array to be: [dispatch, result, token]",{"range":"340","text":"341"},"Update the dependencies array to be: [getPatientsRequest]",{"range":"342","text":"343"},[1153,1155],"[dispatch]",[2035,2043],"[dispatch, result, token]",[3738,3740],"[getPatientsRequest]"]