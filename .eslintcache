[{"C:\\Users\\user\\CAT300\\src\\index.js":"1","C:\\Users\\user\\CAT300\\src\\reportWebVitals.js":"2","C:\\Users\\user\\CAT300\\src\\App.js":"3","C:\\Users\\user\\CAT300\\src\\reducers\\index.js":"4","C:\\Users\\user\\CAT300\\src\\reducers\\snackbarReducer.js":"5","C:\\Users\\user\\CAT300\\src\\reducers\\backdropReducer.js":"6","C:\\Users\\user\\CAT300\\src\\reducers\\authReducer.js":"7","C:\\Users\\user\\CAT300\\src\\components\\NavBar.js":"8","C:\\Users\\user\\CAT300\\src\\pages\\Login.js":"9","C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js":"10","C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js":"11","C:\\Users\\user\\CAT300\\src\\pages\\Error.js":"12","C:\\Users\\user\\CAT300\\src\\components\\Snackbar.js":"13","C:\\Users\\user\\CAT300\\src\\pages\\User.js":"14","C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js":"15","C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js":"16","C:\\Users\\user\\CAT300\\src\\pages\\Home.js":"17","C:\\Users\\user\\CAT300\\src\\utils\\AuthRoute.js":"18","C:\\Users\\user\\CAT300\\src\\components\\Details.js":"19","C:\\Users\\user\\CAT300\\src\\components\\Backdrop.js":"20","C:\\Users\\user\\CAT300\\src\\information\\index.js":"21","C:\\Users\\user\\CAT300\\src\\scan\\index.js":"22","C:\\Users\\user\\CAT300\\src\\statistics\\states.js":"23","C:\\Users\\user\\CAT300\\src\\components\\About.js":"24","C:\\Users\\user\\CAT300\\src\\components\\EditForm.js":"25","C:\\Users\\user\\CAT300\\src\\components\\DeleteWindow.js":"26","C:\\Users\\user\\CAT300\\src\\information\\App.js":"27","C:\\Users\\user\\CAT300\\src\\pages\\Scan.js":"28","C:\\Users\\user\\CAT300\\src\\actions\\index.js":"29","C:\\Users\\user\\CAT300\\src\\components\\Cards.js":"30","C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js":"31","C:\\Users\\user\\CAT300\\src\\components\\SearchPatientBar.js":"32","C:\\Users\\user\\CAT300\\src\\components\\Card.js":"33"},{"size":859,"mtime":1609171926828,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1607783308068,"results":"36","hashOfConfig":"35"},{"size":2210,"mtime":1609433685057,"results":"37","hashOfConfig":"35"},{"size":357,"mtime":1609433181064,"results":"38","hashOfConfig":"35"},{"size":494,"mtime":1609171927097,"results":"39","hashOfConfig":"35"},{"size":229,"mtime":1609433181063,"results":"40","hashOfConfig":"35"},{"size":693,"mtime":1609171927093,"results":"41","hashOfConfig":"35"},{"size":1824,"mtime":1609434454407,"results":"42","hashOfConfig":"35"},{"size":3396,"mtime":1609434144163,"results":"43","hashOfConfig":"35"},{"size":13039,"mtime":1609234423803,"results":"44","hashOfConfig":"35"},{"size":275,"mtime":1608127408360,"results":"45","hashOfConfig":"35"},{"size":355,"mtime":1608913261270,"results":"46","hashOfConfig":"35"},{"size":1318,"mtime":1609171926827,"results":"47","hashOfConfig":"35"},{"size":2831,"mtime":1609433181061,"results":"48","hashOfConfig":"35"},{"size":7700,"mtime":1609433181060,"results":"49","hashOfConfig":"35"},{"size":6240,"mtime":1609433181066,"results":"50","hashOfConfig":"35"},{"size":2236,"mtime":1609433181052,"results":"51","hashOfConfig":"35"},{"size":474,"mtime":1609433181068,"results":"52","hashOfConfig":"35"},{"size":9296,"mtime":1609687444789,"results":"53","hashOfConfig":"35"},{"size":716,"mtime":1609433180787,"results":"54","hashOfConfig":"35"},{"size":120,"mtime":1608132388684,"results":"55","hashOfConfig":"35"},{"size":116,"mtime":1608913261318,"results":"56","hashOfConfig":"35"},{"size":3258,"mtime":1608913261319,"results":"57","hashOfConfig":"35"},{"size":3247,"mtime":1609433180786,"results":"58","hashOfConfig":"35"},{"size":12661,"mtime":1609686598768,"results":"59","hashOfConfig":"35"},{"size":1595,"mtime":1609433180852,"results":"60","hashOfConfig":"35"},{"size":1435,"mtime":1609433181049,"results":"61","hashOfConfig":"35"},{"size":13348,"mtime":1609434382692,"results":"62","hashOfConfig":"35"},{"size":515,"mtime":1609433180785,"results":"63","hashOfConfig":"35"},{"size":7702,"mtime":1609685052781,"results":"64","hashOfConfig":"35"},{"size":10497,"mtime":1609433181025,"results":"65","hashOfConfig":"35"},{"size":1147,"mtime":1609433181041,"results":"66","hashOfConfig":"35"},{"size":2889,"mtime":1609433180804,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"90b64d",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},"C:\\Users\\user\\CAT300\\src\\index.js",[],["144","145"],"C:\\Users\\user\\CAT300\\src\\reportWebVitals.js",[],"C:\\Users\\user\\CAT300\\src\\App.js",["146","147","148","149","150"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Error from \"./pages/Error\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Scan from \"./scan\";\r\nimport Patients from \"./information\";\r\nimport User from \"./pages/User\";\r\nimport Statistics from \"./statistics/Statistics\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Snackbar from \"./components/Snackbar\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport Details from \"./components/Details\";\r\nimport CreatePatient from './components/CreatePatient';\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport AuthRoute from './utils/AuthRoute';\r\nimport Backdrop from './components/Backdrop';\r\n\r\n\r\n\r\nfunction App() {\r\n  const signIn = useSelector(state=>state.auth.signIn);\r\n  return (\r\n    <Router>\r\n      <Backdrop />\r\n      <NavBar />\r\n      <Snackbar />\r\n      <ScrollToTop />\r\n      <Switch>\r\n        {/* <Route path=\"/scan\">\r\n          {signIn ? <Scan /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/patients/:id\" render={({match})=>{\r\n          if(signIn){\r\n            return(<Details match={match}/>);\r\n          }else{\r\n            return(<Redirect to='/'/>)\r\n          }\r\n          }}\r\n        />\r\n\r\n        <Route path=\"/patients\">\r\n          {signIn ? <Patients /> : <Redirect to=\"/\" />}\r\n        </Route>\r\n        <Route path=\"/statistics\">\r\n          {signIn ? <Statistics /> : <Redirect to=\"/\" />}\r\n        </Route> */}\r\n        <AuthRoute path=\"/scan\" component={Scan}/>\r\n        <AuthRoute path=\"/patients/:id\" component={Details}/> \r\n        <AuthRoute path=\"/patients\" component={Patients}/>\r\n        <AuthRoute path=\"/statistics\" component={Statistics}/>\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={SignUp} />s\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"*\" component={Error} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return { signIn: state.signIn };\r\n// };\r\n\r\nexport default App;\r\n// export default connect(mapStateToProps)(App);\r\n","C:\\Users\\user\\CAT300\\src\\reducers\\index.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\snackbarReducer.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\backdropReducer.js",[],"C:\\Users\\user\\CAT300\\src\\reducers\\authReducer.js",[],"C:\\Users\\user\\CAT300\\src\\components\\NavBar.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Login.js",[],"C:\\Users\\user\\CAT300\\src\\components\\CreatePatient.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar } from '../actions';\r\nimport { SentimentSatisfied } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction CreatePatient(props){\r\n    const dispatch = useDispatch();\r\n\r\n    const wrapper={\r\n        paddingLeft:'15px',\r\n        paddingRight:'15px',\r\n    }\r\n\r\n    const form={\r\n        display: 'flex',\r\n        margin: '0 auto',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '15px',\r\n        minWidth: '250px',\r\n        width: '100%',\r\n    }\r\n    const row={\r\n        display: 'flex',\r\n        justifyContent:'space-between',\r\n        width: '100%',\r\n        gap: '20px',\r\n    }\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n        margin:'15px',\r\n        textAlign:'center',\r\n    };\r\n\r\n    const label={\r\n        fontSize: '16px',\r\n        fontWeight: '700',\r\n    };\r\n    const button={\r\n        width: '100%',\r\n        height: '32px',\r\n        backgroundColor: 'darkblue',\r\n        color: 'rgb(255,255,255)',\r\n        cursor: 'pointer',\r\n        marginTop: '5px',\r\n    };\r\n    const formGroup={\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        gap: '5px',\r\n    };\r\n    const formControl={\r\n        width: '100%',\r\n        height: '30px',\r\n        paddingLeft: '5px',\r\n    };\r\n    const subtext={\r\n        fontSize: '12px',\r\n        fontWeight: '700',\r\n        textAlign: 'right',\r\n        width: '100%',\r\n        marginTop: '-10px',\r\n        padding: '0',\r\n    }\r\n\r\n    const negeris = ['','Wilayah Persekutuan','Selangor','Johor','Kedah','Kelantan','Melaka',\r\n    'Negeri Sembilan','Pahang','Penang','Perak','Perlis','Sabah','Sarawak','Terengganu'];\r\n    const results = ['','Positive','Negative','Unknown'];\r\n    const genders = ['','Male','Female'];\r\n    \r\n    const [name, setName] = useState(\"\"); \r\n    const [ic, setIC] = useState(\"\"); \r\n    const [age, setAge] = useState(\"\"); \r\n    const [gender, setGender] = useState(\"\"); \r\n    const [phone, setPhone] = useState(\"\"); \r\n    const [address, setAddress] = useState(\"\"); \r\n    const [postal, setPostal] = useState(\"\"); \r\n    const [negeri, setNegeri] = useState(\"\"); \r\n    const [city, setCity] = useState(\"\"); \r\n    //const [result, setResult] = useState(\"\"); \r\n    const [image, setImage] = useState(\"\"); \r\n\r\n    const [nameError, setNameError] = useState(\"\");\r\n    const [icError, setIcError] = useState(\"\");\r\n    const [ageError, setAgeError] = useState(\"\");\r\n    const [genderError, setGenderError] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [addressError, setAddressError] = useState(\"\");\r\n    const [postalError, setPostalError] = useState(\"\");\r\n    const [negeriError, setNegeriError] = useState(\"\");\r\n    const [cityError, setCityError] = useState(\"\");\r\n    //const [resultError, setResultError] = useState(\"\");\r\n    const [imageError, setImageError] = useState(\"\");\r\n\r\n\r\n    const formValidation = () => {\r\n        const nameError = {};\r\n        const icError = {};\r\n        const ageError = {};\r\n        const genderError = {};\r\n        const phoneError = {};\r\n        const addressError = {};\r\n        const postalError = {};\r\n        const negeriError = {};\r\n        const cityError = {};\r\n        //const resultError = {};\r\n        const imageError = {};\r\n\r\n\r\n        let isValid = true;\r\n\r\n        if(name.trim().length < 1){\r\n            nameError.emptyName = \"Please fill in patient's name.\";\r\n            dispatch(setSnackbar(true,'error', nameError.emptyName));\r\n            isValid = false;\r\n        }\r\n\r\n        if(ic.trim().length < 1){\r\n            icError.emptyIc = \"Please fill in patient's NRIC number.\";\r\n            dispatch(setSnackbar(true,'error', icError.emptyIc));\r\n            isValid = false;\r\n        }\r\n\r\n        if(age.trim().length < 1){\r\n            ageError.emptyAge = \"Please fill in patient's age.\";\r\n            dispatch(setSnackbar(true,'error', ageError.emptyAge));\r\n            isValid = false;\r\n        }\r\n\r\n        if(phone.trim().length < 1){\r\n            phoneError.emptyPhone = \"Please fill in patient's contact number.\";\r\n            dispatch(setSnackbar(true,'error', phoneError.emptyPhone));\r\n            isValid = false;\r\n        }\r\n\r\n        if(address.trim().length < 1){\r\n            addressError.emptyAddress = \"Please fill in patient's address.\";\r\n            dispatch(setSnackbar(true,'error', addressError.emptyAddress));\r\n            isValid = false;\r\n        }\r\n\r\n        if(postal.trim().length < 1){\r\n            postalError.emptyPostal = \"Please fill in patient's postal code.\";\r\n            dispatch(setSnackbar(true,'error', postalError.emptyPostal));\r\n            isValid = false;\r\n        }\r\n\r\n        if(negeri.trim().length < 1){\r\n            negeriError.emptyNegeri = \"Please fill in patient's state of \";\r\n            dispatch(setSnackbar(true,'error', negeriError.emptyNegeri));\r\n            isValid = false;\r\n        }\r\n\r\n        if(city.trim().length < 1){\r\n            cityError.emptyCity = \"Please fill in patient's city.\";\r\n            dispatch(setSnackbar(true,'error', cityError.emptyCity));\r\n            isValid = false;\r\n        }\r\n\r\n        // if(result.trim().length < 1){\r\n        //     resultError.emptyResult = \"Please fill in patient's scan result.\";\r\n        //     dispatch(setSnackbar(true,'error', resultError.emptyResult));\r\n        //     isValid = false;\r\n        // }\r\n\r\n        setNameError(nameError);\r\n        setIcError(icError);\r\n        setAgeError(ageError);\r\n        setGenderError(genderError);\r\n        setPhoneError(phoneError);\r\n        setAddressError(addressError);\r\n        setPostalError(postalError);\r\n        setNegeriError(negeriError);\r\n        setCityError(cityError);\r\n        //setResultError(resultError);\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    const changeName = (event) => {\r\n        setName(event.target.value);\r\n        console.log(name);\r\n    }\r\n\r\n    const changeIC = (event) => {\r\n        setIC(event.target.value);\r\n    }\r\n\r\n    const changeAge = (event) => {\r\n        setAge(event.target.value);\r\n    }\r\n\r\n    const changeGender = (event) => {\r\n        setGender(event.target.value);\r\n    }\r\n\r\n    const changePhone = (event) => {\r\n        setPhone(event.target.value);\r\n    }\r\n\r\n    const changeAddress = (event) => {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    const changePostal = (event) => {\r\n        setPostal(event.target.value);\r\n    }\r\n\r\n    const changeNegeri = (event) => {\r\n        setNegeri(event.target.value);\r\n    }\r\n\r\n    const changeCity = (event) => {\r\n        setCity(event.target.value);\r\n    }\r\n\r\n    // const changeResult = (event) => {\r\n    //     setResult(event.target.value);\r\n    // }\r\n\r\n    const changeImage = (event) => {\r\n        setImage(event.target.files[0]);\r\n    }\r\n\r\n\r\n    const axios = require('axios');\r\n    const token = useSelector(state=>state.auth.token);\r\n\r\n    const headers = {\r\n        'authorization': token,\r\n    }\r\n\r\n    console.log(token);   \r\n\r\n    const onSubmit = (event) =>{\r\n        event.preventDefault();\r\n        const isValid = formValidation();\r\n\r\n        if(isValid){\r\n            const patient = {\r\n                name: name,\r\n                ic: ic,\r\n                age: age,\r\n                gender: gender,\r\n                phone: phone,\r\n                address: address,\r\n                postal: postal,\r\n                negeri: negeri,\r\n                city: city,\r\n                //result: result,\r\n                image: image,\r\n            }\r\n\r\n            const formData = new FormData();\r\n            for(let key in patient){\r\n                formData.append(key,patient[key]);\r\n            }\r\n            \r\n            axios.post('http://localhost:5000/patients/add', formData, {headers:headers})\r\n            .then((response)=> {console.log(response.data)})  \r\n            .catch((err)=>console.log(err)); \r\n            \r\n            window.location.reload(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={title}>\r\n                <p>New Patient Profile</p>\r\n            </div>\r\n            <form action=\"\" method=\"post\" style={form} onSubmit = {onSubmit}>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Name</label>\r\n                        <input onChange={changeName} style={formControl} type=\"text\" placeholder=\"Name\" name=\"name\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>NRIC No.</label>\r\n                        <input onChange={changeIC} style={formControl} type=\"text\" placeholder=\"NRIC No.\" name=\"IC\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Age</label>\r\n                        <input onChange={changeAge} style={formControl} type=\"text\" placeholder=\"Age\" name=\"age\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Gender</label>\r\n                        <select style={formControl} onChange={changeGender}>\r\n                            {\r\n                                genders.map((gender,index)=>{\r\n                                    return(\r\n                                        gender===''\r\n                                        ?<option key={index} value={gender} disabled selected>Gender</option>\r\n                                        :<option key={index} value={gender}>{gender}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>  \r\n                    <div style={formGroup}> \r\n                        <label style={label}>Contact No.</label>\r\n                        <input onChange={changePhone} style={formControl} type=\"text\" placeholder=\"Contact No.\" name=\"phone\"/>\r\n                    </div>\r\n                </div>\r\n                <div style={formGroup}> \r\n                        <label style={label}>Address</label>\r\n                        <input onChange={changeAddress} style={formControl} type=\"text\" placeholder=\"Address\" name=\"address\"/>\r\n                </div>\r\n                <div style={row}>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>Postal Code</label>\r\n                        <input onChange={changePostal} style={formControl} type=\"text\" placeholder=\"Postal Code\" name=\"postal code\"/>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>State</label>\r\n                        <select style={formControl} onChange={changeNegeri}>\r\n                            {\r\n                                negeris.map((negeri,index)=>{\r\n                                    return(\r\n                                        negeri===''\r\n                                        ?<option key={index} value={negeri} disabled selected>State</option>\r\n                                        :<option key={index} value={negeri}>{negeri}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div style={formGroup}> \r\n                        <label style={label}>City</label>\r\n                        <input onChange={changeCity} style={formControl} type=\"text\" placeholder=\"City\" name=\"city\"/>\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* <div style={formGroup}> \r\n                        <label style={label}>Result</label>\r\n                        <select style={formControl} onChange={changeResult}>\r\n                            {\r\n                                results.map((result,index)=>{\r\n                                    return(\r\n                                        result===''\r\n                                        ?<option key={index} value={result} disabled selected>Result</option>\r\n                                        :<option key={index} value={result}>{result}</option>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </select>\r\n                </div> */}\r\n\r\n                <div style={formGroup}> \r\n                    <label style={label}>Chest X-ray Image</label>\r\n                    <input onChange={changeImage} style={formControl} type=\"file\" accept=\"image/*\"/>\r\n                </div>\r\n                    \r\n                 \r\n                <input type=\"submit\" value=\"Save\" style={button}/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePatient;","C:\\Users\\user\\CAT300\\src\\components\\ScrollToTop.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\Error.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Snackbar.js",[],"C:\\Users\\user\\CAT300\\src\\pages\\User.js",["168"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../components/Details.css\";\r\n\r\nfunction User(props) {\r\n  useEffect(() => {\r\n    console.log(props.token);\r\n\r\n    fetch(\"http://localhost:5000/users/\", {\r\n      method: \"GET\",\r\n      headers: new Headers({\r\n        // prettier-ignore\r\n        \"Authorization\": props.token,\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json) {\r\n          console.log(json);\r\n        } else {\r\n          console.log(\"error\");\r\n        }\r\n      });\r\n  });\r\n\r\n  //   function onSignIn(e) {\r\n  //     // Grab state\r\n  //     e.preventDefault();\r\n\r\n  //     // const { email, password } = this.state;\r\n\r\n  //     // Post request to backend\r\n  //     fetch(\"http://localhost:5000/users/login\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       },\r\n  //       body: JSON.stringify({\r\n  //         email: email,\r\n  //         password: password\r\n  //       })\r\n  //     })\r\n  //       .then(res => res.json())\r\n  //       .then(json => {\r\n  //         console.log(\"json\", json);\r\n  //         if (json.success) {\r\n  //         } else {\r\n  //         }\r\n  //       });\r\n  //   }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h4 className=\"title\">\r\n          <b>User</b>\r\n        </h4>\r\n        <div className=\"buttons\">\r\n          <button className=\"editButton\">Edit</button>\r\n          <button className=\"deleteButton\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Flexbox\">\r\n        <div className=\"image\">\r\n          <img src=\"https://wx3.sinaimg.cn/mw690/ec074f36gy1gljviraraeg20ex0ba7wn.gif\"></img>\r\n        </div>\r\n\r\n        <table className=\"table\">\r\n          <tr>\r\n            <th color=\"black\">NRIC No.</th>\r\n            <th>970420-33-0320</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Age</th>\r\n            <th>23</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Gender</th>\r\n            <th>Female</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Adress</th>\r\n            <th>Guizhou, Guiyang.</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Contact No.</th>\r\n            <th>183201314</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Hospital</th>\r\n            <th>Chimelong Hospital</th>\r\n          </tr>\r\n          <tr>\r\n            <th classname=\"Butir\">Result</th>\r\n            <th>Negative</th>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(User);\r\n","C:\\Users\\user\\CAT300\\src\\pages\\SignUp.js",[],"C:\\Users\\user\\CAT300\\src\\statistics\\Statistics.js",["169","170","171"],"import React, { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { states } from \"./states\";\r\nimport { connect } from \"react-redux\";\r\nfunction Statistics(props) {\r\n  const container = {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\"\r\n  };\r\n\r\n  const innerContainer = {\r\n    display: \"flex\",\r\n    height: \"100%\",\r\n    width: \"800px\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    marginTop: 10\r\n  };\r\n\r\n  const columns = {\r\n    columnCount: 3,\r\n    columnGap: \"40px\",\r\n    columnRule: \"1px solid lightblue\"\r\n  };\r\n\r\n  const row = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    paddingBottom: 5\r\n  };\r\n\r\n  const charts = {\r\n    minHeight: 600,\r\n    minWidth: 800,\r\n    marginTop: 10\r\n  };\r\n\r\n  const blueCards = {\r\n    background: \"#1D5BB8\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const greenCards = {\r\n    background: \"#8EC3A7\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const yellowCards = {\r\n    background: \"#F0CB69\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const redCards = {\r\n    background: \"#DC5356\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const purpleCards = {\r\n    background: \"#9F6DAA\",\r\n    color: \"#fff\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    margin: 3,\r\n    width: 150,\r\n    height: 80\r\n  };\r\n\r\n  const mapTitle = {\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"1.2\",\r\n    fontWeight: \"900\"\r\n  };\r\n\r\n  const [data, setData] = useState(\"\");\r\n\r\n  const renderMarkers = () => {\r\n    var data = [];\r\n    states.map((state, index) => {\r\n      data.push(\r\n        <div\r\n          key={state.index}\r\n          lat={state.lat}\r\n          lng={state.lng}\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"60px\",\r\n            padding: 2,\r\n            background: \"#F7F2A3\",\r\n            borderRadius: \"5px\",\r\n            textAlign: \"center\",\r\n            color: \"black\"\r\n          }}\r\n        >\r\n          {/* <p style={{ textAlign: \"center\" }}>{state.state}</p> */}\r\n          <div>\r\n            <img\r\n              style={{ width: 15, height: 12, paddingTop: 3 }}\r\n              src={state.abb}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"black\" }}>{state.state}</p>\r\n          {state.infected}\r\n        </div>\r\n      );\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getDataWithFetch = async () => {\r\n    const response = await fetch(\r\n      \"https://api.apify.com/v2/key-value-stores/6t65lJVfs3d8s6aKc/records/LATEST?disableRedirect=true\"\r\n    );\r\n    const jsonData = await response.json();\r\n    setData(jsonData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(props.token);\r\n    getDataWithFetch();\r\n  });\r\n\r\n  return (\r\n    <div style={container}>\r\n      <span class=\"malaysia-state-flag-icon malaysia-state-flag-icon-mlk\"></span>\r\n      <div style={innerContainer}>\r\n        <div style={row}>\r\n          <div style={blueCards}>\r\n            Total Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.testedPositive}\r\n            </h2>\r\n          </div>\r\n          <div style={greenCards}>\r\n            Total Recovered:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.recovered}\r\n            </h2>\r\n          </div>\r\n          <div style={yellowCards}>\r\n            Total Active Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.activeCases}\r\n            </h2>\r\n          </div>\r\n          <div style={redCards}>\r\n            Total Death Cases:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.deceased}\r\n            </h2>\r\n          </div>\r\n          <div style={purpleCards}>\r\n            Total ICU:\r\n            <h2 style={{ textAlign: \"center\", marginTop: 5, color: \"#fff\" }}>\r\n              {data.inICU}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            color: \"rgb(170, 170, 170)\",\r\n            marginBottom: 15\r\n          }}\r\n        >\r\n          Source: Health Ministry • Active cases means total confirmed cases\r\n          minus deaths and recoveries.\r\n        </p>\r\n\r\n        <embed\r\n          style={charts}\r\n          src=\"https://flo.uri.sh/visualisation/1985060/embed\"\r\n        ></embed>\r\n      </div>\r\n      <div style={{ height: 30 }} />\r\n      <div>\r\n        <div id=\"map\" style={{ height: 420, width: 780 }}>\r\n          <h2 style={mapTitle}>\r\n            Malaysia State CONVID-19 Daily Total New Cases\r\n          </h2>\r\n          <GoogleMapReact\r\n            bootstrapURLKeys={{\r\n              key: \"AIzaSyAdWEmhfQyer_yx4JlOAcJxkfjVKN3TcJg\"\r\n            }}\r\n            defaultCenter={{\r\n              lat: 3.9743,\r\n              lng: 102.4381\r\n            }}\r\n            defaultZoom={7.5}\r\n          >\r\n            {renderMarkers()}\r\n          </GoogleMapReact>\r\n          <p\r\n            style={{\r\n              fontSize: \"14px\",\r\n              color: \"rgb(170, 170, 170)\",\r\n              marginBottom: 15\r\n            }}\r\n          >\r\n            Source: Health Ministry • Cases are updated on 12am daily.\r\n          </p>\r\n          <div style={{ height: 30 }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { token: state.token, signIn: state.signIn };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);\r\n","C:\\Users\\user\\CAT300\\src\\pages\\Home.js",[],"C:\\Users\\user\\CAT300\\src\\utils\\AuthRoute.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Details.js",["172","173","174","175","176","177"],"C:\\Users\\user\\CAT300\\src\\components\\Backdrop.js",["178"],"import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: 10000,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst CustomizedBackdrop = () => {\r\n  const classes = useStyles();\r\n  const open = useSelector(state=>state.backdrop);\r\n\r\n  return (\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n  );\r\n}\r\n\r\nexport default CustomizedBackdrop;\r\n","C:\\Users\\user\\CAT300\\src\\information\\index.js",[],"C:\\Users\\user\\CAT300\\src\\scan\\index.js",[],"C:\\Users\\user\\CAT300\\src\\statistics\\states.js",[],"C:\\Users\\user\\CAT300\\src\\components\\About.js",[],"C:\\Users\\user\\CAT300\\src\\components\\EditForm.js",["179","180","181","182","183","184","185","186","187","188","189","190"],"C:\\Users\\user\\CAT300\\src\\components\\DeleteWindow.js",["191","192","193"],"import { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nfunction DeleteWindow(props){\r\n\r\n    const subtext = {\r\n        marginTop:\"15px\",\r\n        marginBottom: \"30px\",\r\n    }\r\n\r\n    const closeButton = {\r\n        // backgroundColor: \"darkBlue\",\r\n        backgroundColor: 'black',\r\n        color: \"white\",\r\n        paddingLeft: \"8px\",\r\n        paddingRight: \"8px\",\r\n    }\r\n\r\n    const title={\r\n        fontSize: '26px',\r\n        fontWeight: '700',\r\n    }\r\n\r\n    const id = props.id;\r\n    const token = useSelector(state=>state.auth.token);\r\n    const headers = {\r\n        //'Content-Type': 'application/json',\r\n        'authorization': token,\r\n    }\r\n    const axios = require('axios');\r\n\r\n    const onSubmit = (event) =>{\r\n\r\n        event.preventDefault();\r\n\r\n        axios.delete(`http://localhost:5000/patients/${id}`,{headers:headers})\r\n        .then(response => {console.log(response.data)})\r\n        .catch((err)=>console.log(err));   \r\n\r\n        window.location.href = \"http://localhost:3000/patients/\";\r\n\r\n    }\r\n           \r\n\r\n    return(\r\n        <div>\r\n            <form onSubmit = {onSubmit} >\r\n                <div style={title}>\r\n                    Delete Patient\r\n                </div>\r\n                <div style={subtext}>\r\n                    <p>Confirm deletion?</p>\r\n                </div>\r\n                <input style={closeButton} type=\"submit\" value=\"Delete\" className=\"closeButton\"/>\r\n            </form>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default DeleteWindow;","C:\\Users\\user\\CAT300\\src\\information\\App.js",["194","195"],"import './App.css';\r\nimport React, {useState} from 'react';\r\nimport Cards from \"../components/Cards\";\r\n// import Details from \"../components/Details\";\r\nimport Modal from 'react-modal';\r\n// import NewForm from \"../components/NewForm\";\r\n// import { BrowserRouter as Router, link } from 'react-router-dom';\r\n// import Route from 'react-router-dom/Route';\r\n// import CreatePatient from '../components/CreatePatient';\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction App() {\r\n\r\n  const [modalIsOpen,setModalIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      {/*<button  onClick={() => setModalIsOpen(true)} className=\"AddNewButton\">Add New</button>\r\n      <Modal classname=\"Modal\"\r\n        isOpen={modalIsOpen} \r\n        onRequestClose={() => setModalIsOpen(false)}\r\n        style={\r\n          {\r\n            overlay:{\r\n              backgroundColor:'rgba(0,0,0,0.75)',\r\n            }, \r\n            content:{\r\n              marginTop:'80px',\r\n              marginLeft: 'auto',\r\n              marginRight:'auto',\r\n              width: '50%', \r\n              \r\n            }\r\n          }\r\n        }\r\n      >\r\n        <CreatePatient openModal={setModalIsOpen}/>\r\n        <button className=\"closeButton\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n      </Modal>*/}\r\n      \r\n      \r\n      <div className=\"Dashboard\">\r\n        <Cards />\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\CAT300\\src\\pages\\Scan.js",["196","197"],"import PatientTable from '../components/PatientTable';\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport React, {useState, useEffect, useRef} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setSnackbar, setBackdrop } from '../actions';\r\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nfunction Scan(){\r\n    const token = useSelector(state=>state.auth.token);\r\n    const dispatch = useDispatch();\r\n    const [model,setModel] = useState(null);\r\n    const [result,setResult] = useState(null);\r\n    const [patients,setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [xray, setXray] = useState(null);\r\n    const imageRef = useRef();\r\n\r\n    useEffect(()=>{\r\n        const fetchModel = async ()=>{\r\n            dispatch(setBackdrop(true));\r\n            const localModel = await tf.loadLayersModel(\"http://localhost:5000/assets/ResNet50/model.json\");\r\n            setModel(localModel);\r\n            console.log(\"Model Loaded\");\r\n            dispatch(setBackdrop(false));\r\n        };\r\n        fetchModel();\r\n    }, [dispatch]);\r\n\r\n    useEffect(()=>{\r\n        const getPatientsRequest = async () => {\r\n            try{\r\n                const res = await fetch(\r\n                    'http://localhost:5000/patients/',\r\n                    {\r\n                        method: \"GET\",\r\n                        headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                        }\r\n                    },\r\n                );\r\n                const json = await res.json();\r\n                if(res.ok){\r\n                    setPatients(json.matchPatients);\r\n                    console.log(json.matchPatients);\r\n                }else{\r\n                    dispatch(setSnackbar(true,'error',json.message));\r\n                }\r\n            }catch(error){\r\n                dispatch(setSnackbar(true,'error','Request Error'));\r\n            }\r\n        }\r\n        getPatientsRequest();\r\n    }, [result, dispatch, token]);\r\n\r\n    const handleScan = async ()=> {\r\n        dispatch(setBackdrop(true));\r\n        const scanImage = imageRef.current;\r\n        let tensor = tf.browser.fromPixels(scanImage);\r\n        tensor = tf.image.resizeNearestNeighbor(tensor, [224,224]);\r\n        tensor = tensor.toFloat().div(255).expandDims();\r\n        console.log(\"Preprocessed\");\r\n        const predictions = await model.predict(tensor).data();\r\n        console.log(\"Predicted\");\r\n        console.log(predictions);\r\n        const results = [];\r\n        predictions.forEach((prediction,index)=>{\r\n            results[index] = parseFloat(prediction*100);\r\n        })\r\n        setResult(results);\r\n        try{\r\n            const res = await fetch(\r\n                `http://localhost:5000/patients/updateStatus/${selectedPatient._id}`,\r\n                {\r\n                    method: \"POST\",\r\n                    headers:{\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": token,\r\n                    },\r\n                    body: JSON.stringify({result:results[0]>50?\"Positive\":\"Negative\", score:results[0]}),\r\n                }\r\n            );\r\n            const json = await res.json();\r\n            dispatch(setBackdrop(false));\r\n            if(res.ok){\r\n                dispatch(setSnackbar(true,'success',json.message));\r\n            }else{\r\n                dispatch(setSnackbar(true,'error',json.message));\r\n            }\r\n        }catch(error){\r\n            dispatch(setBackdrop(false));\r\n            dispatch(setSnackbar(true,'error','Request Error'));\r\n        }\r\n    }\r\n\r\n    const handleClick = (patient) => {\r\n        setSelectedPatient(patient);\r\n        setXray(patient.image);\r\n    }\r\n\r\n    const positiveStyles = buildStyles({\r\n        textSize: '16px',\r\n        text:'inherit',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n    });\r\n\r\n    const negativeStyles = buildStyles({\r\n        textSize: '16px',\r\n        pathTransitionDuration: 0.5,\r\n        pathColor: selectedPatient && \r\n        selectedPatient.score ? \r\n        `rgba(0, 68, 139, ${100-selectedPatient.score}%`: \r\n        `rgba(0, 68, 139, 0%`,\r\n        textColor: 'rgb(0,0,0)',\r\n        trailColor: '#d6d6d6',\r\n        backgroundColor: '#3e98c7',\r\n        fontWeight: 700,\r\n    });\r\n    \r\n    const wrapper = {\r\n        height: '90vh',\r\n        width: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '3fr 5fr 3fr',\r\n    };\r\n    const information = {\r\n        minWidth: '250px',\r\n    };\r\n    const panel = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around',\r\n        height: '90vh',\r\n        width: '100%',\r\n        minWidth: '400px',\r\n        backgroundColor: 'rgba(240,240,240,50%)'\r\n    };\r\n    const image = {\r\n        height: '100%',\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n    }\r\n    const analysis = {\r\n        minWidth: '250px',\r\n    };\r\n    const container = {\r\n        height: '90vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '20px',\r\n        justifyContent: 'space-between',\r\n    };\r\n    const upperPane = {\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        gap: '20px',\r\n    };\r\n    const group = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        margin: '60px auto',\r\n    }\r\n    const positiveStatus = {\r\n        // backgroundColor: 'rgb(0,63,255)',\r\n        backgroundColor: 'rgb(0,68,139)',\r\n        color: 'rgb(255,255,255)',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%',\r\n    }\r\n    const negativeStatus = {\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        color: 'dimgray',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        width: '30%'\r\n    };\r\n    const circle = {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        gap: '10px',\r\n        width: '100%',\r\n        margin: '40px auto 30px auto',\r\n    };\r\n    const circleBar = {\r\n        width: '40%',\r\n    };\r\n    const bar = {\r\n        width: '100%',\r\n        borderRadius: '2%',\r\n        backgroundColor: 'rgba(240,240,240,50%)',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n        border: '1px solid rgba(0,0,0,15%)',\r\n        margin: '60px auto 30px auto',\r\n\r\n    }\r\n    const barFill = {\r\n        backgroundColor: 'rgb(0,63,255)',\r\n        // width: result?`${result[0]}%`:0,\r\n        width: selectedPatient && selectedPatient.score? `${selectedPatient.score}%`:0,\r\n        height: '36px',\r\n    }\r\n  \r\n    const lowerPane = {\r\n        margin:'0 auto',\r\n        marginBottom: '20px',\r\n        width: '70%',\r\n        height: '48px',\r\n        borderRadius: '2%',\r\n        boxShadow: '5px 5px 5px rgba(0,0,0,15%)',\r\n    };\r\n    return(\r\n        <div style={wrapper}>\r\n            <div style={information}>\r\n                <PatientTable\r\n                    patients={patients}\r\n                    handleClick={handleClick}\r\n                />\r\n            </div>\r\n            <div style={panel}>\r\n                {\r\n                    selectedPatient &&\r\n                    <img \r\n                    crossOrigin='anonymous'\r\n                    src={`http://localhost:5000/assets/images/${xray.substring(13)}`} \r\n                    alt=\"X-Ray\"\r\n                    style={image} \r\n                    ref={imageRef} /> \r\n                }\r\n            </div>\r\n            <div style={analysis}>\r\n                <div style={container}>\r\n                    <div style={upperPane}>\r\n                        <div>\r\n                        <p className=\"sm-text bold\">Result</p>\r\n                        <div style={group}>\r\n                            {\r\n                                selectedPatient && selectedPatient.result === \"Positive\"\r\n                                // result && result[0]>50\r\n                                ?\r\n                                (\r\n                                <>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                                )\r\n                                :\r\n                                <>\r\n                                    <div style={negativeStatus}>\r\n                                        <p className=\"sm-text bold\">Positive</p>\r\n                                    </div>\r\n                                    <div style={positiveStatus}>\r\n                                        <p className=\"sm-text bold\">Negative</p>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"sm-text bold\">Abnormality Score</p>\r\n                            {/* <div style={bar} >\r\n                                <div style={barFill}/>\r\n                            </div> */}\r\n                            <div style={{display:'flex', justifyContent:'space-around', gap: '20px', alignItems:'center'}}>\r\n                                {\r\n                                    selectedPatient \r\n                                    && selectedPatient.score \r\n                                    ?\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={100-selectedPatient.score}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`${(100-selectedPatient.score).toFixed(2)}%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                    <div style={circle}>\r\n                                    <div style={circleBar}>\r\n                                    <CircularProgressbarWithChildren styles={positiveStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>COVID-19</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    <div style={circleBar}> \r\n                                    <CircularProgressbarWithChildren styles={negativeStyles} value={0}>\r\n                                        <div><p style={{fontSize: 24, fontWeight: 'bold'}}>{`0%`}</p></div>\r\n                                        <div><p style={{fontSize: 16, fontWeight: 'bold'}}>Normal</p></div>\r\n                                    </CircularProgressbarWithChildren>\r\n                                    </div> \r\n                                    </div>\r\n                                    </>\r\n                                    \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        model && selectedPatient\r\n                        ?<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan}>Scan</button>\r\n                        :<button style={lowerPane} className=\"button sm-text bold\" onClick={handleScan} disabled>Scan</button>\r\n                    }\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scan;","C:\\Users\\user\\CAT300\\src\\actions\\index.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Cards.js",["198","199","200","201","202","203","204","205","206","207","208","209"],"C:\\Users\\user\\CAT300\\src\\components\\PatientTable.js",[],"C:\\Users\\user\\CAT300\\src\\components\\SearchPatientBar.js",[],"C:\\Users\\user\\CAT300\\src\\components\\Card.js",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225"],"import React from 'react';\r\nimport cx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChevronRightRounded from '@material-ui/icons/ChevronRightRounded';\r\nimport TextInfoContent from '@mui-treasury/components/content/textInfo';\r\nimport { useWideCardMediaStyles } from '@mui-treasury/styles/cardMedia/wide';\r\nimport { useN01TextInfoContentStyles } from '@mui-treasury/styles/textInfoContent/n01';\r\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\r\nimport {Grid} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport Details from './Details';\r\nimport { useFourThreeCardMediaStyles } from '@mui-treasury/styles/cardMedia/fourThree';\r\nimport { useSquareCardMediaStyles } from '@mui-treasury/styles/cardMedia/square';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n\r\n    root: {\r\n      maxWidth: 304,\r\n      margin: 'auto',\r\n      boxShadow: '0px 14px 80px rgba(34, 35, 58, 0.2)',\r\n      borderRadius: 0,\r\n      padding: 20,\r\n    },\r\n    content: {\r\n      padding: 20,\r\n    },\r\n    cta: {\r\n      marginTop: 20,\r\n      textTransform: 'initial',\r\n      backgroundColor:'darkblue',\r\n      color:\"white\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#63C5DA\",\r\n      },\r\n    // cta: {\r\n    //   marginTop: 20,\r\n    //   textTransform: 'initial',\r\n    //   backgroundColor:'black',\r\n    //   color:\"white\",\r\n\r\n    //   \"&:hover\": {\r\n    //     background: \"#d6d6d6\",\r\n    //     color: 'black',\r\n    //   },\r\n    },\r\n  }));\r\n\r\nexport default function PatientCard(props){\r\n\r\n\r\nconst{\r\n  name,\r\n  IC,\r\n  gender,\r\n  age,\r\n  phone,\r\n  address,\r\n  postal,\r\n  negeri,\r\n  city,\r\n  result,\r\n  image,\r\n  id,\r\n} = props;\r\n\r\n\r\n  const styles = useStyles();\r\n  const mediaStyles = useFourThreeCardMediaStyles();\r\n  const textCardContentStyles = useN01TextInfoContentStyles();\r\n  const shadowStyles = useBouncyShadowStyles();\r\n\r\n  return (\r\n      <Card className={cx(styles.root, shadowStyles.root)}>\r\n        <CardMedia\r\n          classes={mediaStyles}\r\n          \r\n          image={`http://localhost:5000/assets/images/${props.image.substring(13)}`} \r\n          //image={\"https://pic1.zhimg.com/v2-57520fcc0c61fc4feb7e8f2df8864b24_b.jpeg\"}\r\n        />\r\n        <CardContent className={styles.content}>\r\n          <TextInfoContent\r\n            classes={textCardContentStyles}\r\n            heading={props.name}\r\n            body={props.result}\r\n          />\r\n          <Link to = {`/patients/${props.id}`}>\r\n      \r\n            <Button id={props._id} fullWidth className={styles.cta}>\r\n              More Details <ChevronRightRounded/>\r\n            </Button>\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n\r\n\r\n\r\n}",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":6,"column":3,"nodeType":"232","messageId":"233","endLine":6,"endColumn":11},{"ruleId":"230","severity":1,"message":"234","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":12},{"ruleId":"230","severity":1,"message":"235","line":20,"column":8,"nodeType":"232","messageId":"233","endLine":20,"endColumn":21},{"ruleId":"230","severity":1,"message":"236","line":21,"column":10,"nodeType":"232","messageId":"233","endLine":21,"endColumn":17},{"ruleId":"230","severity":1,"message":"237","line":28,"column":9,"nodeType":"232","messageId":"233","endLine":28,"endColumn":15},{"ruleId":"230","severity":1,"message":"238","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":14},{"ruleId":"230","severity":1,"message":"239","line":5,"column":10,"nodeType":"232","messageId":"233","endLine":5,"endColumn":28},{"ruleId":"230","severity":1,"message":"240","line":6,"column":8,"nodeType":"232","messageId":"233","endLine":6,"endColumn":13},{"ruleId":"230","severity":1,"message":"241","line":63,"column":11,"nodeType":"232","messageId":"233","endLine":63,"endColumn":18},{"ruleId":"230","severity":1,"message":"242","line":74,"column":11,"nodeType":"232","messageId":"233","endLine":74,"endColumn":18},{"ruleId":"230","severity":1,"message":"243","line":89,"column":12,"nodeType":"232","messageId":"233","endLine":89,"endColumn":21},{"ruleId":"230","severity":1,"message":"244","line":90,"column":12,"nodeType":"232","messageId":"233","endLine":90,"endColumn":19},{"ruleId":"230","severity":1,"message":"245","line":91,"column":12,"nodeType":"232","messageId":"233","endLine":91,"endColumn":20},{"ruleId":"230","severity":1,"message":"246","line":92,"column":12,"nodeType":"232","messageId":"233","endLine":92,"endColumn":23},{"ruleId":"230","severity":1,"message":"247","line":93,"column":12,"nodeType":"232","messageId":"233","endLine":93,"endColumn":22},{"ruleId":"230","severity":1,"message":"248","line":94,"column":12,"nodeType":"232","messageId":"233","endLine":94,"endColumn":24},{"ruleId":"230","severity":1,"message":"249","line":95,"column":12,"nodeType":"232","messageId":"233","endLine":95,"endColumn":23},{"ruleId":"230","severity":1,"message":"250","line":96,"column":12,"nodeType":"232","messageId":"233","endLine":96,"endColumn":23},{"ruleId":"230","severity":1,"message":"251","line":97,"column":12,"nodeType":"232","messageId":"233","endLine":97,"endColumn":21},{"ruleId":"230","severity":1,"message":"252","line":99,"column":12,"nodeType":"232","messageId":"233","endLine":99,"endColumn":22},{"ruleId":"230","severity":1,"message":"253","line":99,"column":24,"nodeType":"232","messageId":"233","endLine":99,"endColumn":37},{"ruleId":"230","severity":1,"message":"252","line":113,"column":15,"nodeType":"232","messageId":"233","endLine":113,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":67,"column":11,"nodeType":"256","endLine":67,"endColumn":88},{"ruleId":"230","severity":1,"message":"257","line":24,"column":9,"nodeType":"232","messageId":"233","endLine":24,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":114,"column":31,"nodeType":"260","messageId":"261","endLine":114,"endColumn":33},{"ruleId":"254","severity":1,"message":"255","line":132,"column":13,"nodeType":"256","endLine":135,"endColumn":15},{"ruleId":"230","severity":1,"message":"262","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":27},{"ruleId":"230","severity":1,"message":"240","line":7,"column":8,"nodeType":"232","messageId":"233","endLine":7,"endColumn":13},{"ruleId":"230","severity":1,"message":"238","line":8,"column":9,"nodeType":"232","messageId":"233","endLine":8,"endColumn":13},{"ruleId":"230","severity":1,"message":"263","line":19,"column":11,"nodeType":"232","messageId":"233","endLine":19,"endColumn":18},{"ruleId":"230","severity":1,"message":"264","line":42,"column":11,"nodeType":"232","messageId":"233","endLine":42,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":196,"column":25,"nodeType":"256","endLine":196,"endColumn":126},{"ruleId":"230","severity":1,"message":"265","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":14},{"ruleId":"230","severity":1,"message":"238","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":14},{"ruleId":"230","severity":1,"message":"241","line":62,"column":11,"nodeType":"232","messageId":"233","endLine":62,"endColumn":18},{"ruleId":"230","severity":1,"message":"242","line":73,"column":11,"nodeType":"232","messageId":"233","endLine":73,"endColumn":18},{"ruleId":"230","severity":1,"message":"243","line":88,"column":12,"nodeType":"232","messageId":"233","endLine":88,"endColumn":21},{"ruleId":"230","severity":1,"message":"244","line":89,"column":12,"nodeType":"232","messageId":"233","endLine":89,"endColumn":19},{"ruleId":"230","severity":1,"message":"245","line":90,"column":12,"nodeType":"232","messageId":"233","endLine":90,"endColumn":20},{"ruleId":"230","severity":1,"message":"246","line":91,"column":12,"nodeType":"232","messageId":"233","endLine":91,"endColumn":23},{"ruleId":"230","severity":1,"message":"247","line":92,"column":12,"nodeType":"232","messageId":"233","endLine":92,"endColumn":22},{"ruleId":"230","severity":1,"message":"248","line":93,"column":12,"nodeType":"232","messageId":"233","endLine":93,"endColumn":24},{"ruleId":"230","severity":1,"message":"249","line":94,"column":12,"nodeType":"232","messageId":"233","endLine":94,"endColumn":23},{"ruleId":"230","severity":1,"message":"250","line":95,"column":12,"nodeType":"232","messageId":"233","endLine":95,"endColumn":23},{"ruleId":"230","severity":1,"message":"251","line":96,"column":12,"nodeType":"232","messageId":"233","endLine":96,"endColumn":21},{"ruleId":"230","severity":1,"message":"238","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":14},{"ruleId":"230","severity":1,"message":"266","line":2,"column":17,"nodeType":"232","messageId":"233","endLine":2,"endColumn":25},{"ruleId":"230","severity":1,"message":"240","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"267","line":16,"column":10,"nodeType":"232","messageId":"233","endLine":16,"endColumn":21},{"ruleId":"230","severity":1,"message":"268","line":16,"column":22,"nodeType":"232","messageId":"233","endLine":16,"endColumn":36},{"ruleId":"230","severity":1,"message":"269","line":202,"column":11,"nodeType":"232","messageId":"233","endLine":202,"endColumn":14},{"ruleId":"230","severity":1,"message":"270","line":211,"column":11,"nodeType":"232","messageId":"233","endLine":211,"endColumn":18},{"ruleId":"230","severity":1,"message":"271","line":8,"column":8,"nodeType":"232","messageId":"233","endLine":8,"endColumn":11},{"ruleId":"230","severity":1,"message":"272","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":17},{"ruleId":"230","severity":1,"message":"273","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":18},{"ruleId":"230","severity":1,"message":"274","line":37,"column":11,"nodeType":"232","messageId":"233","endLine":37,"endColumn":22},{"ruleId":"230","severity":1,"message":"275","line":45,"column":11,"nodeType":"232","messageId":"233","endLine":45,"endColumn":25},{"ruleId":"230","severity":1,"message":"276","line":50,"column":11,"nodeType":"232","messageId":"233","endLine":50,"endColumn":21},{"ruleId":"230","severity":1,"message":"277","line":56,"column":11,"nodeType":"232","messageId":"233","endLine":56,"endColumn":15},{"ruleId":"230","severity":1,"message":"278","line":92,"column":11,"nodeType":"232","messageId":"233","endLine":92,"endColumn":17},{"ruleId":"230","severity":1,"message":"279","line":95,"column":12,"nodeType":"232","messageId":"233","endLine":95,"endColumn":16},{"ruleId":"230","severity":1,"message":"280","line":95,"column":18,"nodeType":"232","messageId":"233","endLine":95,"endColumn":25},{"ruleId":"281","severity":1,"message":"282","line":138,"column":7,"nodeType":"283","endLine":138,"endColumn":9,"suggestions":"284"},{"ruleId":"258","severity":1,"message":"285","line":211,"column":50,"nodeType":"260","messageId":"286","endLine":211,"endColumn":52},{"ruleId":"230","severity":1,"message":"287","line":10,"column":10,"nodeType":"232","messageId":"233","endLine":10,"endColumn":32},{"ruleId":"230","severity":1,"message":"288","line":13,"column":9,"nodeType":"232","messageId":"233","endLine":13,"endColumn":13},{"ruleId":"230","severity":1,"message":"289","line":15,"column":8,"nodeType":"232","messageId":"233","endLine":15,"endColumn":15},{"ruleId":"230","severity":1,"message":"290","line":17,"column":10,"nodeType":"232","messageId":"233","endLine":17,"endColumn":34},{"ruleId":"230","severity":1,"message":"291","line":60,"column":3,"nodeType":"232","messageId":"233","endLine":60,"endColumn":7},{"ruleId":"230","severity":1,"message":"292","line":61,"column":3,"nodeType":"232","messageId":"233","endLine":61,"endColumn":5},{"ruleId":"230","severity":1,"message":"293","line":62,"column":3,"nodeType":"232","messageId":"233","endLine":62,"endColumn":9},{"ruleId":"230","severity":1,"message":"294","line":63,"column":3,"nodeType":"232","messageId":"233","endLine":63,"endColumn":6},{"ruleId":"230","severity":1,"message":"295","line":64,"column":3,"nodeType":"232","messageId":"233","endLine":64,"endColumn":8},{"ruleId":"230","severity":1,"message":"296","line":65,"column":3,"nodeType":"232","messageId":"233","endLine":65,"endColumn":10},{"ruleId":"230","severity":1,"message":"297","line":66,"column":3,"nodeType":"232","messageId":"233","endLine":66,"endColumn":9},{"ruleId":"230","severity":1,"message":"298","line":67,"column":3,"nodeType":"232","messageId":"233","endLine":67,"endColumn":9},{"ruleId":"230","severity":1,"message":"299","line":68,"column":3,"nodeType":"232","messageId":"233","endLine":68,"endColumn":7},{"ruleId":"230","severity":1,"message":"300","line":69,"column":3,"nodeType":"232","messageId":"233","endLine":69,"endColumn":9},{"ruleId":"230","severity":1,"message":"301","line":70,"column":3,"nodeType":"232","messageId":"233","endLine":70,"endColumn":8},{"ruleId":"230","severity":1,"message":"302","line":71,"column":3,"nodeType":"232","messageId":"233","endLine":71,"endColumn":5},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","'CreatePatient' is defined but never used.","'connect' is defined but never used.","'signIn' is assigned a value but never used.","'Link' is defined but never used.","'SentimentSatisfied' is defined but never used.","'axios' is defined but never used.","'subtext' is assigned a value but never used.","'results' is assigned a value but never used.","'nameError' is assigned a value but never used.","'icError' is assigned a value but never used.","'ageError' is assigned a value but never used.","'genderError' is assigned a value but never used.","'phoneError' is assigned a value but never used.","'addressError' is assigned a value but never used.","'postalError' is assigned a value but never used.","'negeriError' is assigned a value but never used.","'cityError' is assigned a value but never used.","'imageError' is assigned a value but never used.","'setImageError' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ViewAgendaRounded' is defined but never used.","'wrapper' is assigned a value but never used.","'title' is assigned a value but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'modalIsOpen' is assigned a value but never used.","'setModalIsOpen' is assigned a value but never used.","'bar' is assigned a value but never used.","'barFill' is assigned a value but never used.","'Box' is defined but never used.","'CardMedia' is defined but never used.","'background' is defined but never used.","'patientInfo' is assigned a value but never used.","'imageContainer' is assigned a value but never used.","'imageStyle' is assigned a value but never used.","'info' is assigned a value but never used.","'styles' is assigned a value but never used.","'xray' is assigned a value but never used.","'setXray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPatientsRequest'. Either include it or remove the dependency array.","ArrayExpression",["305"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'useWideCardMediaStyles' is defined but never used.","'Grid' is defined but never used.","'Details' is defined but never used.","'useSquareCardMediaStyles' is defined but never used.","'name' is assigned a value but never used.","'IC' is assigned a value but never used.","'gender' is assigned a value but never used.","'age' is assigned a value but never used.","'phone' is assigned a value but never used.","'address' is assigned a value but never used.","'postal' is assigned a value but never used.","'negeri' is assigned a value but never used.","'city' is assigned a value but never used.","'result' is assigned a value but never used.","'image' is assigned a value but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},"Update the dependencies array to be: [getPatientsRequest]",{"range":"308","text":"309"},[4282,4284],"[getPatientsRequest]"]